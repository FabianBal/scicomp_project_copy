/* automatically generated by rust-bindgen 0.71.1 */

pub const _MATH_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 31;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __LONG_DOUBLE_USES_FLOAT128: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const __TIMESIZE: u32 = 64;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_LIBM_SIMD_DECL_STUBS_H: u32 = 1;
pub const __HAVE_FLOAT128: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT128: u32 = 0;
pub const __HAVE_FLOAT64X: u32 = 1;
pub const __HAVE_FLOAT64X_LONG_DOUBLE: u32 = 1;
pub const __HAVE_FLOAT16: u32 = 0;
pub const __HAVE_FLOAT32: u32 = 1;
pub const __HAVE_FLOAT64: u32 = 1;
pub const __HAVE_FLOAT32X: u32 = 1;
pub const __HAVE_FLOAT128X: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT16: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT32: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT64: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT32X: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT64X: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT128X: u32 = 0;
pub const __HAVE_FLOATN_NOT_TYPEDEF: u32 = 0;
pub const __FP_LOGB0_IS_MIN: u32 = 1;
pub const __FP_LOGBNAN_IS_MIN: u32 = 1;
pub const FP_ILOGB0: i32 = -2147483648;
pub const FP_ILOGBNAN: i32 = -2147483648;
pub const __MATH_DECLARING_DOUBLE: u32 = 1;
pub const __MATH_DECLARING_FLOATN: u32 = 0;
pub const __MATH_DECLARE_LDOUBLE: u32 = 1;
pub const MATH_ERRNO: u32 = 1;
pub const MATH_ERREXCEPT: u32 = 2;
pub const math_errhandling: u32 = 3;
pub const M_E: f64 = 2.718281828459045;
pub const M_LOG2E: f64 = 1.4426950408889634;
pub const M_LOG10E: f64 = 0.4342944819032518;
pub const M_LN2: f64 = 0.6931471805599453;
pub const M_LN10: f64 = 2.302585092994046;
pub const M_PI: f64 = 3.141592653589793;
pub const M_PI_2: f64 = 1.5707963267948966;
pub const M_PI_4: f64 = 0.7853981633974483;
pub const M_1_PI: f64 = 0.3183098861837907;
pub const M_2_PI: f64 = 0.6366197723675814;
pub const M_2_SQRTPI: f64 = 1.1283791670955126;
pub const M_SQRT2: f64 = 1.4142135623730951;
pub const M_SQRT1_2: f64 = 0.7071067811865476;
pub const CUDART_VERSION: u32 = 10010;
pub const _LIBC_LIMITS_H_: u32 = 1;
pub const MB_LEN_MAX: u32 = 16;
pub const _BITS_POSIX1_LIM_H: u32 = 1;
pub const _POSIX_AIO_LISTIO_MAX: u32 = 2;
pub const _POSIX_AIO_MAX: u32 = 1;
pub const _POSIX_ARG_MAX: u32 = 4096;
pub const _POSIX_CHILD_MAX: u32 = 25;
pub const _POSIX_DELAYTIMER_MAX: u32 = 32;
pub const _POSIX_HOST_NAME_MAX: u32 = 255;
pub const _POSIX_LINK_MAX: u32 = 8;
pub const _POSIX_LOGIN_NAME_MAX: u32 = 9;
pub const _POSIX_MAX_CANON: u32 = 255;
pub const _POSIX_MAX_INPUT: u32 = 255;
pub const _POSIX_MQ_OPEN_MAX: u32 = 8;
pub const _POSIX_MQ_PRIO_MAX: u32 = 32;
pub const _POSIX_NAME_MAX: u32 = 14;
pub const _POSIX_NGROUPS_MAX: u32 = 8;
pub const _POSIX_OPEN_MAX: u32 = 20;
pub const _POSIX_PATH_MAX: u32 = 256;
pub const _POSIX_PIPE_BUF: u32 = 512;
pub const _POSIX_RE_DUP_MAX: u32 = 255;
pub const _POSIX_RTSIG_MAX: u32 = 8;
pub const _POSIX_SEM_NSEMS_MAX: u32 = 256;
pub const _POSIX_SEM_VALUE_MAX: u32 = 32767;
pub const _POSIX_SIGQUEUE_MAX: u32 = 32;
pub const _POSIX_SSIZE_MAX: u32 = 32767;
pub const _POSIX_STREAM_MAX: u32 = 8;
pub const _POSIX_SYMLINK_MAX: u32 = 255;
pub const _POSIX_SYMLOOP_MAX: u32 = 8;
pub const _POSIX_TIMER_MAX: u32 = 32;
pub const _POSIX_TTY_NAME_MAX: u32 = 9;
pub const _POSIX_TZNAME_MAX: u32 = 6;
pub const _POSIX_CLOCKRES_MIN: u32 = 20000000;
pub const NR_OPEN: u32 = 1024;
pub const NGROUPS_MAX: u32 = 65536;
pub const ARG_MAX: u32 = 131072;
pub const LINK_MAX: u32 = 127;
pub const MAX_CANON: u32 = 255;
pub const MAX_INPUT: u32 = 255;
pub const NAME_MAX: u32 = 255;
pub const PATH_MAX: u32 = 4096;
pub const PIPE_BUF: u32 = 4096;
pub const XATTR_NAME_MAX: u32 = 255;
pub const XATTR_SIZE_MAX: u32 = 65536;
pub const XATTR_LIST_MAX: u32 = 65536;
pub const RTSIG_MAX: u32 = 32;
pub const _POSIX_THREAD_KEYS_MAX: u32 = 128;
pub const PTHREAD_KEYS_MAX: u32 = 1024;
pub const _POSIX_THREAD_DESTRUCTOR_ITERATIONS: u32 = 4;
pub const PTHREAD_DESTRUCTOR_ITERATIONS: u32 = 4;
pub const _POSIX_THREAD_THREADS_MAX: u32 = 64;
pub const AIO_PRIO_DELTA_MAX: u32 = 20;
pub const PTHREAD_STACK_MIN: u32 = 16384;
pub const DELAYTIMER_MAX: u32 = 2147483647;
pub const TTY_NAME_MAX: u32 = 32;
pub const LOGIN_NAME_MAX: u32 = 256;
pub const HOST_NAME_MAX: u32 = 64;
pub const MQ_PRIO_MAX: u32 = 32768;
pub const SEM_VALUE_MAX: u32 = 2147483647;
pub const _BITS_POSIX2_LIM_H: u32 = 1;
pub const _POSIX2_BC_BASE_MAX: u32 = 99;
pub const _POSIX2_BC_DIM_MAX: u32 = 2048;
pub const _POSIX2_BC_SCALE_MAX: u32 = 99;
pub const _POSIX2_BC_STRING_MAX: u32 = 1000;
pub const _POSIX2_COLL_WEIGHTS_MAX: u32 = 2;
pub const _POSIX2_EXPR_NEST_MAX: u32 = 32;
pub const _POSIX2_LINE_MAX: u32 = 2048;
pub const _POSIX2_RE_DUP_MAX: u32 = 255;
pub const _POSIX2_CHARCLASS_NAME_MAX: u32 = 14;
pub const BC_BASE_MAX: u32 = 99;
pub const BC_DIM_MAX: u32 = 2048;
pub const BC_SCALE_MAX: u32 = 99;
pub const BC_STRING_MAX: u32 = 1000;
pub const COLL_WEIGHTS_MAX: u32 = 255;
pub const EXPR_NEST_MAX: u32 = 32;
pub const LINE_MAX: u32 = 2048;
pub const CHARCLASS_NAME_MAX: u32 = 2048;
pub const RE_DUP_MAX: u32 = 32767;
pub const cudaHostAllocDefault: u32 = 0;
pub const cudaHostAllocPortable: u32 = 1;
pub const cudaHostAllocMapped: u32 = 2;
pub const cudaHostAllocWriteCombined: u32 = 4;
pub const cudaHostRegisterDefault: u32 = 0;
pub const cudaHostRegisterPortable: u32 = 1;
pub const cudaHostRegisterMapped: u32 = 2;
pub const cudaHostRegisterIoMemory: u32 = 4;
pub const cudaPeerAccessDefault: u32 = 0;
pub const cudaStreamDefault: u32 = 0;
pub const cudaStreamNonBlocking: u32 = 1;
pub const cudaEventDefault: u32 = 0;
pub const cudaEventBlockingSync: u32 = 1;
pub const cudaEventDisableTiming: u32 = 2;
pub const cudaEventInterprocess: u32 = 4;
pub const cudaDeviceScheduleAuto: u32 = 0;
pub const cudaDeviceScheduleSpin: u32 = 1;
pub const cudaDeviceScheduleYield: u32 = 2;
pub const cudaDeviceScheduleBlockingSync: u32 = 4;
pub const cudaDeviceBlockingSync: u32 = 4;
pub const cudaDeviceScheduleMask: u32 = 7;
pub const cudaDeviceMapHost: u32 = 8;
pub const cudaDeviceLmemResizeToMax: u32 = 16;
pub const cudaDeviceMask: u32 = 31;
pub const cudaArrayDefault: u32 = 0;
pub const cudaArrayLayered: u32 = 1;
pub const cudaArraySurfaceLoadStore: u32 = 2;
pub const cudaArrayCubemap: u32 = 4;
pub const cudaArrayTextureGather: u32 = 8;
pub const cudaArrayColorAttachment: u32 = 32;
pub const cudaIpcMemLazyEnablePeerAccess: u32 = 1;
pub const cudaMemAttachGlobal: u32 = 1;
pub const cudaMemAttachHost: u32 = 2;
pub const cudaMemAttachSingle: u32 = 4;
pub const cudaOccupancyDefault: u32 = 0;
pub const cudaOccupancyDisableCachingOverride: u32 = 1;
pub const cudaCooperativeLaunchMultiDeviceNoPreSync: u32 = 1;
pub const cudaCooperativeLaunchMultiDeviceNoPostSync: u32 = 2;
pub const CUDA_IPC_HANDLE_SIZE: u32 = 64;
pub const cudaExternalMemoryDedicated: u32 = 1;
pub const cudaSurfaceType1D: u32 = 1;
pub const cudaSurfaceType2D: u32 = 2;
pub const cudaSurfaceType3D: u32 = 3;
pub const cudaSurfaceTypeCubemap: u32 = 12;
pub const cudaSurfaceType1DLayered: u32 = 241;
pub const cudaSurfaceType2DLayered: u32 = 242;
pub const cudaSurfaceTypeCubemapLayered: u32 = 252;
pub const cudaTextureType1D: u32 = 1;
pub const cudaTextureType2D: u32 = 2;
pub const cudaTextureType3D: u32 = 3;
pub const cudaTextureTypeCubemap: u32 = 12;
pub const cudaTextureType1DLayered: u32 = 241;
pub const cudaTextureType2DLayered: u32 = 242;
pub const cudaTextureTypeCubemapLayered: u32 = 252;
pub const _STDINT_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub const _STDIO_H: u32 = 1;
pub const __GNUC_VA_LIST: u32 = 1;
pub const _____fpos_t_defined: u32 = 1;
pub const ____mbstate_t_defined: u32 = 1;
pub const _____fpos64_t_defined: u32 = 1;
pub const ____FILE_defined: u32 = 1;
pub const __FILE_defined: u32 = 1;
pub const __struct_FILE_defined: u32 = 1;
pub const _IO_EOF_SEEN: u32 = 16;
pub const _IO_ERR_SEEN: u32 = 32;
pub const _IO_USER_LOCK: u32 = 32768;
pub const _IOFBF: u32 = 0;
pub const _IOLBF: u32 = 1;
pub const _IONBF: u32 = 2;
pub const BUFSIZ: u32 = 8192;
pub const EOF: i32 = -1;
pub const SEEK_SET: u32 = 0;
pub const SEEK_CUR: u32 = 1;
pub const SEEK_END: u32 = 2;
pub const P_tmpdir: &[u8; 5] = b"/tmp\0";
pub const _BITS_STDIO_LIM_H: u32 = 1;
pub const L_tmpnam: u32 = 20;
pub const TMP_MAX: u32 = 238328;
pub const FILENAME_MAX: u32 = 4096;
pub const L_ctermid: u32 = 9;
pub const FOPEN_MAX: u32 = 16;
pub const CUSPARSE_VER_MAJOR: u32 = 12;
pub const CUSPARSE_VER_MINOR: u32 = 5;
pub const CUSPARSE_VER_PATCH: u32 = 7;
pub const CUSPARSE_VER_BUILD: u32 = 53;
pub const CUSPARSE_VERSION: u32 = 12507;
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __intmax_t = ::std::os::raw::c_long;
pub type __uintmax_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __fsid_t"][::std::mem::size_of::<__fsid_t>() - 8usize];
    ["Alignment of __fsid_t"][::std::mem::align_of::<__fsid_t>() - 4usize];
    ["Offset of field: __fsid_t::__val"][::std::mem::offset_of!(__fsid_t, __val) - 0usize];
};
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type __sig_atomic_t = ::std::os::raw::c_int;
pub type _Float32 = f32;
pub type _Float64 = f64;
pub type _Float32x = f64;
pub type _Float64x = u128;
pub type float_t = f32;
pub type double_t = f64;
unsafe extern "C" {
    pub fn __fpclassify(__value: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __signbit(__value: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __isinf(__value: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __finite(__value: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __isnan(__value: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __iseqsig(__x: f64, __y: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __issignaling(__value: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn acos(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __acos(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn asin(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __asin(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn atan(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __atan(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn atan2(__y: f64, __x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __atan2(__y: f64, __x: f64) -> f64;
}
unsafe extern "C" {
    pub fn cos(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __cos(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn sin(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __sin(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn tan(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __tan(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn cosh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __cosh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn sinh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __sinh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn tanh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __tanh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn acosh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __acosh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn asinh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __asinh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn atanh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __atanh(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn exp(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __exp(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn frexp(__x: f64, __exponent: *mut ::std::os::raw::c_int) -> f64;
}
unsafe extern "C" {
    pub fn __frexp(__x: f64, __exponent: *mut ::std::os::raw::c_int) -> f64;
}
unsafe extern "C" {
    pub fn ldexp(__x: f64, __exponent: ::std::os::raw::c_int) -> f64;
}
unsafe extern "C" {
    pub fn __ldexp(__x: f64, __exponent: ::std::os::raw::c_int) -> f64;
}
unsafe extern "C" {
    pub fn log(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __log(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn log10(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __log10(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn modf(__x: f64, __iptr: *mut f64) -> f64;
}
unsafe extern "C" {
    pub fn __modf(__x: f64, __iptr: *mut f64) -> f64;
}
unsafe extern "C" {
    pub fn expm1(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __expm1(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn log1p(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __log1p(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn logb(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __logb(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn exp2(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __exp2(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn log2(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __log2(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn pow(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn __pow(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn sqrt(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __sqrt(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn hypot(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn __hypot(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn cbrt(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __cbrt(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn ceil(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __ceil(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn fabs(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __fabs(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn floor(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __floor(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn fmod(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn __fmod(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn isinf(__value: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn finite(__value: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn drem(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn __drem(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn significand(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __significand(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn copysign(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn __copysign(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn nan(__tagb: *const ::std::os::raw::c_char) -> f64;
}
unsafe extern "C" {
    pub fn __nan(__tagb: *const ::std::os::raw::c_char) -> f64;
}
unsafe extern "C" {
    pub fn isnan(__value: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn j0(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn __j0(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn j1(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn __j1(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn jn(arg1: ::std::os::raw::c_int, arg2: f64) -> f64;
}
unsafe extern "C" {
    pub fn __jn(arg1: ::std::os::raw::c_int, arg2: f64) -> f64;
}
unsafe extern "C" {
    pub fn y0(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn __y0(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn y1(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn __y1(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn yn(arg1: ::std::os::raw::c_int, arg2: f64) -> f64;
}
unsafe extern "C" {
    pub fn __yn(arg1: ::std::os::raw::c_int, arg2: f64) -> f64;
}
unsafe extern "C" {
    pub fn erf(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn __erf(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn erfc(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn __erfc(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn lgamma(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn __lgamma(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn tgamma(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn __tgamma(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn gamma(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn __gamma(arg1: f64) -> f64;
}
unsafe extern "C" {
    pub fn lgamma_r(arg1: f64, __signgamp: *mut ::std::os::raw::c_int) -> f64;
}
unsafe extern "C" {
    pub fn __lgamma_r(arg1: f64, __signgamp: *mut ::std::os::raw::c_int) -> f64;
}
unsafe extern "C" {
    pub fn rint(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __rint(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn nextafter(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn __nextafter(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn nexttoward(__x: f64, __y: u128) -> f64;
}
unsafe extern "C" {
    pub fn __nexttoward(__x: f64, __y: u128) -> f64;
}
unsafe extern "C" {
    pub fn remainder(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn __remainder(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn scalbn(__x: f64, __n: ::std::os::raw::c_int) -> f64;
}
unsafe extern "C" {
    pub fn __scalbn(__x: f64, __n: ::std::os::raw::c_int) -> f64;
}
unsafe extern "C" {
    pub fn ilogb(__x: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __ilogb(__x: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn scalbln(__x: f64, __n: ::std::os::raw::c_long) -> f64;
}
unsafe extern "C" {
    pub fn __scalbln(__x: f64, __n: ::std::os::raw::c_long) -> f64;
}
unsafe extern "C" {
    pub fn nearbyint(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __nearbyint(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn round(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __round(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn trunc(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn __trunc(__x: f64) -> f64;
}
unsafe extern "C" {
    pub fn remquo(__x: f64, __y: f64, __quo: *mut ::std::os::raw::c_int) -> f64;
}
unsafe extern "C" {
    pub fn __remquo(__x: f64, __y: f64, __quo: *mut ::std::os::raw::c_int) -> f64;
}
unsafe extern "C" {
    pub fn lrint(__x: f64) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn __lrint(__x: f64) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn llrint(__x: f64) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn __llrint(__x: f64) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn lround(__x: f64) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn __lround(__x: f64) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn llround(__x: f64) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn __llround(__x: f64) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn fdim(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn __fdim(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn fmax(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn __fmax(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn fmin(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn __fmin(__x: f64, __y: f64) -> f64;
}
unsafe extern "C" {
    pub fn fma(__x: f64, __y: f64, __z: f64) -> f64;
}
unsafe extern "C" {
    pub fn __fma(__x: f64, __y: f64, __z: f64) -> f64;
}
unsafe extern "C" {
    pub fn scalb(__x: f64, __n: f64) -> f64;
}
unsafe extern "C" {
    pub fn __scalb(__x: f64, __n: f64) -> f64;
}
unsafe extern "C" {
    pub fn __fpclassifyf(__value: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __signbitf(__value: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __isinff(__value: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __finitef(__value: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __isnanf(__value: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __iseqsigf(__x: f32, __y: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __issignalingf(__value: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn acosf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __acosf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn asinf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __asinf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn atanf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __atanf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn atan2f(__y: f32, __x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __atan2f(__y: f32, __x: f32) -> f32;
}
unsafe extern "C" {
    pub fn cosf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __cosf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn sinf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __sinf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn tanf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __tanf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn coshf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __coshf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn sinhf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __sinhf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn tanhf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __tanhf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn acoshf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __acoshf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn asinhf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __asinhf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn atanhf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __atanhf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn expf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __expf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn frexpf(__x: f32, __exponent: *mut ::std::os::raw::c_int) -> f32;
}
unsafe extern "C" {
    pub fn __frexpf(__x: f32, __exponent: *mut ::std::os::raw::c_int) -> f32;
}
unsafe extern "C" {
    pub fn ldexpf(__x: f32, __exponent: ::std::os::raw::c_int) -> f32;
}
unsafe extern "C" {
    pub fn __ldexpf(__x: f32, __exponent: ::std::os::raw::c_int) -> f32;
}
unsafe extern "C" {
    pub fn logf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __logf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn log10f(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __log10f(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn modff(__x: f32, __iptr: *mut f32) -> f32;
}
unsafe extern "C" {
    pub fn __modff(__x: f32, __iptr: *mut f32) -> f32;
}
unsafe extern "C" {
    pub fn expm1f(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __expm1f(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn log1pf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __log1pf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn logbf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __logbf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn exp2f(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __exp2f(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn log2f(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __log2f(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn powf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn __powf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn sqrtf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __sqrtf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn hypotf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn __hypotf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn cbrtf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __cbrtf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn ceilf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __ceilf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn fabsf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __fabsf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn floorf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __floorf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn fmodf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn __fmodf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn isinff(__value: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn finitef(__value: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn dremf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn __dremf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn significandf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __significandf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn copysignf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn __copysignf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn nanf(__tagb: *const ::std::os::raw::c_char) -> f32;
}
unsafe extern "C" {
    pub fn __nanf(__tagb: *const ::std::os::raw::c_char) -> f32;
}
unsafe extern "C" {
    pub fn isnanf(__value: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn j0f(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn __j0f(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn j1f(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn __j1f(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn jnf(arg1: ::std::os::raw::c_int, arg2: f32) -> f32;
}
unsafe extern "C" {
    pub fn __jnf(arg1: ::std::os::raw::c_int, arg2: f32) -> f32;
}
unsafe extern "C" {
    pub fn y0f(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn __y0f(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn y1f(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn __y1f(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn ynf(arg1: ::std::os::raw::c_int, arg2: f32) -> f32;
}
unsafe extern "C" {
    pub fn __ynf(arg1: ::std::os::raw::c_int, arg2: f32) -> f32;
}
unsafe extern "C" {
    pub fn erff(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn __erff(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn erfcf(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn __erfcf(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn lgammaf(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn __lgammaf(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn tgammaf(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn __tgammaf(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn gammaf(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn __gammaf(arg1: f32) -> f32;
}
unsafe extern "C" {
    pub fn lgammaf_r(arg1: f32, __signgamp: *mut ::std::os::raw::c_int) -> f32;
}
unsafe extern "C" {
    pub fn __lgammaf_r(arg1: f32, __signgamp: *mut ::std::os::raw::c_int) -> f32;
}
unsafe extern "C" {
    pub fn rintf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __rintf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn nextafterf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn __nextafterf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn nexttowardf(__x: f32, __y: u128) -> f32;
}
unsafe extern "C" {
    pub fn __nexttowardf(__x: f32, __y: u128) -> f32;
}
unsafe extern "C" {
    pub fn remainderf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn __remainderf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn scalbnf(__x: f32, __n: ::std::os::raw::c_int) -> f32;
}
unsafe extern "C" {
    pub fn __scalbnf(__x: f32, __n: ::std::os::raw::c_int) -> f32;
}
unsafe extern "C" {
    pub fn ilogbf(__x: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __ilogbf(__x: f32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn scalblnf(__x: f32, __n: ::std::os::raw::c_long) -> f32;
}
unsafe extern "C" {
    pub fn __scalblnf(__x: f32, __n: ::std::os::raw::c_long) -> f32;
}
unsafe extern "C" {
    pub fn nearbyintf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __nearbyintf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn roundf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __roundf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn truncf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn __truncf(__x: f32) -> f32;
}
unsafe extern "C" {
    pub fn remquof(__x: f32, __y: f32, __quo: *mut ::std::os::raw::c_int) -> f32;
}
unsafe extern "C" {
    pub fn __remquof(__x: f32, __y: f32, __quo: *mut ::std::os::raw::c_int) -> f32;
}
unsafe extern "C" {
    pub fn lrintf(__x: f32) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn __lrintf(__x: f32) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn llrintf(__x: f32) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn __llrintf(__x: f32) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn lroundf(__x: f32) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn __lroundf(__x: f32) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn llroundf(__x: f32) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn __llroundf(__x: f32) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn fdimf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn __fdimf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn fmaxf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn __fmaxf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn fminf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn __fminf(__x: f32, __y: f32) -> f32;
}
unsafe extern "C" {
    pub fn fmaf(__x: f32, __y: f32, __z: f32) -> f32;
}
unsafe extern "C" {
    pub fn __fmaf(__x: f32, __y: f32, __z: f32) -> f32;
}
unsafe extern "C" {
    pub fn scalbf(__x: f32, __n: f32) -> f32;
}
unsafe extern "C" {
    pub fn __scalbf(__x: f32, __n: f32) -> f32;
}
unsafe extern "C" {
    pub fn __fpclassifyl(__value: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __signbitl(__value: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __isinfl(__value: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __finitel(__value: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __isnanl(__value: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __iseqsigl(__x: u128, __y: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __issignalingl(__value: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn acosl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __acosl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn asinl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __asinl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn atanl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __atanl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn atan2l(__y: u128, __x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __atan2l(__y: u128, __x: u128) -> u128;
}
unsafe extern "C" {
    pub fn cosl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __cosl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn sinl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __sinl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn tanl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __tanl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn coshl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __coshl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn sinhl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __sinhl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn tanhl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __tanhl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn acoshl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __acoshl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn asinhl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __asinhl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn atanhl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __atanhl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn expl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __expl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn frexpl(__x: u128, __exponent: *mut ::std::os::raw::c_int) -> u128;
}
unsafe extern "C" {
    pub fn __frexpl(__x: u128, __exponent: *mut ::std::os::raw::c_int) -> u128;
}
unsafe extern "C" {
    pub fn ldexpl(__x: u128, __exponent: ::std::os::raw::c_int) -> u128;
}
unsafe extern "C" {
    pub fn __ldexpl(__x: u128, __exponent: ::std::os::raw::c_int) -> u128;
}
unsafe extern "C" {
    pub fn logl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __logl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn log10l(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __log10l(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn modfl(__x: u128, __iptr: *mut u128) -> u128;
}
unsafe extern "C" {
    pub fn __modfl(__x: u128, __iptr: *mut u128) -> u128;
}
unsafe extern "C" {
    pub fn expm1l(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __expm1l(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn log1pl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __log1pl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn logbl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __logbl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn exp2l(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __exp2l(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn log2l(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __log2l(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn powl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __powl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn sqrtl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __sqrtl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn hypotl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __hypotl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn cbrtl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __cbrtl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn ceill(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __ceill(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn fabsl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __fabsl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn floorl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __floorl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn fmodl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __fmodl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn isinfl(__value: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn finitel(__value: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn dreml(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __dreml(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn significandl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __significandl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn copysignl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __copysignl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn nanl(__tagb: *const ::std::os::raw::c_char) -> u128;
}
unsafe extern "C" {
    pub fn __nanl(__tagb: *const ::std::os::raw::c_char) -> u128;
}
unsafe extern "C" {
    pub fn isnanl(__value: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn j0l(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn __j0l(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn j1l(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn __j1l(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn jnl(arg1: ::std::os::raw::c_int, arg2: u128) -> u128;
}
unsafe extern "C" {
    pub fn __jnl(arg1: ::std::os::raw::c_int, arg2: u128) -> u128;
}
unsafe extern "C" {
    pub fn y0l(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn __y0l(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn y1l(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn __y1l(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn ynl(arg1: ::std::os::raw::c_int, arg2: u128) -> u128;
}
unsafe extern "C" {
    pub fn __ynl(arg1: ::std::os::raw::c_int, arg2: u128) -> u128;
}
unsafe extern "C" {
    pub fn erfl(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn __erfl(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn erfcl(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn __erfcl(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn lgammal(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn __lgammal(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn tgammal(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn __tgammal(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn gammal(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn __gammal(arg1: u128) -> u128;
}
unsafe extern "C" {
    pub fn lgammal_r(arg1: u128, __signgamp: *mut ::std::os::raw::c_int) -> u128;
}
unsafe extern "C" {
    pub fn __lgammal_r(arg1: u128, __signgamp: *mut ::std::os::raw::c_int) -> u128;
}
unsafe extern "C" {
    pub fn rintl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __rintl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn nextafterl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __nextafterl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn nexttowardl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __nexttowardl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn remainderl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __remainderl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn scalbnl(__x: u128, __n: ::std::os::raw::c_int) -> u128;
}
unsafe extern "C" {
    pub fn __scalbnl(__x: u128, __n: ::std::os::raw::c_int) -> u128;
}
unsafe extern "C" {
    pub fn ilogbl(__x: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __ilogbl(__x: u128) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn scalblnl(__x: u128, __n: ::std::os::raw::c_long) -> u128;
}
unsafe extern "C" {
    pub fn __scalblnl(__x: u128, __n: ::std::os::raw::c_long) -> u128;
}
unsafe extern "C" {
    pub fn nearbyintl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __nearbyintl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn roundl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __roundl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn truncl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn __truncl(__x: u128) -> u128;
}
unsafe extern "C" {
    pub fn remquol(__x: u128, __y: u128, __quo: *mut ::std::os::raw::c_int) -> u128;
}
unsafe extern "C" {
    pub fn __remquol(__x: u128, __y: u128, __quo: *mut ::std::os::raw::c_int) -> u128;
}
unsafe extern "C" {
    pub fn lrintl(__x: u128) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn __lrintl(__x: u128) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn llrintl(__x: u128) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn __llrintl(__x: u128) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn lroundl(__x: u128) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn __lroundl(__x: u128) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn llroundl(__x: u128) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn __llroundl(__x: u128) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn fdiml(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __fdiml(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn fmaxl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __fmaxl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn fminl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn __fminl(__x: u128, __y: u128) -> u128;
}
unsafe extern "C" {
    pub fn fmal(__x: u128, __y: u128, __z: u128) -> u128;
}
unsafe extern "C" {
    pub fn __fmal(__x: u128, __y: u128, __z: u128) -> u128;
}
unsafe extern "C" {
    pub fn scalbl(__x: u128, __n: u128) -> u128;
}
unsafe extern "C" {
    pub fn __scalbl(__x: u128, __n: u128) -> u128;
}
unsafe extern "C" {
    pub static mut signgam: ::std::os::raw::c_int;
}
pub const FP_NAN: _bindgen_ty_1 = 0;
pub const FP_INFINITE: _bindgen_ty_1 = 1;
pub const FP_ZERO: _bindgen_ty_1 = 2;
pub const FP_SUBNORMAL: _bindgen_ty_1 = 3;
pub const FP_NORMAL: _bindgen_ty_1 = 4;
pub type _bindgen_ty_1 = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct char1 {
    pub x: ::std::os::raw::c_schar,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of char1"][::std::mem::size_of::<char1>() - 1usize];
    ["Alignment of char1"][::std::mem::align_of::<char1>() - 1usize];
    ["Offset of field: char1::x"][::std::mem::offset_of!(char1, x) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct uchar1 {
    pub x: ::std::os::raw::c_uchar,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of uchar1"][::std::mem::size_of::<uchar1>() - 1usize];
    ["Alignment of uchar1"][::std::mem::align_of::<uchar1>() - 1usize];
    ["Offset of field: uchar1::x"][::std::mem::offset_of!(uchar1, x) - 0usize];
};
#[repr(C)]
#[repr(align(2))]
#[derive(Debug, Copy, Clone)]
pub struct char2 {
    pub x: ::std::os::raw::c_schar,
    pub y: ::std::os::raw::c_schar,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of char2"][::std::mem::size_of::<char2>() - 2usize];
    ["Alignment of char2"][::std::mem::align_of::<char2>() - 2usize];
    ["Offset of field: char2::x"][::std::mem::offset_of!(char2, x) - 0usize];
    ["Offset of field: char2::y"][::std::mem::offset_of!(char2, y) - 1usize];
};
#[repr(C)]
#[repr(align(2))]
#[derive(Debug, Copy, Clone)]
pub struct uchar2 {
    pub x: ::std::os::raw::c_uchar,
    pub y: ::std::os::raw::c_uchar,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of uchar2"][::std::mem::size_of::<uchar2>() - 2usize];
    ["Alignment of uchar2"][::std::mem::align_of::<uchar2>() - 2usize];
    ["Offset of field: uchar2::x"][::std::mem::offset_of!(uchar2, x) - 0usize];
    ["Offset of field: uchar2::y"][::std::mem::offset_of!(uchar2, y) - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct char3 {
    pub x: ::std::os::raw::c_schar,
    pub y: ::std::os::raw::c_schar,
    pub z: ::std::os::raw::c_schar,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of char3"][::std::mem::size_of::<char3>() - 3usize];
    ["Alignment of char3"][::std::mem::align_of::<char3>() - 1usize];
    ["Offset of field: char3::x"][::std::mem::offset_of!(char3, x) - 0usize];
    ["Offset of field: char3::y"][::std::mem::offset_of!(char3, y) - 1usize];
    ["Offset of field: char3::z"][::std::mem::offset_of!(char3, z) - 2usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct uchar3 {
    pub x: ::std::os::raw::c_uchar,
    pub y: ::std::os::raw::c_uchar,
    pub z: ::std::os::raw::c_uchar,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of uchar3"][::std::mem::size_of::<uchar3>() - 3usize];
    ["Alignment of uchar3"][::std::mem::align_of::<uchar3>() - 1usize];
    ["Offset of field: uchar3::x"][::std::mem::offset_of!(uchar3, x) - 0usize];
    ["Offset of field: uchar3::y"][::std::mem::offset_of!(uchar3, y) - 1usize];
    ["Offset of field: uchar3::z"][::std::mem::offset_of!(uchar3, z) - 2usize];
};
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct char4 {
    pub x: ::std::os::raw::c_schar,
    pub y: ::std::os::raw::c_schar,
    pub z: ::std::os::raw::c_schar,
    pub w: ::std::os::raw::c_schar,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of char4"][::std::mem::size_of::<char4>() - 4usize];
    ["Alignment of char4"][::std::mem::align_of::<char4>() - 4usize];
    ["Offset of field: char4::x"][::std::mem::offset_of!(char4, x) - 0usize];
    ["Offset of field: char4::y"][::std::mem::offset_of!(char4, y) - 1usize];
    ["Offset of field: char4::z"][::std::mem::offset_of!(char4, z) - 2usize];
    ["Offset of field: char4::w"][::std::mem::offset_of!(char4, w) - 3usize];
};
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct uchar4 {
    pub x: ::std::os::raw::c_uchar,
    pub y: ::std::os::raw::c_uchar,
    pub z: ::std::os::raw::c_uchar,
    pub w: ::std::os::raw::c_uchar,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of uchar4"][::std::mem::size_of::<uchar4>() - 4usize];
    ["Alignment of uchar4"][::std::mem::align_of::<uchar4>() - 4usize];
    ["Offset of field: uchar4::x"][::std::mem::offset_of!(uchar4, x) - 0usize];
    ["Offset of field: uchar4::y"][::std::mem::offset_of!(uchar4, y) - 1usize];
    ["Offset of field: uchar4::z"][::std::mem::offset_of!(uchar4, z) - 2usize];
    ["Offset of field: uchar4::w"][::std::mem::offset_of!(uchar4, w) - 3usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct short1 {
    pub x: ::std::os::raw::c_short,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of short1"][::std::mem::size_of::<short1>() - 2usize];
    ["Alignment of short1"][::std::mem::align_of::<short1>() - 2usize];
    ["Offset of field: short1::x"][::std::mem::offset_of!(short1, x) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ushort1 {
    pub x: ::std::os::raw::c_ushort,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ushort1"][::std::mem::size_of::<ushort1>() - 2usize];
    ["Alignment of ushort1"][::std::mem::align_of::<ushort1>() - 2usize];
    ["Offset of field: ushort1::x"][::std::mem::offset_of!(ushort1, x) - 0usize];
};
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct short2 {
    pub x: ::std::os::raw::c_short,
    pub y: ::std::os::raw::c_short,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of short2"][::std::mem::size_of::<short2>() - 4usize];
    ["Alignment of short2"][::std::mem::align_of::<short2>() - 4usize];
    ["Offset of field: short2::x"][::std::mem::offset_of!(short2, x) - 0usize];
    ["Offset of field: short2::y"][::std::mem::offset_of!(short2, y) - 2usize];
};
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct ushort2 {
    pub x: ::std::os::raw::c_ushort,
    pub y: ::std::os::raw::c_ushort,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ushort2"][::std::mem::size_of::<ushort2>() - 4usize];
    ["Alignment of ushort2"][::std::mem::align_of::<ushort2>() - 4usize];
    ["Offset of field: ushort2::x"][::std::mem::offset_of!(ushort2, x) - 0usize];
    ["Offset of field: ushort2::y"][::std::mem::offset_of!(ushort2, y) - 2usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct short3 {
    pub x: ::std::os::raw::c_short,
    pub y: ::std::os::raw::c_short,
    pub z: ::std::os::raw::c_short,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of short3"][::std::mem::size_of::<short3>() - 6usize];
    ["Alignment of short3"][::std::mem::align_of::<short3>() - 2usize];
    ["Offset of field: short3::x"][::std::mem::offset_of!(short3, x) - 0usize];
    ["Offset of field: short3::y"][::std::mem::offset_of!(short3, y) - 2usize];
    ["Offset of field: short3::z"][::std::mem::offset_of!(short3, z) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ushort3 {
    pub x: ::std::os::raw::c_ushort,
    pub y: ::std::os::raw::c_ushort,
    pub z: ::std::os::raw::c_ushort,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ushort3"][::std::mem::size_of::<ushort3>() - 6usize];
    ["Alignment of ushort3"][::std::mem::align_of::<ushort3>() - 2usize];
    ["Offset of field: ushort3::x"][::std::mem::offset_of!(ushort3, x) - 0usize];
    ["Offset of field: ushort3::y"][::std::mem::offset_of!(ushort3, y) - 2usize];
    ["Offset of field: ushort3::z"][::std::mem::offset_of!(ushort3, z) - 4usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct short4 {
    pub x: ::std::os::raw::c_short,
    pub y: ::std::os::raw::c_short,
    pub z: ::std::os::raw::c_short,
    pub w: ::std::os::raw::c_short,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of short4"][::std::mem::size_of::<short4>() - 8usize];
    ["Alignment of short4"][::std::mem::align_of::<short4>() - 8usize];
    ["Offset of field: short4::x"][::std::mem::offset_of!(short4, x) - 0usize];
    ["Offset of field: short4::y"][::std::mem::offset_of!(short4, y) - 2usize];
    ["Offset of field: short4::z"][::std::mem::offset_of!(short4, z) - 4usize];
    ["Offset of field: short4::w"][::std::mem::offset_of!(short4, w) - 6usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct ushort4 {
    pub x: ::std::os::raw::c_ushort,
    pub y: ::std::os::raw::c_ushort,
    pub z: ::std::os::raw::c_ushort,
    pub w: ::std::os::raw::c_ushort,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ushort4"][::std::mem::size_of::<ushort4>() - 8usize];
    ["Alignment of ushort4"][::std::mem::align_of::<ushort4>() - 8usize];
    ["Offset of field: ushort4::x"][::std::mem::offset_of!(ushort4, x) - 0usize];
    ["Offset of field: ushort4::y"][::std::mem::offset_of!(ushort4, y) - 2usize];
    ["Offset of field: ushort4::z"][::std::mem::offset_of!(ushort4, z) - 4usize];
    ["Offset of field: ushort4::w"][::std::mem::offset_of!(ushort4, w) - 6usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct int1 {
    pub x: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of int1"][::std::mem::size_of::<int1>() - 4usize];
    ["Alignment of int1"][::std::mem::align_of::<int1>() - 4usize];
    ["Offset of field: int1::x"][::std::mem::offset_of!(int1, x) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct uint1 {
    pub x: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of uint1"][::std::mem::size_of::<uint1>() - 4usize];
    ["Alignment of uint1"][::std::mem::align_of::<uint1>() - 4usize];
    ["Offset of field: uint1::x"][::std::mem::offset_of!(uint1, x) - 0usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct int2 {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of int2"][::std::mem::size_of::<int2>() - 8usize];
    ["Alignment of int2"][::std::mem::align_of::<int2>() - 8usize];
    ["Offset of field: int2::x"][::std::mem::offset_of!(int2, x) - 0usize];
    ["Offset of field: int2::y"][::std::mem::offset_of!(int2, y) - 4usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct uint2 {
    pub x: ::std::os::raw::c_uint,
    pub y: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of uint2"][::std::mem::size_of::<uint2>() - 8usize];
    ["Alignment of uint2"][::std::mem::align_of::<uint2>() - 8usize];
    ["Offset of field: uint2::x"][::std::mem::offset_of!(uint2, x) - 0usize];
    ["Offset of field: uint2::y"][::std::mem::offset_of!(uint2, y) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct int3 {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub z: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of int3"][::std::mem::size_of::<int3>() - 12usize];
    ["Alignment of int3"][::std::mem::align_of::<int3>() - 4usize];
    ["Offset of field: int3::x"][::std::mem::offset_of!(int3, x) - 0usize];
    ["Offset of field: int3::y"][::std::mem::offset_of!(int3, y) - 4usize];
    ["Offset of field: int3::z"][::std::mem::offset_of!(int3, z) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct uint3 {
    pub x: ::std::os::raw::c_uint,
    pub y: ::std::os::raw::c_uint,
    pub z: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of uint3"][::std::mem::size_of::<uint3>() - 12usize];
    ["Alignment of uint3"][::std::mem::align_of::<uint3>() - 4usize];
    ["Offset of field: uint3::x"][::std::mem::offset_of!(uint3, x) - 0usize];
    ["Offset of field: uint3::y"][::std::mem::offset_of!(uint3, y) - 4usize];
    ["Offset of field: uint3::z"][::std::mem::offset_of!(uint3, z) - 8usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct int4 {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub z: ::std::os::raw::c_int,
    pub w: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of int4"][::std::mem::size_of::<int4>() - 16usize];
    ["Alignment of int4"][::std::mem::align_of::<int4>() - 16usize];
    ["Offset of field: int4::x"][::std::mem::offset_of!(int4, x) - 0usize];
    ["Offset of field: int4::y"][::std::mem::offset_of!(int4, y) - 4usize];
    ["Offset of field: int4::z"][::std::mem::offset_of!(int4, z) - 8usize];
    ["Offset of field: int4::w"][::std::mem::offset_of!(int4, w) - 12usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct uint4 {
    pub x: ::std::os::raw::c_uint,
    pub y: ::std::os::raw::c_uint,
    pub z: ::std::os::raw::c_uint,
    pub w: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of uint4"][::std::mem::size_of::<uint4>() - 16usize];
    ["Alignment of uint4"][::std::mem::align_of::<uint4>() - 16usize];
    ["Offset of field: uint4::x"][::std::mem::offset_of!(uint4, x) - 0usize];
    ["Offset of field: uint4::y"][::std::mem::offset_of!(uint4, y) - 4usize];
    ["Offset of field: uint4::z"][::std::mem::offset_of!(uint4, z) - 8usize];
    ["Offset of field: uint4::w"][::std::mem::offset_of!(uint4, w) - 12usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct long1 {
    pub x: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of long1"][::std::mem::size_of::<long1>() - 8usize];
    ["Alignment of long1"][::std::mem::align_of::<long1>() - 8usize];
    ["Offset of field: long1::x"][::std::mem::offset_of!(long1, x) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ulong1 {
    pub x: ::std::os::raw::c_ulong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ulong1"][::std::mem::size_of::<ulong1>() - 8usize];
    ["Alignment of ulong1"][::std::mem::align_of::<ulong1>() - 8usize];
    ["Offset of field: ulong1::x"][::std::mem::offset_of!(ulong1, x) - 0usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct long2 {
    pub x: ::std::os::raw::c_long,
    pub y: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of long2"][::std::mem::size_of::<long2>() - 16usize];
    ["Alignment of long2"][::std::mem::align_of::<long2>() - 16usize];
    ["Offset of field: long2::x"][::std::mem::offset_of!(long2, x) - 0usize];
    ["Offset of field: long2::y"][::std::mem::offset_of!(long2, y) - 8usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct ulong2 {
    pub x: ::std::os::raw::c_ulong,
    pub y: ::std::os::raw::c_ulong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ulong2"][::std::mem::size_of::<ulong2>() - 16usize];
    ["Alignment of ulong2"][::std::mem::align_of::<ulong2>() - 16usize];
    ["Offset of field: ulong2::x"][::std::mem::offset_of!(ulong2, x) - 0usize];
    ["Offset of field: ulong2::y"][::std::mem::offset_of!(ulong2, y) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct long3 {
    pub x: ::std::os::raw::c_long,
    pub y: ::std::os::raw::c_long,
    pub z: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of long3"][::std::mem::size_of::<long3>() - 24usize];
    ["Alignment of long3"][::std::mem::align_of::<long3>() - 8usize];
    ["Offset of field: long3::x"][::std::mem::offset_of!(long3, x) - 0usize];
    ["Offset of field: long3::y"][::std::mem::offset_of!(long3, y) - 8usize];
    ["Offset of field: long3::z"][::std::mem::offset_of!(long3, z) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ulong3 {
    pub x: ::std::os::raw::c_ulong,
    pub y: ::std::os::raw::c_ulong,
    pub z: ::std::os::raw::c_ulong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ulong3"][::std::mem::size_of::<ulong3>() - 24usize];
    ["Alignment of ulong3"][::std::mem::align_of::<ulong3>() - 8usize];
    ["Offset of field: ulong3::x"][::std::mem::offset_of!(ulong3, x) - 0usize];
    ["Offset of field: ulong3::y"][::std::mem::offset_of!(ulong3, y) - 8usize];
    ["Offset of field: ulong3::z"][::std::mem::offset_of!(ulong3, z) - 16usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct long4 {
    pub x: ::std::os::raw::c_long,
    pub y: ::std::os::raw::c_long,
    pub z: ::std::os::raw::c_long,
    pub w: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of long4"][::std::mem::size_of::<long4>() - 32usize];
    ["Alignment of long4"][::std::mem::align_of::<long4>() - 16usize];
    ["Offset of field: long4::x"][::std::mem::offset_of!(long4, x) - 0usize];
    ["Offset of field: long4::y"][::std::mem::offset_of!(long4, y) - 8usize];
    ["Offset of field: long4::z"][::std::mem::offset_of!(long4, z) - 16usize];
    ["Offset of field: long4::w"][::std::mem::offset_of!(long4, w) - 24usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct ulong4 {
    pub x: ::std::os::raw::c_ulong,
    pub y: ::std::os::raw::c_ulong,
    pub z: ::std::os::raw::c_ulong,
    pub w: ::std::os::raw::c_ulong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ulong4"][::std::mem::size_of::<ulong4>() - 32usize];
    ["Alignment of ulong4"][::std::mem::align_of::<ulong4>() - 16usize];
    ["Offset of field: ulong4::x"][::std::mem::offset_of!(ulong4, x) - 0usize];
    ["Offset of field: ulong4::y"][::std::mem::offset_of!(ulong4, y) - 8usize];
    ["Offset of field: ulong4::z"][::std::mem::offset_of!(ulong4, z) - 16usize];
    ["Offset of field: ulong4::w"][::std::mem::offset_of!(ulong4, w) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct float1 {
    pub x: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of float1"][::std::mem::size_of::<float1>() - 4usize];
    ["Alignment of float1"][::std::mem::align_of::<float1>() - 4usize];
    ["Offset of field: float1::x"][::std::mem::offset_of!(float1, x) - 0usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct float2 {
    pub x: f32,
    pub y: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of float2"][::std::mem::size_of::<float2>() - 8usize];
    ["Alignment of float2"][::std::mem::align_of::<float2>() - 8usize];
    ["Offset of field: float2::x"][::std::mem::offset_of!(float2, x) - 0usize];
    ["Offset of field: float2::y"][::std::mem::offset_of!(float2, y) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct float3 {
    pub x: f32,
    pub y: f32,
    pub z: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of float3"][::std::mem::size_of::<float3>() - 12usize];
    ["Alignment of float3"][::std::mem::align_of::<float3>() - 4usize];
    ["Offset of field: float3::x"][::std::mem::offset_of!(float3, x) - 0usize];
    ["Offset of field: float3::y"][::std::mem::offset_of!(float3, y) - 4usize];
    ["Offset of field: float3::z"][::std::mem::offset_of!(float3, z) - 8usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct float4 {
    pub x: f32,
    pub y: f32,
    pub z: f32,
    pub w: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of float4"][::std::mem::size_of::<float4>() - 16usize];
    ["Alignment of float4"][::std::mem::align_of::<float4>() - 16usize];
    ["Offset of field: float4::x"][::std::mem::offset_of!(float4, x) - 0usize];
    ["Offset of field: float4::y"][::std::mem::offset_of!(float4, y) - 4usize];
    ["Offset of field: float4::z"][::std::mem::offset_of!(float4, z) - 8usize];
    ["Offset of field: float4::w"][::std::mem::offset_of!(float4, w) - 12usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct longlong1 {
    pub x: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of longlong1"][::std::mem::size_of::<longlong1>() - 8usize];
    ["Alignment of longlong1"][::std::mem::align_of::<longlong1>() - 8usize];
    ["Offset of field: longlong1::x"][::std::mem::offset_of!(longlong1, x) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ulonglong1 {
    pub x: ::std::os::raw::c_ulonglong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ulonglong1"][::std::mem::size_of::<ulonglong1>() - 8usize];
    ["Alignment of ulonglong1"][::std::mem::align_of::<ulonglong1>() - 8usize];
    ["Offset of field: ulonglong1::x"][::std::mem::offset_of!(ulonglong1, x) - 0usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct longlong2 {
    pub x: ::std::os::raw::c_longlong,
    pub y: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of longlong2"][::std::mem::size_of::<longlong2>() - 16usize];
    ["Alignment of longlong2"][::std::mem::align_of::<longlong2>() - 16usize];
    ["Offset of field: longlong2::x"][::std::mem::offset_of!(longlong2, x) - 0usize];
    ["Offset of field: longlong2::y"][::std::mem::offset_of!(longlong2, y) - 8usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct ulonglong2 {
    pub x: ::std::os::raw::c_ulonglong,
    pub y: ::std::os::raw::c_ulonglong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ulonglong2"][::std::mem::size_of::<ulonglong2>() - 16usize];
    ["Alignment of ulonglong2"][::std::mem::align_of::<ulonglong2>() - 16usize];
    ["Offset of field: ulonglong2::x"][::std::mem::offset_of!(ulonglong2, x) - 0usize];
    ["Offset of field: ulonglong2::y"][::std::mem::offset_of!(ulonglong2, y) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct longlong3 {
    pub x: ::std::os::raw::c_longlong,
    pub y: ::std::os::raw::c_longlong,
    pub z: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of longlong3"][::std::mem::size_of::<longlong3>() - 24usize];
    ["Alignment of longlong3"][::std::mem::align_of::<longlong3>() - 8usize];
    ["Offset of field: longlong3::x"][::std::mem::offset_of!(longlong3, x) - 0usize];
    ["Offset of field: longlong3::y"][::std::mem::offset_of!(longlong3, y) - 8usize];
    ["Offset of field: longlong3::z"][::std::mem::offset_of!(longlong3, z) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ulonglong3 {
    pub x: ::std::os::raw::c_ulonglong,
    pub y: ::std::os::raw::c_ulonglong,
    pub z: ::std::os::raw::c_ulonglong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ulonglong3"][::std::mem::size_of::<ulonglong3>() - 24usize];
    ["Alignment of ulonglong3"][::std::mem::align_of::<ulonglong3>() - 8usize];
    ["Offset of field: ulonglong3::x"][::std::mem::offset_of!(ulonglong3, x) - 0usize];
    ["Offset of field: ulonglong3::y"][::std::mem::offset_of!(ulonglong3, y) - 8usize];
    ["Offset of field: ulonglong3::z"][::std::mem::offset_of!(ulonglong3, z) - 16usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct longlong4 {
    pub x: ::std::os::raw::c_longlong,
    pub y: ::std::os::raw::c_longlong,
    pub z: ::std::os::raw::c_longlong,
    pub w: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of longlong4"][::std::mem::size_of::<longlong4>() - 32usize];
    ["Alignment of longlong4"][::std::mem::align_of::<longlong4>() - 16usize];
    ["Offset of field: longlong4::x"][::std::mem::offset_of!(longlong4, x) - 0usize];
    ["Offset of field: longlong4::y"][::std::mem::offset_of!(longlong4, y) - 8usize];
    ["Offset of field: longlong4::z"][::std::mem::offset_of!(longlong4, z) - 16usize];
    ["Offset of field: longlong4::w"][::std::mem::offset_of!(longlong4, w) - 24usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct ulonglong4 {
    pub x: ::std::os::raw::c_ulonglong,
    pub y: ::std::os::raw::c_ulonglong,
    pub z: ::std::os::raw::c_ulonglong,
    pub w: ::std::os::raw::c_ulonglong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ulonglong4"][::std::mem::size_of::<ulonglong4>() - 32usize];
    ["Alignment of ulonglong4"][::std::mem::align_of::<ulonglong4>() - 16usize];
    ["Offset of field: ulonglong4::x"][::std::mem::offset_of!(ulonglong4, x) - 0usize];
    ["Offset of field: ulonglong4::y"][::std::mem::offset_of!(ulonglong4, y) - 8usize];
    ["Offset of field: ulonglong4::z"][::std::mem::offset_of!(ulonglong4, z) - 16usize];
    ["Offset of field: ulonglong4::w"][::std::mem::offset_of!(ulonglong4, w) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct double1 {
    pub x: f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of double1"][::std::mem::size_of::<double1>() - 8usize];
    ["Alignment of double1"][::std::mem::align_of::<double1>() - 8usize];
    ["Offset of field: double1::x"][::std::mem::offset_of!(double1, x) - 0usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct double2 {
    pub x: f64,
    pub y: f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of double2"][::std::mem::size_of::<double2>() - 16usize];
    ["Alignment of double2"][::std::mem::align_of::<double2>() - 16usize];
    ["Offset of field: double2::x"][::std::mem::offset_of!(double2, x) - 0usize];
    ["Offset of field: double2::y"][::std::mem::offset_of!(double2, y) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct double3 {
    pub x: f64,
    pub y: f64,
    pub z: f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of double3"][::std::mem::size_of::<double3>() - 24usize];
    ["Alignment of double3"][::std::mem::align_of::<double3>() - 8usize];
    ["Offset of field: double3::x"][::std::mem::offset_of!(double3, x) - 0usize];
    ["Offset of field: double3::y"][::std::mem::offset_of!(double3, y) - 8usize];
    ["Offset of field: double3::z"][::std::mem::offset_of!(double3, z) - 16usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct double4 {
    pub x: f64,
    pub y: f64,
    pub z: f64,
    pub w: f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of double4"][::std::mem::size_of::<double4>() - 32usize];
    ["Alignment of double4"][::std::mem::align_of::<double4>() - 16usize];
    ["Offset of field: double4::x"][::std::mem::offset_of!(double4, x) - 0usize];
    ["Offset of field: double4::y"][::std::mem::offset_of!(double4, y) - 8usize];
    ["Offset of field: double4::z"][::std::mem::offset_of!(double4, z) - 16usize];
    ["Offset of field: double4::w"][::std::mem::offset_of!(double4, w) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct dim3 {
    pub x: ::std::os::raw::c_uint,
    pub y: ::std::os::raw::c_uint,
    pub z: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of dim3"][::std::mem::size_of::<dim3>() - 12usize];
    ["Alignment of dim3"][::std::mem::align_of::<dim3>() - 4usize];
    ["Offset of field: dim3::x"][::std::mem::offset_of!(dim3, x) - 0usize];
    ["Offset of field: dim3::y"][::std::mem::offset_of!(dim3, y) - 4usize];
    ["Offset of field: dim3::z"][::std::mem::offset_of!(dim3, z) - 8usize];
};
pub type cuFloatComplex = float2;
pub type cuDoubleComplex = double2;
pub type cuComplex = cuFloatComplex;
pub const cudaRoundMode_cudaRoundNearest: cudaRoundMode = 0;
pub const cudaRoundMode_cudaRoundZero: cudaRoundMode = 1;
pub const cudaRoundMode_cudaRoundPosInf: cudaRoundMode = 2;
pub const cudaRoundMode_cudaRoundMinInf: cudaRoundMode = 3;
pub type cudaRoundMode = ::std::os::raw::c_uint;
pub type wchar_t = ::std::os::raw::c_int;
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct max_align_t {
    pub __clang_max_align_nonce1: ::std::os::raw::c_longlong,
    pub __bindgen_padding_0: u64,
    pub __clang_max_align_nonce2: u128,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of max_align_t"][::std::mem::size_of::<max_align_t>() - 32usize];
    ["Alignment of max_align_t"][::std::mem::align_of::<max_align_t>() - 16usize];
    ["Offset of field: max_align_t::__clang_max_align_nonce1"]
        [::std::mem::offset_of!(max_align_t, __clang_max_align_nonce1) - 0usize];
    ["Offset of field: max_align_t::__clang_max_align_nonce2"]
        [::std::mem::offset_of!(max_align_t, __clang_max_align_nonce2) - 16usize];
};
pub const cudaError_cudaSuccess: cudaError = 0;
pub const cudaError_cudaErrorInvalidValue: cudaError = 1;
pub const cudaError_cudaErrorMemoryAllocation: cudaError = 2;
pub const cudaError_cudaErrorInitializationError: cudaError = 3;
pub const cudaError_cudaErrorCudartUnloading: cudaError = 4;
pub const cudaError_cudaErrorProfilerDisabled: cudaError = 5;
pub const cudaError_cudaErrorProfilerNotInitialized: cudaError = 6;
pub const cudaError_cudaErrorProfilerAlreadyStarted: cudaError = 7;
pub const cudaError_cudaErrorProfilerAlreadyStopped: cudaError = 8;
pub const cudaError_cudaErrorInvalidConfiguration: cudaError = 9;
pub const cudaError_cudaErrorInvalidPitchValue: cudaError = 12;
pub const cudaError_cudaErrorInvalidSymbol: cudaError = 13;
pub const cudaError_cudaErrorInvalidHostPointer: cudaError = 16;
pub const cudaError_cudaErrorInvalidDevicePointer: cudaError = 17;
pub const cudaError_cudaErrorInvalidTexture: cudaError = 18;
pub const cudaError_cudaErrorInvalidTextureBinding: cudaError = 19;
pub const cudaError_cudaErrorInvalidChannelDescriptor: cudaError = 20;
pub const cudaError_cudaErrorInvalidMemcpyDirection: cudaError = 21;
pub const cudaError_cudaErrorAddressOfConstant: cudaError = 22;
pub const cudaError_cudaErrorTextureFetchFailed: cudaError = 23;
pub const cudaError_cudaErrorTextureNotBound: cudaError = 24;
pub const cudaError_cudaErrorSynchronizationError: cudaError = 25;
pub const cudaError_cudaErrorInvalidFilterSetting: cudaError = 26;
pub const cudaError_cudaErrorInvalidNormSetting: cudaError = 27;
pub const cudaError_cudaErrorMixedDeviceExecution: cudaError = 28;
pub const cudaError_cudaErrorNotYetImplemented: cudaError = 31;
pub const cudaError_cudaErrorMemoryValueTooLarge: cudaError = 32;
pub const cudaError_cudaErrorInsufficientDriver: cudaError = 35;
pub const cudaError_cudaErrorInvalidSurface: cudaError = 37;
pub const cudaError_cudaErrorDuplicateVariableName: cudaError = 43;
pub const cudaError_cudaErrorDuplicateTextureName: cudaError = 44;
pub const cudaError_cudaErrorDuplicateSurfaceName: cudaError = 45;
pub const cudaError_cudaErrorDevicesUnavailable: cudaError = 46;
pub const cudaError_cudaErrorIncompatibleDriverContext: cudaError = 49;
pub const cudaError_cudaErrorMissingConfiguration: cudaError = 52;
pub const cudaError_cudaErrorPriorLaunchFailure: cudaError = 53;
pub const cudaError_cudaErrorLaunchMaxDepthExceeded: cudaError = 65;
pub const cudaError_cudaErrorLaunchFileScopedTex: cudaError = 66;
pub const cudaError_cudaErrorLaunchFileScopedSurf: cudaError = 67;
pub const cudaError_cudaErrorSyncDepthExceeded: cudaError = 68;
pub const cudaError_cudaErrorLaunchPendingCountExceeded: cudaError = 69;
pub const cudaError_cudaErrorInvalidDeviceFunction: cudaError = 98;
pub const cudaError_cudaErrorNoDevice: cudaError = 100;
pub const cudaError_cudaErrorInvalidDevice: cudaError = 101;
pub const cudaError_cudaErrorStartupFailure: cudaError = 127;
pub const cudaError_cudaErrorInvalidKernelImage: cudaError = 200;
pub const cudaError_cudaErrorDeviceUninitilialized: cudaError = 201;
pub const cudaError_cudaErrorMapBufferObjectFailed: cudaError = 205;
pub const cudaError_cudaErrorUnmapBufferObjectFailed: cudaError = 206;
pub const cudaError_cudaErrorArrayIsMapped: cudaError = 207;
pub const cudaError_cudaErrorAlreadyMapped: cudaError = 208;
pub const cudaError_cudaErrorNoKernelImageForDevice: cudaError = 209;
pub const cudaError_cudaErrorAlreadyAcquired: cudaError = 210;
pub const cudaError_cudaErrorNotMapped: cudaError = 211;
pub const cudaError_cudaErrorNotMappedAsArray: cudaError = 212;
pub const cudaError_cudaErrorNotMappedAsPointer: cudaError = 213;
pub const cudaError_cudaErrorECCUncorrectable: cudaError = 214;
pub const cudaError_cudaErrorUnsupportedLimit: cudaError = 215;
pub const cudaError_cudaErrorDeviceAlreadyInUse: cudaError = 216;
pub const cudaError_cudaErrorPeerAccessUnsupported: cudaError = 217;
pub const cudaError_cudaErrorInvalidPtx: cudaError = 218;
pub const cudaError_cudaErrorInvalidGraphicsContext: cudaError = 219;
pub const cudaError_cudaErrorNvlinkUncorrectable: cudaError = 220;
pub const cudaError_cudaErrorJitCompilerNotFound: cudaError = 221;
pub const cudaError_cudaErrorInvalidSource: cudaError = 300;
pub const cudaError_cudaErrorFileNotFound: cudaError = 301;
pub const cudaError_cudaErrorSharedObjectSymbolNotFound: cudaError = 302;
pub const cudaError_cudaErrorSharedObjectInitFailed: cudaError = 303;
pub const cudaError_cudaErrorOperatingSystem: cudaError = 304;
pub const cudaError_cudaErrorInvalidResourceHandle: cudaError = 400;
pub const cudaError_cudaErrorIllegalState: cudaError = 401;
pub const cudaError_cudaErrorSymbolNotFound: cudaError = 500;
pub const cudaError_cudaErrorNotReady: cudaError = 600;
pub const cudaError_cudaErrorIllegalAddress: cudaError = 700;
pub const cudaError_cudaErrorLaunchOutOfResources: cudaError = 701;
pub const cudaError_cudaErrorLaunchTimeout: cudaError = 702;
pub const cudaError_cudaErrorLaunchIncompatibleTexturing: cudaError = 703;
pub const cudaError_cudaErrorPeerAccessAlreadyEnabled: cudaError = 704;
pub const cudaError_cudaErrorPeerAccessNotEnabled: cudaError = 705;
pub const cudaError_cudaErrorSetOnActiveProcess: cudaError = 708;
pub const cudaError_cudaErrorContextIsDestroyed: cudaError = 709;
pub const cudaError_cudaErrorAssert: cudaError = 710;
pub const cudaError_cudaErrorTooManyPeers: cudaError = 711;
pub const cudaError_cudaErrorHostMemoryAlreadyRegistered: cudaError = 712;
pub const cudaError_cudaErrorHostMemoryNotRegistered: cudaError = 713;
pub const cudaError_cudaErrorHardwareStackError: cudaError = 714;
pub const cudaError_cudaErrorIllegalInstruction: cudaError = 715;
pub const cudaError_cudaErrorMisalignedAddress: cudaError = 716;
pub const cudaError_cudaErrorInvalidAddressSpace: cudaError = 717;
pub const cudaError_cudaErrorInvalidPc: cudaError = 718;
pub const cudaError_cudaErrorLaunchFailure: cudaError = 719;
pub const cudaError_cudaErrorCooperativeLaunchTooLarge: cudaError = 720;
pub const cudaError_cudaErrorNotPermitted: cudaError = 800;
pub const cudaError_cudaErrorNotSupported: cudaError = 801;
pub const cudaError_cudaErrorSystemNotReady: cudaError = 802;
pub const cudaError_cudaErrorSystemDriverMismatch: cudaError = 803;
pub const cudaError_cudaErrorCompatNotSupportedOnDevice: cudaError = 804;
pub const cudaError_cudaErrorStreamCaptureUnsupported: cudaError = 900;
pub const cudaError_cudaErrorStreamCaptureInvalidated: cudaError = 901;
pub const cudaError_cudaErrorStreamCaptureMerge: cudaError = 902;
pub const cudaError_cudaErrorStreamCaptureUnmatched: cudaError = 903;
pub const cudaError_cudaErrorStreamCaptureUnjoined: cudaError = 904;
pub const cudaError_cudaErrorStreamCaptureIsolation: cudaError = 905;
pub const cudaError_cudaErrorStreamCaptureImplicit: cudaError = 906;
pub const cudaError_cudaErrorCapturedEvent: cudaError = 907;
pub const cudaError_cudaErrorStreamCaptureWrongThread: cudaError = 908;
pub const cudaError_cudaErrorUnknown: cudaError = 999;
pub const cudaError_cudaErrorApiFailureBase: cudaError = 10000;
pub type cudaError = ::std::os::raw::c_uint;
pub const cudaChannelFormatKind_cudaChannelFormatKindSigned: cudaChannelFormatKind = 0;
pub const cudaChannelFormatKind_cudaChannelFormatKindUnsigned: cudaChannelFormatKind = 1;
pub const cudaChannelFormatKind_cudaChannelFormatKindFloat: cudaChannelFormatKind = 2;
pub const cudaChannelFormatKind_cudaChannelFormatKindNone: cudaChannelFormatKind = 3;
pub type cudaChannelFormatKind = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaChannelFormatDesc {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub z: ::std::os::raw::c_int,
    pub w: ::std::os::raw::c_int,
    pub f: cudaChannelFormatKind,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaChannelFormatDesc"][::std::mem::size_of::<cudaChannelFormatDesc>() - 20usize];
    ["Alignment of cudaChannelFormatDesc"]
        [::std::mem::align_of::<cudaChannelFormatDesc>() - 4usize];
    ["Offset of field: cudaChannelFormatDesc::x"]
        [::std::mem::offset_of!(cudaChannelFormatDesc, x) - 0usize];
    ["Offset of field: cudaChannelFormatDesc::y"]
        [::std::mem::offset_of!(cudaChannelFormatDesc, y) - 4usize];
    ["Offset of field: cudaChannelFormatDesc::z"]
        [::std::mem::offset_of!(cudaChannelFormatDesc, z) - 8usize];
    ["Offset of field: cudaChannelFormatDesc::w"]
        [::std::mem::offset_of!(cudaChannelFormatDesc, w) - 12usize];
    ["Offset of field: cudaChannelFormatDesc::f"]
        [::std::mem::offset_of!(cudaChannelFormatDesc, f) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaArray {
    _unused: [u8; 0],
}
pub type cudaArray_t = *mut cudaArray;
pub type cudaArray_const_t = *const cudaArray;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaMipmappedArray {
    _unused: [u8; 0],
}
pub type cudaMipmappedArray_t = *mut cudaMipmappedArray;
pub type cudaMipmappedArray_const_t = *const cudaMipmappedArray;
pub const cudaMemoryType_cudaMemoryTypeUnregistered: cudaMemoryType = 0;
pub const cudaMemoryType_cudaMemoryTypeHost: cudaMemoryType = 1;
pub const cudaMemoryType_cudaMemoryTypeDevice: cudaMemoryType = 2;
pub const cudaMemoryType_cudaMemoryTypeManaged: cudaMemoryType = 3;
pub type cudaMemoryType = ::std::os::raw::c_uint;
pub const cudaMemcpyKind_cudaMemcpyHostToHost: cudaMemcpyKind = 0;
pub const cudaMemcpyKind_cudaMemcpyHostToDevice: cudaMemcpyKind = 1;
pub const cudaMemcpyKind_cudaMemcpyDeviceToHost: cudaMemcpyKind = 2;
pub const cudaMemcpyKind_cudaMemcpyDeviceToDevice: cudaMemcpyKind = 3;
pub const cudaMemcpyKind_cudaMemcpyDefault: cudaMemcpyKind = 4;
pub type cudaMemcpyKind = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaPitchedPtr {
    pub ptr: *mut ::std::os::raw::c_void,
    pub pitch: usize,
    pub xsize: usize,
    pub ysize: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaPitchedPtr"][::std::mem::size_of::<cudaPitchedPtr>() - 32usize];
    ["Alignment of cudaPitchedPtr"][::std::mem::align_of::<cudaPitchedPtr>() - 8usize];
    ["Offset of field: cudaPitchedPtr::ptr"][::std::mem::offset_of!(cudaPitchedPtr, ptr) - 0usize];
    ["Offset of field: cudaPitchedPtr::pitch"]
        [::std::mem::offset_of!(cudaPitchedPtr, pitch) - 8usize];
    ["Offset of field: cudaPitchedPtr::xsize"]
        [::std::mem::offset_of!(cudaPitchedPtr, xsize) - 16usize];
    ["Offset of field: cudaPitchedPtr::ysize"]
        [::std::mem::offset_of!(cudaPitchedPtr, ysize) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaExtent {
    pub width: usize,
    pub height: usize,
    pub depth: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExtent"][::std::mem::size_of::<cudaExtent>() - 24usize];
    ["Alignment of cudaExtent"][::std::mem::align_of::<cudaExtent>() - 8usize];
    ["Offset of field: cudaExtent::width"][::std::mem::offset_of!(cudaExtent, width) - 0usize];
    ["Offset of field: cudaExtent::height"][::std::mem::offset_of!(cudaExtent, height) - 8usize];
    ["Offset of field: cudaExtent::depth"][::std::mem::offset_of!(cudaExtent, depth) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaPos {
    pub x: usize,
    pub y: usize,
    pub z: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaPos"][::std::mem::size_of::<cudaPos>() - 24usize];
    ["Alignment of cudaPos"][::std::mem::align_of::<cudaPos>() - 8usize];
    ["Offset of field: cudaPos::x"][::std::mem::offset_of!(cudaPos, x) - 0usize];
    ["Offset of field: cudaPos::y"][::std::mem::offset_of!(cudaPos, y) - 8usize];
    ["Offset of field: cudaPos::z"][::std::mem::offset_of!(cudaPos, z) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaMemcpy3DParms {
    pub srcArray: cudaArray_t,
    pub srcPos: cudaPos,
    pub srcPtr: cudaPitchedPtr,
    pub dstArray: cudaArray_t,
    pub dstPos: cudaPos,
    pub dstPtr: cudaPitchedPtr,
    pub extent: cudaExtent,
    pub kind: cudaMemcpyKind,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaMemcpy3DParms"][::std::mem::size_of::<cudaMemcpy3DParms>() - 160usize];
    ["Alignment of cudaMemcpy3DParms"][::std::mem::align_of::<cudaMemcpy3DParms>() - 8usize];
    ["Offset of field: cudaMemcpy3DParms::srcArray"]
        [::std::mem::offset_of!(cudaMemcpy3DParms, srcArray) - 0usize];
    ["Offset of field: cudaMemcpy3DParms::srcPos"]
        [::std::mem::offset_of!(cudaMemcpy3DParms, srcPos) - 8usize];
    ["Offset of field: cudaMemcpy3DParms::srcPtr"]
        [::std::mem::offset_of!(cudaMemcpy3DParms, srcPtr) - 32usize];
    ["Offset of field: cudaMemcpy3DParms::dstArray"]
        [::std::mem::offset_of!(cudaMemcpy3DParms, dstArray) - 64usize];
    ["Offset of field: cudaMemcpy3DParms::dstPos"]
        [::std::mem::offset_of!(cudaMemcpy3DParms, dstPos) - 72usize];
    ["Offset of field: cudaMemcpy3DParms::dstPtr"]
        [::std::mem::offset_of!(cudaMemcpy3DParms, dstPtr) - 96usize];
    ["Offset of field: cudaMemcpy3DParms::extent"]
        [::std::mem::offset_of!(cudaMemcpy3DParms, extent) - 128usize];
    ["Offset of field: cudaMemcpy3DParms::kind"]
        [::std::mem::offset_of!(cudaMemcpy3DParms, kind) - 152usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaMemcpy3DPeerParms {
    pub srcArray: cudaArray_t,
    pub srcPos: cudaPos,
    pub srcPtr: cudaPitchedPtr,
    pub srcDevice: ::std::os::raw::c_int,
    pub dstArray: cudaArray_t,
    pub dstPos: cudaPos,
    pub dstPtr: cudaPitchedPtr,
    pub dstDevice: ::std::os::raw::c_int,
    pub extent: cudaExtent,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaMemcpy3DPeerParms"][::std::mem::size_of::<cudaMemcpy3DPeerParms>() - 168usize];
    ["Alignment of cudaMemcpy3DPeerParms"]
        [::std::mem::align_of::<cudaMemcpy3DPeerParms>() - 8usize];
    ["Offset of field: cudaMemcpy3DPeerParms::srcArray"]
        [::std::mem::offset_of!(cudaMemcpy3DPeerParms, srcArray) - 0usize];
    ["Offset of field: cudaMemcpy3DPeerParms::srcPos"]
        [::std::mem::offset_of!(cudaMemcpy3DPeerParms, srcPos) - 8usize];
    ["Offset of field: cudaMemcpy3DPeerParms::srcPtr"]
        [::std::mem::offset_of!(cudaMemcpy3DPeerParms, srcPtr) - 32usize];
    ["Offset of field: cudaMemcpy3DPeerParms::srcDevice"]
        [::std::mem::offset_of!(cudaMemcpy3DPeerParms, srcDevice) - 64usize];
    ["Offset of field: cudaMemcpy3DPeerParms::dstArray"]
        [::std::mem::offset_of!(cudaMemcpy3DPeerParms, dstArray) - 72usize];
    ["Offset of field: cudaMemcpy3DPeerParms::dstPos"]
        [::std::mem::offset_of!(cudaMemcpy3DPeerParms, dstPos) - 80usize];
    ["Offset of field: cudaMemcpy3DPeerParms::dstPtr"]
        [::std::mem::offset_of!(cudaMemcpy3DPeerParms, dstPtr) - 104usize];
    ["Offset of field: cudaMemcpy3DPeerParms::dstDevice"]
        [::std::mem::offset_of!(cudaMemcpy3DPeerParms, dstDevice) - 136usize];
    ["Offset of field: cudaMemcpy3DPeerParms::extent"]
        [::std::mem::offset_of!(cudaMemcpy3DPeerParms, extent) - 144usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaMemsetParams {
    pub dst: *mut ::std::os::raw::c_void,
    pub pitch: usize,
    pub value: ::std::os::raw::c_uint,
    pub elementSize: ::std::os::raw::c_uint,
    pub width: usize,
    pub height: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaMemsetParams"][::std::mem::size_of::<cudaMemsetParams>() - 40usize];
    ["Alignment of cudaMemsetParams"][::std::mem::align_of::<cudaMemsetParams>() - 8usize];
    ["Offset of field: cudaMemsetParams::dst"]
        [::std::mem::offset_of!(cudaMemsetParams, dst) - 0usize];
    ["Offset of field: cudaMemsetParams::pitch"]
        [::std::mem::offset_of!(cudaMemsetParams, pitch) - 8usize];
    ["Offset of field: cudaMemsetParams::value"]
        [::std::mem::offset_of!(cudaMemsetParams, value) - 16usize];
    ["Offset of field: cudaMemsetParams::elementSize"]
        [::std::mem::offset_of!(cudaMemsetParams, elementSize) - 20usize];
    ["Offset of field: cudaMemsetParams::width"]
        [::std::mem::offset_of!(cudaMemsetParams, width) - 24usize];
    ["Offset of field: cudaMemsetParams::height"]
        [::std::mem::offset_of!(cudaMemsetParams, height) - 32usize];
};
pub type cudaHostFn_t =
    ::std::option::Option<unsafe extern "C" fn(userData: *mut ::std::os::raw::c_void)>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaHostNodeParams {
    pub fn_: cudaHostFn_t,
    pub userData: *mut ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaHostNodeParams"][::std::mem::size_of::<cudaHostNodeParams>() - 16usize];
    ["Alignment of cudaHostNodeParams"][::std::mem::align_of::<cudaHostNodeParams>() - 8usize];
    ["Offset of field: cudaHostNodeParams::fn_"]
        [::std::mem::offset_of!(cudaHostNodeParams, fn_) - 0usize];
    ["Offset of field: cudaHostNodeParams::userData"]
        [::std::mem::offset_of!(cudaHostNodeParams, userData) - 8usize];
};
pub const cudaStreamCaptureStatus_cudaStreamCaptureStatusNone: cudaStreamCaptureStatus = 0;
pub const cudaStreamCaptureStatus_cudaStreamCaptureStatusActive: cudaStreamCaptureStatus = 1;
pub const cudaStreamCaptureStatus_cudaStreamCaptureStatusInvalidated: cudaStreamCaptureStatus = 2;
pub type cudaStreamCaptureStatus = ::std::os::raw::c_uint;
pub const cudaStreamCaptureMode_cudaStreamCaptureModeGlobal: cudaStreamCaptureMode = 0;
pub const cudaStreamCaptureMode_cudaStreamCaptureModeThreadLocal: cudaStreamCaptureMode = 1;
pub const cudaStreamCaptureMode_cudaStreamCaptureModeRelaxed: cudaStreamCaptureMode = 2;
pub type cudaStreamCaptureMode = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaGraphicsResource {
    _unused: [u8; 0],
}
pub const cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsNone: cudaGraphicsRegisterFlags = 0;
pub const cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsReadOnly: cudaGraphicsRegisterFlags =
    1;
pub const cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsWriteDiscard:
    cudaGraphicsRegisterFlags = 2;
pub const cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsSurfaceLoadStore:
    cudaGraphicsRegisterFlags = 4;
pub const cudaGraphicsRegisterFlags_cudaGraphicsRegisterFlagsTextureGather:
    cudaGraphicsRegisterFlags = 8;
pub type cudaGraphicsRegisterFlags = ::std::os::raw::c_uint;
pub const cudaGraphicsMapFlags_cudaGraphicsMapFlagsNone: cudaGraphicsMapFlags = 0;
pub const cudaGraphicsMapFlags_cudaGraphicsMapFlagsReadOnly: cudaGraphicsMapFlags = 1;
pub const cudaGraphicsMapFlags_cudaGraphicsMapFlagsWriteDiscard: cudaGraphicsMapFlags = 2;
pub type cudaGraphicsMapFlags = ::std::os::raw::c_uint;
pub const cudaGraphicsCubeFace_cudaGraphicsCubeFacePositiveX: cudaGraphicsCubeFace = 0;
pub const cudaGraphicsCubeFace_cudaGraphicsCubeFaceNegativeX: cudaGraphicsCubeFace = 1;
pub const cudaGraphicsCubeFace_cudaGraphicsCubeFacePositiveY: cudaGraphicsCubeFace = 2;
pub const cudaGraphicsCubeFace_cudaGraphicsCubeFaceNegativeY: cudaGraphicsCubeFace = 3;
pub const cudaGraphicsCubeFace_cudaGraphicsCubeFacePositiveZ: cudaGraphicsCubeFace = 4;
pub const cudaGraphicsCubeFace_cudaGraphicsCubeFaceNegativeZ: cudaGraphicsCubeFace = 5;
pub type cudaGraphicsCubeFace = ::std::os::raw::c_uint;
pub const cudaResourceType_cudaResourceTypeArray: cudaResourceType = 0;
pub const cudaResourceType_cudaResourceTypeMipmappedArray: cudaResourceType = 1;
pub const cudaResourceType_cudaResourceTypeLinear: cudaResourceType = 2;
pub const cudaResourceType_cudaResourceTypePitch2D: cudaResourceType = 3;
pub type cudaResourceType = ::std::os::raw::c_uint;
pub const cudaResourceViewFormat_cudaResViewFormatNone: cudaResourceViewFormat = 0;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedChar1: cudaResourceViewFormat = 1;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedChar2: cudaResourceViewFormat = 2;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedChar4: cudaResourceViewFormat = 3;
pub const cudaResourceViewFormat_cudaResViewFormatSignedChar1: cudaResourceViewFormat = 4;
pub const cudaResourceViewFormat_cudaResViewFormatSignedChar2: cudaResourceViewFormat = 5;
pub const cudaResourceViewFormat_cudaResViewFormatSignedChar4: cudaResourceViewFormat = 6;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedShort1: cudaResourceViewFormat = 7;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedShort2: cudaResourceViewFormat = 8;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedShort4: cudaResourceViewFormat = 9;
pub const cudaResourceViewFormat_cudaResViewFormatSignedShort1: cudaResourceViewFormat = 10;
pub const cudaResourceViewFormat_cudaResViewFormatSignedShort2: cudaResourceViewFormat = 11;
pub const cudaResourceViewFormat_cudaResViewFormatSignedShort4: cudaResourceViewFormat = 12;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedInt1: cudaResourceViewFormat = 13;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedInt2: cudaResourceViewFormat = 14;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedInt4: cudaResourceViewFormat = 15;
pub const cudaResourceViewFormat_cudaResViewFormatSignedInt1: cudaResourceViewFormat = 16;
pub const cudaResourceViewFormat_cudaResViewFormatSignedInt2: cudaResourceViewFormat = 17;
pub const cudaResourceViewFormat_cudaResViewFormatSignedInt4: cudaResourceViewFormat = 18;
pub const cudaResourceViewFormat_cudaResViewFormatHalf1: cudaResourceViewFormat = 19;
pub const cudaResourceViewFormat_cudaResViewFormatHalf2: cudaResourceViewFormat = 20;
pub const cudaResourceViewFormat_cudaResViewFormatHalf4: cudaResourceViewFormat = 21;
pub const cudaResourceViewFormat_cudaResViewFormatFloat1: cudaResourceViewFormat = 22;
pub const cudaResourceViewFormat_cudaResViewFormatFloat2: cudaResourceViewFormat = 23;
pub const cudaResourceViewFormat_cudaResViewFormatFloat4: cudaResourceViewFormat = 24;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed1: cudaResourceViewFormat =
    25;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed2: cudaResourceViewFormat =
    26;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed3: cudaResourceViewFormat =
    27;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed4: cudaResourceViewFormat =
    28;
pub const cudaResourceViewFormat_cudaResViewFormatSignedBlockCompressed4: cudaResourceViewFormat =
    29;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed5: cudaResourceViewFormat =
    30;
pub const cudaResourceViewFormat_cudaResViewFormatSignedBlockCompressed5: cudaResourceViewFormat =
    31;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed6H:
    cudaResourceViewFormat = 32;
pub const cudaResourceViewFormat_cudaResViewFormatSignedBlockCompressed6H: cudaResourceViewFormat =
    33;
pub const cudaResourceViewFormat_cudaResViewFormatUnsignedBlockCompressed7: cudaResourceViewFormat =
    34;
pub type cudaResourceViewFormat = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cudaResourceDesc {
    pub resType: cudaResourceType,
    pub res: cudaResourceDesc__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cudaResourceDesc__bindgen_ty_1 {
    pub array: cudaResourceDesc__bindgen_ty_1__bindgen_ty_1,
    pub mipmap: cudaResourceDesc__bindgen_ty_1__bindgen_ty_2,
    pub linear: cudaResourceDesc__bindgen_ty_1__bindgen_ty_3,
    pub pitch2D: cudaResourceDesc__bindgen_ty_1__bindgen_ty_4,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaResourceDesc__bindgen_ty_1__bindgen_ty_1 {
    pub array: cudaArray_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::size_of::<cudaResourceDesc__bindgen_ty_1__bindgen_ty_1>() - 8usize];
    ["Alignment of cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::align_of::<cudaResourceDesc__bindgen_ty_1__bindgen_ty_1>() - 8usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1__bindgen_ty_1::array"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1__bindgen_ty_1, array) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaResourceDesc__bindgen_ty_1__bindgen_ty_2 {
    pub mipmap: cudaMipmappedArray_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"]
        [::std::mem::size_of::<cudaResourceDesc__bindgen_ty_1__bindgen_ty_2>() - 8usize];
    ["Alignment of cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"]
        [::std::mem::align_of::<cudaResourceDesc__bindgen_ty_1__bindgen_ty_2>() - 8usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1__bindgen_ty_2::mipmap"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1__bindgen_ty_2, mipmap) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaResourceDesc__bindgen_ty_1__bindgen_ty_3 {
    pub devPtr: *mut ::std::os::raw::c_void,
    pub desc: cudaChannelFormatDesc,
    pub sizeInBytes: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"]
        [::std::mem::size_of::<cudaResourceDesc__bindgen_ty_1__bindgen_ty_3>() - 40usize];
    ["Alignment of cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"]
        [::std::mem::align_of::<cudaResourceDesc__bindgen_ty_1__bindgen_ty_3>() - 8usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1__bindgen_ty_3::devPtr"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1__bindgen_ty_3, devPtr) - 0usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1__bindgen_ty_3::desc"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1__bindgen_ty_3, desc) - 8usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1__bindgen_ty_3::sizeInBytes"][::std::mem::offset_of!(
        cudaResourceDesc__bindgen_ty_1__bindgen_ty_3,
        sizeInBytes
    ) - 32usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaResourceDesc__bindgen_ty_1__bindgen_ty_4 {
    pub devPtr: *mut ::std::os::raw::c_void,
    pub desc: cudaChannelFormatDesc,
    pub width: usize,
    pub height: usize,
    pub pitchInBytes: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"]
        [::std::mem::size_of::<cudaResourceDesc__bindgen_ty_1__bindgen_ty_4>() - 56usize];
    ["Alignment of cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"]
        [::std::mem::align_of::<cudaResourceDesc__bindgen_ty_1__bindgen_ty_4>() - 8usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1__bindgen_ty_4::devPtr"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1__bindgen_ty_4, devPtr) - 0usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1__bindgen_ty_4::desc"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1__bindgen_ty_4, desc) - 8usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1__bindgen_ty_4::width"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1__bindgen_ty_4, width) - 32usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1__bindgen_ty_4::height"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1__bindgen_ty_4, height) - 40usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1__bindgen_ty_4::pitchInBytes"][::std::mem::offset_of!(
        cudaResourceDesc__bindgen_ty_1__bindgen_ty_4,
        pitchInBytes
    ) - 48usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaResourceDesc__bindgen_ty_1"]
        [::std::mem::size_of::<cudaResourceDesc__bindgen_ty_1>() - 56usize];
    ["Alignment of cudaResourceDesc__bindgen_ty_1"]
        [::std::mem::align_of::<cudaResourceDesc__bindgen_ty_1>() - 8usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1::array"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1, array) - 0usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1::mipmap"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1, mipmap) - 0usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1::linear"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1, linear) - 0usize];
    ["Offset of field: cudaResourceDesc__bindgen_ty_1::pitch2D"]
        [::std::mem::offset_of!(cudaResourceDesc__bindgen_ty_1, pitch2D) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaResourceDesc"][::std::mem::size_of::<cudaResourceDesc>() - 64usize];
    ["Alignment of cudaResourceDesc"][::std::mem::align_of::<cudaResourceDesc>() - 8usize];
    ["Offset of field: cudaResourceDesc::resType"]
        [::std::mem::offset_of!(cudaResourceDesc, resType) - 0usize];
    ["Offset of field: cudaResourceDesc::res"]
        [::std::mem::offset_of!(cudaResourceDesc, res) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaResourceViewDesc {
    pub format: cudaResourceViewFormat,
    pub width: usize,
    pub height: usize,
    pub depth: usize,
    pub firstMipmapLevel: ::std::os::raw::c_uint,
    pub lastMipmapLevel: ::std::os::raw::c_uint,
    pub firstLayer: ::std::os::raw::c_uint,
    pub lastLayer: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaResourceViewDesc"][::std::mem::size_of::<cudaResourceViewDesc>() - 48usize];
    ["Alignment of cudaResourceViewDesc"][::std::mem::align_of::<cudaResourceViewDesc>() - 8usize];
    ["Offset of field: cudaResourceViewDesc::format"]
        [::std::mem::offset_of!(cudaResourceViewDesc, format) - 0usize];
    ["Offset of field: cudaResourceViewDesc::width"]
        [::std::mem::offset_of!(cudaResourceViewDesc, width) - 8usize];
    ["Offset of field: cudaResourceViewDesc::height"]
        [::std::mem::offset_of!(cudaResourceViewDesc, height) - 16usize];
    ["Offset of field: cudaResourceViewDesc::depth"]
        [::std::mem::offset_of!(cudaResourceViewDesc, depth) - 24usize];
    ["Offset of field: cudaResourceViewDesc::firstMipmapLevel"]
        [::std::mem::offset_of!(cudaResourceViewDesc, firstMipmapLevel) - 32usize];
    ["Offset of field: cudaResourceViewDesc::lastMipmapLevel"]
        [::std::mem::offset_of!(cudaResourceViewDesc, lastMipmapLevel) - 36usize];
    ["Offset of field: cudaResourceViewDesc::firstLayer"]
        [::std::mem::offset_of!(cudaResourceViewDesc, firstLayer) - 40usize];
    ["Offset of field: cudaResourceViewDesc::lastLayer"]
        [::std::mem::offset_of!(cudaResourceViewDesc, lastLayer) - 44usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaPointerAttributes {
    pub memoryType: cudaMemoryType,
    pub type_: cudaMemoryType,
    pub device: ::std::os::raw::c_int,
    pub devicePointer: *mut ::std::os::raw::c_void,
    pub hostPointer: *mut ::std::os::raw::c_void,
    pub isManaged: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaPointerAttributes"][::std::mem::size_of::<cudaPointerAttributes>() - 40usize];
    ["Alignment of cudaPointerAttributes"]
        [::std::mem::align_of::<cudaPointerAttributes>() - 8usize];
    ["Offset of field: cudaPointerAttributes::memoryType"]
        [::std::mem::offset_of!(cudaPointerAttributes, memoryType) - 0usize];
    ["Offset of field: cudaPointerAttributes::type_"]
        [::std::mem::offset_of!(cudaPointerAttributes, type_) - 4usize];
    ["Offset of field: cudaPointerAttributes::device"]
        [::std::mem::offset_of!(cudaPointerAttributes, device) - 8usize];
    ["Offset of field: cudaPointerAttributes::devicePointer"]
        [::std::mem::offset_of!(cudaPointerAttributes, devicePointer) - 16usize];
    ["Offset of field: cudaPointerAttributes::hostPointer"]
        [::std::mem::offset_of!(cudaPointerAttributes, hostPointer) - 24usize];
    ["Offset of field: cudaPointerAttributes::isManaged"]
        [::std::mem::offset_of!(cudaPointerAttributes, isManaged) - 32usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaFuncAttributes {
    pub sharedSizeBytes: usize,
    pub constSizeBytes: usize,
    pub localSizeBytes: usize,
    pub maxThreadsPerBlock: ::std::os::raw::c_int,
    pub numRegs: ::std::os::raw::c_int,
    pub ptxVersion: ::std::os::raw::c_int,
    pub binaryVersion: ::std::os::raw::c_int,
    pub cacheModeCA: ::std::os::raw::c_int,
    pub maxDynamicSharedSizeBytes: ::std::os::raw::c_int,
    pub preferredShmemCarveout: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaFuncAttributes"][::std::mem::size_of::<cudaFuncAttributes>() - 56usize];
    ["Alignment of cudaFuncAttributes"][::std::mem::align_of::<cudaFuncAttributes>() - 8usize];
    ["Offset of field: cudaFuncAttributes::sharedSizeBytes"]
        [::std::mem::offset_of!(cudaFuncAttributes, sharedSizeBytes) - 0usize];
    ["Offset of field: cudaFuncAttributes::constSizeBytes"]
        [::std::mem::offset_of!(cudaFuncAttributes, constSizeBytes) - 8usize];
    ["Offset of field: cudaFuncAttributes::localSizeBytes"]
        [::std::mem::offset_of!(cudaFuncAttributes, localSizeBytes) - 16usize];
    ["Offset of field: cudaFuncAttributes::maxThreadsPerBlock"]
        [::std::mem::offset_of!(cudaFuncAttributes, maxThreadsPerBlock) - 24usize];
    ["Offset of field: cudaFuncAttributes::numRegs"]
        [::std::mem::offset_of!(cudaFuncAttributes, numRegs) - 28usize];
    ["Offset of field: cudaFuncAttributes::ptxVersion"]
        [::std::mem::offset_of!(cudaFuncAttributes, ptxVersion) - 32usize];
    ["Offset of field: cudaFuncAttributes::binaryVersion"]
        [::std::mem::offset_of!(cudaFuncAttributes, binaryVersion) - 36usize];
    ["Offset of field: cudaFuncAttributes::cacheModeCA"]
        [::std::mem::offset_of!(cudaFuncAttributes, cacheModeCA) - 40usize];
    ["Offset of field: cudaFuncAttributes::maxDynamicSharedSizeBytes"]
        [::std::mem::offset_of!(cudaFuncAttributes, maxDynamicSharedSizeBytes) - 44usize];
    ["Offset of field: cudaFuncAttributes::preferredShmemCarveout"]
        [::std::mem::offset_of!(cudaFuncAttributes, preferredShmemCarveout) - 48usize];
};
pub const cudaFuncAttribute_cudaFuncAttributeMaxDynamicSharedMemorySize: cudaFuncAttribute = 8;
pub const cudaFuncAttribute_cudaFuncAttributePreferredSharedMemoryCarveout: cudaFuncAttribute = 9;
pub const cudaFuncAttribute_cudaFuncAttributeMax: cudaFuncAttribute = 10;
pub type cudaFuncAttribute = ::std::os::raw::c_uint;
pub const cudaFuncCache_cudaFuncCachePreferNone: cudaFuncCache = 0;
pub const cudaFuncCache_cudaFuncCachePreferShared: cudaFuncCache = 1;
pub const cudaFuncCache_cudaFuncCachePreferL1: cudaFuncCache = 2;
pub const cudaFuncCache_cudaFuncCachePreferEqual: cudaFuncCache = 3;
pub type cudaFuncCache = ::std::os::raw::c_uint;
pub const cudaSharedMemConfig_cudaSharedMemBankSizeDefault: cudaSharedMemConfig = 0;
pub const cudaSharedMemConfig_cudaSharedMemBankSizeFourByte: cudaSharedMemConfig = 1;
pub const cudaSharedMemConfig_cudaSharedMemBankSizeEightByte: cudaSharedMemConfig = 2;
pub type cudaSharedMemConfig = ::std::os::raw::c_uint;
pub const cudaSharedCarveout_cudaSharedmemCarveoutDefault: cudaSharedCarveout = -1;
pub const cudaSharedCarveout_cudaSharedmemCarveoutMaxShared: cudaSharedCarveout = 100;
pub const cudaSharedCarveout_cudaSharedmemCarveoutMaxL1: cudaSharedCarveout = 0;
pub type cudaSharedCarveout = ::std::os::raw::c_int;
pub const cudaComputeMode_cudaComputeModeDefault: cudaComputeMode = 0;
pub const cudaComputeMode_cudaComputeModeExclusive: cudaComputeMode = 1;
pub const cudaComputeMode_cudaComputeModeProhibited: cudaComputeMode = 2;
pub const cudaComputeMode_cudaComputeModeExclusiveProcess: cudaComputeMode = 3;
pub type cudaComputeMode = ::std::os::raw::c_uint;
pub const cudaLimit_cudaLimitStackSize: cudaLimit = 0;
pub const cudaLimit_cudaLimitPrintfFifoSize: cudaLimit = 1;
pub const cudaLimit_cudaLimitMallocHeapSize: cudaLimit = 2;
pub const cudaLimit_cudaLimitDevRuntimeSyncDepth: cudaLimit = 3;
pub const cudaLimit_cudaLimitDevRuntimePendingLaunchCount: cudaLimit = 4;
pub const cudaLimit_cudaLimitMaxL2FetchGranularity: cudaLimit = 5;
pub type cudaLimit = ::std::os::raw::c_uint;
pub const cudaMemoryAdvise_cudaMemAdviseSetReadMostly: cudaMemoryAdvise = 1;
pub const cudaMemoryAdvise_cudaMemAdviseUnsetReadMostly: cudaMemoryAdvise = 2;
pub const cudaMemoryAdvise_cudaMemAdviseSetPreferredLocation: cudaMemoryAdvise = 3;
pub const cudaMemoryAdvise_cudaMemAdviseUnsetPreferredLocation: cudaMemoryAdvise = 4;
pub const cudaMemoryAdvise_cudaMemAdviseSetAccessedBy: cudaMemoryAdvise = 5;
pub const cudaMemoryAdvise_cudaMemAdviseUnsetAccessedBy: cudaMemoryAdvise = 6;
pub type cudaMemoryAdvise = ::std::os::raw::c_uint;
pub const cudaMemRangeAttribute_cudaMemRangeAttributeReadMostly: cudaMemRangeAttribute = 1;
pub const cudaMemRangeAttribute_cudaMemRangeAttributePreferredLocation: cudaMemRangeAttribute = 2;
pub const cudaMemRangeAttribute_cudaMemRangeAttributeAccessedBy: cudaMemRangeAttribute = 3;
pub const cudaMemRangeAttribute_cudaMemRangeAttributeLastPrefetchLocation: cudaMemRangeAttribute =
    4;
pub type cudaMemRangeAttribute = ::std::os::raw::c_uint;
pub const cudaOutputMode_cudaKeyValuePair: cudaOutputMode = 0;
pub const cudaOutputMode_cudaCSV: cudaOutputMode = 1;
pub type cudaOutputMode = ::std::os::raw::c_uint;
pub const cudaDeviceAttr_cudaDevAttrMaxThreadsPerBlock: cudaDeviceAttr = 1;
pub const cudaDeviceAttr_cudaDevAttrMaxBlockDimX: cudaDeviceAttr = 2;
pub const cudaDeviceAttr_cudaDevAttrMaxBlockDimY: cudaDeviceAttr = 3;
pub const cudaDeviceAttr_cudaDevAttrMaxBlockDimZ: cudaDeviceAttr = 4;
pub const cudaDeviceAttr_cudaDevAttrMaxGridDimX: cudaDeviceAttr = 5;
pub const cudaDeviceAttr_cudaDevAttrMaxGridDimY: cudaDeviceAttr = 6;
pub const cudaDeviceAttr_cudaDevAttrMaxGridDimZ: cudaDeviceAttr = 7;
pub const cudaDeviceAttr_cudaDevAttrMaxSharedMemoryPerBlock: cudaDeviceAttr = 8;
pub const cudaDeviceAttr_cudaDevAttrTotalConstantMemory: cudaDeviceAttr = 9;
pub const cudaDeviceAttr_cudaDevAttrWarpSize: cudaDeviceAttr = 10;
pub const cudaDeviceAttr_cudaDevAttrMaxPitch: cudaDeviceAttr = 11;
pub const cudaDeviceAttr_cudaDevAttrMaxRegistersPerBlock: cudaDeviceAttr = 12;
pub const cudaDeviceAttr_cudaDevAttrClockRate: cudaDeviceAttr = 13;
pub const cudaDeviceAttr_cudaDevAttrTextureAlignment: cudaDeviceAttr = 14;
pub const cudaDeviceAttr_cudaDevAttrGpuOverlap: cudaDeviceAttr = 15;
pub const cudaDeviceAttr_cudaDevAttrMultiProcessorCount: cudaDeviceAttr = 16;
pub const cudaDeviceAttr_cudaDevAttrKernelExecTimeout: cudaDeviceAttr = 17;
pub const cudaDeviceAttr_cudaDevAttrIntegrated: cudaDeviceAttr = 18;
pub const cudaDeviceAttr_cudaDevAttrCanMapHostMemory: cudaDeviceAttr = 19;
pub const cudaDeviceAttr_cudaDevAttrComputeMode: cudaDeviceAttr = 20;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture1DWidth: cudaDeviceAttr = 21;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DWidth: cudaDeviceAttr = 22;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DHeight: cudaDeviceAttr = 23;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture3DWidth: cudaDeviceAttr = 24;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture3DHeight: cudaDeviceAttr = 25;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture3DDepth: cudaDeviceAttr = 26;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DLayeredWidth: cudaDeviceAttr = 27;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DLayeredHeight: cudaDeviceAttr = 28;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DLayeredLayers: cudaDeviceAttr = 29;
pub const cudaDeviceAttr_cudaDevAttrSurfaceAlignment: cudaDeviceAttr = 30;
pub const cudaDeviceAttr_cudaDevAttrConcurrentKernels: cudaDeviceAttr = 31;
pub const cudaDeviceAttr_cudaDevAttrEccEnabled: cudaDeviceAttr = 32;
pub const cudaDeviceAttr_cudaDevAttrPciBusId: cudaDeviceAttr = 33;
pub const cudaDeviceAttr_cudaDevAttrPciDeviceId: cudaDeviceAttr = 34;
pub const cudaDeviceAttr_cudaDevAttrTccDriver: cudaDeviceAttr = 35;
pub const cudaDeviceAttr_cudaDevAttrMemoryClockRate: cudaDeviceAttr = 36;
pub const cudaDeviceAttr_cudaDevAttrGlobalMemoryBusWidth: cudaDeviceAttr = 37;
pub const cudaDeviceAttr_cudaDevAttrL2CacheSize: cudaDeviceAttr = 38;
pub const cudaDeviceAttr_cudaDevAttrMaxThreadsPerMultiProcessor: cudaDeviceAttr = 39;
pub const cudaDeviceAttr_cudaDevAttrAsyncEngineCount: cudaDeviceAttr = 40;
pub const cudaDeviceAttr_cudaDevAttrUnifiedAddressing: cudaDeviceAttr = 41;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture1DLayeredWidth: cudaDeviceAttr = 42;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture1DLayeredLayers: cudaDeviceAttr = 43;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DGatherWidth: cudaDeviceAttr = 45;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DGatherHeight: cudaDeviceAttr = 46;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture3DWidthAlt: cudaDeviceAttr = 47;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture3DHeightAlt: cudaDeviceAttr = 48;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture3DDepthAlt: cudaDeviceAttr = 49;
pub const cudaDeviceAttr_cudaDevAttrPciDomainId: cudaDeviceAttr = 50;
pub const cudaDeviceAttr_cudaDevAttrTexturePitchAlignment: cudaDeviceAttr = 51;
pub const cudaDeviceAttr_cudaDevAttrMaxTextureCubemapWidth: cudaDeviceAttr = 52;
pub const cudaDeviceAttr_cudaDevAttrMaxTextureCubemapLayeredWidth: cudaDeviceAttr = 53;
pub const cudaDeviceAttr_cudaDevAttrMaxTextureCubemapLayeredLayers: cudaDeviceAttr = 54;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface1DWidth: cudaDeviceAttr = 55;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface2DWidth: cudaDeviceAttr = 56;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface2DHeight: cudaDeviceAttr = 57;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface3DWidth: cudaDeviceAttr = 58;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface3DHeight: cudaDeviceAttr = 59;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface3DDepth: cudaDeviceAttr = 60;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface1DLayeredWidth: cudaDeviceAttr = 61;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface1DLayeredLayers: cudaDeviceAttr = 62;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface2DLayeredWidth: cudaDeviceAttr = 63;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface2DLayeredHeight: cudaDeviceAttr = 64;
pub const cudaDeviceAttr_cudaDevAttrMaxSurface2DLayeredLayers: cudaDeviceAttr = 65;
pub const cudaDeviceAttr_cudaDevAttrMaxSurfaceCubemapWidth: cudaDeviceAttr = 66;
pub const cudaDeviceAttr_cudaDevAttrMaxSurfaceCubemapLayeredWidth: cudaDeviceAttr = 67;
pub const cudaDeviceAttr_cudaDevAttrMaxSurfaceCubemapLayeredLayers: cudaDeviceAttr = 68;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture1DLinearWidth: cudaDeviceAttr = 69;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DLinearWidth: cudaDeviceAttr = 70;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DLinearHeight: cudaDeviceAttr = 71;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DLinearPitch: cudaDeviceAttr = 72;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DMipmappedWidth: cudaDeviceAttr = 73;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture2DMipmappedHeight: cudaDeviceAttr = 74;
pub const cudaDeviceAttr_cudaDevAttrComputeCapabilityMajor: cudaDeviceAttr = 75;
pub const cudaDeviceAttr_cudaDevAttrComputeCapabilityMinor: cudaDeviceAttr = 76;
pub const cudaDeviceAttr_cudaDevAttrMaxTexture1DMipmappedWidth: cudaDeviceAttr = 77;
pub const cudaDeviceAttr_cudaDevAttrStreamPrioritiesSupported: cudaDeviceAttr = 78;
pub const cudaDeviceAttr_cudaDevAttrGlobalL1CacheSupported: cudaDeviceAttr = 79;
pub const cudaDeviceAttr_cudaDevAttrLocalL1CacheSupported: cudaDeviceAttr = 80;
pub const cudaDeviceAttr_cudaDevAttrMaxSharedMemoryPerMultiprocessor: cudaDeviceAttr = 81;
pub const cudaDeviceAttr_cudaDevAttrMaxRegistersPerMultiprocessor: cudaDeviceAttr = 82;
pub const cudaDeviceAttr_cudaDevAttrManagedMemory: cudaDeviceAttr = 83;
pub const cudaDeviceAttr_cudaDevAttrIsMultiGpuBoard: cudaDeviceAttr = 84;
pub const cudaDeviceAttr_cudaDevAttrMultiGpuBoardGroupID: cudaDeviceAttr = 85;
pub const cudaDeviceAttr_cudaDevAttrHostNativeAtomicSupported: cudaDeviceAttr = 86;
pub const cudaDeviceAttr_cudaDevAttrSingleToDoublePrecisionPerfRatio: cudaDeviceAttr = 87;
pub const cudaDeviceAttr_cudaDevAttrPageableMemoryAccess: cudaDeviceAttr = 88;
pub const cudaDeviceAttr_cudaDevAttrConcurrentManagedAccess: cudaDeviceAttr = 89;
pub const cudaDeviceAttr_cudaDevAttrComputePreemptionSupported: cudaDeviceAttr = 90;
pub const cudaDeviceAttr_cudaDevAttrCanUseHostPointerForRegisteredMem: cudaDeviceAttr = 91;
pub const cudaDeviceAttr_cudaDevAttrReserved92: cudaDeviceAttr = 92;
pub const cudaDeviceAttr_cudaDevAttrReserved93: cudaDeviceAttr = 93;
pub const cudaDeviceAttr_cudaDevAttrReserved94: cudaDeviceAttr = 94;
pub const cudaDeviceAttr_cudaDevAttrCooperativeLaunch: cudaDeviceAttr = 95;
pub const cudaDeviceAttr_cudaDevAttrCooperativeMultiDeviceLaunch: cudaDeviceAttr = 96;
pub const cudaDeviceAttr_cudaDevAttrMaxSharedMemoryPerBlockOptin: cudaDeviceAttr = 97;
pub const cudaDeviceAttr_cudaDevAttrCanFlushRemoteWrites: cudaDeviceAttr = 98;
pub const cudaDeviceAttr_cudaDevAttrHostRegisterSupported: cudaDeviceAttr = 99;
pub const cudaDeviceAttr_cudaDevAttrPageableMemoryAccessUsesHostPageTables: cudaDeviceAttr = 100;
pub const cudaDeviceAttr_cudaDevAttrDirectManagedMemAccessFromHost: cudaDeviceAttr = 101;
pub type cudaDeviceAttr = ::std::os::raw::c_uint;
pub const cudaDeviceP2PAttr_cudaDevP2PAttrPerformanceRank: cudaDeviceP2PAttr = 1;
pub const cudaDeviceP2PAttr_cudaDevP2PAttrAccessSupported: cudaDeviceP2PAttr = 2;
pub const cudaDeviceP2PAttr_cudaDevP2PAttrNativeAtomicSupported: cudaDeviceP2PAttr = 3;
pub const cudaDeviceP2PAttr_cudaDevP2PAttrCudaArrayAccessSupported: cudaDeviceP2PAttr = 4;
pub type cudaDeviceP2PAttr = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CUuuid_st {
    pub bytes: [::std::os::raw::c_char; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of CUuuid_st"][::std::mem::size_of::<CUuuid_st>() - 16usize];
    ["Alignment of CUuuid_st"][::std::mem::align_of::<CUuuid_st>() - 1usize];
    ["Offset of field: CUuuid_st::bytes"][::std::mem::offset_of!(CUuuid_st, bytes) - 0usize];
};
pub type CUuuid = CUuuid_st;
pub type cudaUUID_t = CUuuid_st;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaDeviceProp {
    pub name: [::std::os::raw::c_char; 256usize],
    pub uuid: cudaUUID_t,
    pub luid: [::std::os::raw::c_char; 8usize],
    pub luidDeviceNodeMask: ::std::os::raw::c_uint,
    pub totalGlobalMem: usize,
    pub sharedMemPerBlock: usize,
    pub regsPerBlock: ::std::os::raw::c_int,
    pub warpSize: ::std::os::raw::c_int,
    pub memPitch: usize,
    pub maxThreadsPerBlock: ::std::os::raw::c_int,
    pub maxThreadsDim: [::std::os::raw::c_int; 3usize],
    pub maxGridSize: [::std::os::raw::c_int; 3usize],
    pub clockRate: ::std::os::raw::c_int,
    pub totalConstMem: usize,
    pub major: ::std::os::raw::c_int,
    pub minor: ::std::os::raw::c_int,
    pub textureAlignment: usize,
    pub texturePitchAlignment: usize,
    pub deviceOverlap: ::std::os::raw::c_int,
    pub multiProcessorCount: ::std::os::raw::c_int,
    pub kernelExecTimeoutEnabled: ::std::os::raw::c_int,
    pub integrated: ::std::os::raw::c_int,
    pub canMapHostMemory: ::std::os::raw::c_int,
    pub computeMode: ::std::os::raw::c_int,
    pub maxTexture1D: ::std::os::raw::c_int,
    pub maxTexture1DMipmap: ::std::os::raw::c_int,
    pub maxTexture1DLinear: ::std::os::raw::c_int,
    pub maxTexture2D: [::std::os::raw::c_int; 2usize],
    pub maxTexture2DMipmap: [::std::os::raw::c_int; 2usize],
    pub maxTexture2DLinear: [::std::os::raw::c_int; 3usize],
    pub maxTexture2DGather: [::std::os::raw::c_int; 2usize],
    pub maxTexture3D: [::std::os::raw::c_int; 3usize],
    pub maxTexture3DAlt: [::std::os::raw::c_int; 3usize],
    pub maxTextureCubemap: ::std::os::raw::c_int,
    pub maxTexture1DLayered: [::std::os::raw::c_int; 2usize],
    pub maxTexture2DLayered: [::std::os::raw::c_int; 3usize],
    pub maxTextureCubemapLayered: [::std::os::raw::c_int; 2usize],
    pub maxSurface1D: ::std::os::raw::c_int,
    pub maxSurface2D: [::std::os::raw::c_int; 2usize],
    pub maxSurface3D: [::std::os::raw::c_int; 3usize],
    pub maxSurface1DLayered: [::std::os::raw::c_int; 2usize],
    pub maxSurface2DLayered: [::std::os::raw::c_int; 3usize],
    pub maxSurfaceCubemap: ::std::os::raw::c_int,
    pub maxSurfaceCubemapLayered: [::std::os::raw::c_int; 2usize],
    pub surfaceAlignment: usize,
    pub concurrentKernels: ::std::os::raw::c_int,
    pub ECCEnabled: ::std::os::raw::c_int,
    pub pciBusID: ::std::os::raw::c_int,
    pub pciDeviceID: ::std::os::raw::c_int,
    pub pciDomainID: ::std::os::raw::c_int,
    pub tccDriver: ::std::os::raw::c_int,
    pub asyncEngineCount: ::std::os::raw::c_int,
    pub unifiedAddressing: ::std::os::raw::c_int,
    pub memoryClockRate: ::std::os::raw::c_int,
    pub memoryBusWidth: ::std::os::raw::c_int,
    pub l2CacheSize: ::std::os::raw::c_int,
    pub maxThreadsPerMultiProcessor: ::std::os::raw::c_int,
    pub streamPrioritiesSupported: ::std::os::raw::c_int,
    pub globalL1CacheSupported: ::std::os::raw::c_int,
    pub localL1CacheSupported: ::std::os::raw::c_int,
    pub sharedMemPerMultiprocessor: usize,
    pub regsPerMultiprocessor: ::std::os::raw::c_int,
    pub managedMemory: ::std::os::raw::c_int,
    pub isMultiGpuBoard: ::std::os::raw::c_int,
    pub multiGpuBoardGroupID: ::std::os::raw::c_int,
    pub hostNativeAtomicSupported: ::std::os::raw::c_int,
    pub singleToDoublePrecisionPerfRatio: ::std::os::raw::c_int,
    pub pageableMemoryAccess: ::std::os::raw::c_int,
    pub concurrentManagedAccess: ::std::os::raw::c_int,
    pub computePreemptionSupported: ::std::os::raw::c_int,
    pub canUseHostPointerForRegisteredMem: ::std::os::raw::c_int,
    pub cooperativeLaunch: ::std::os::raw::c_int,
    pub cooperativeMultiDeviceLaunch: ::std::os::raw::c_int,
    pub sharedMemPerBlockOptin: usize,
    pub pageableMemoryAccessUsesHostPageTables: ::std::os::raw::c_int,
    pub directManagedMemAccessFromHost: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaDeviceProp"][::std::mem::size_of::<cudaDeviceProp>() - 712usize];
    ["Alignment of cudaDeviceProp"][::std::mem::align_of::<cudaDeviceProp>() - 8usize];
    ["Offset of field: cudaDeviceProp::name"]
        [::std::mem::offset_of!(cudaDeviceProp, name) - 0usize];
    ["Offset of field: cudaDeviceProp::uuid"]
        [::std::mem::offset_of!(cudaDeviceProp, uuid) - 256usize];
    ["Offset of field: cudaDeviceProp::luid"]
        [::std::mem::offset_of!(cudaDeviceProp, luid) - 272usize];
    ["Offset of field: cudaDeviceProp::luidDeviceNodeMask"]
        [::std::mem::offset_of!(cudaDeviceProp, luidDeviceNodeMask) - 280usize];
    ["Offset of field: cudaDeviceProp::totalGlobalMem"]
        [::std::mem::offset_of!(cudaDeviceProp, totalGlobalMem) - 288usize];
    ["Offset of field: cudaDeviceProp::sharedMemPerBlock"]
        [::std::mem::offset_of!(cudaDeviceProp, sharedMemPerBlock) - 296usize];
    ["Offset of field: cudaDeviceProp::regsPerBlock"]
        [::std::mem::offset_of!(cudaDeviceProp, regsPerBlock) - 304usize];
    ["Offset of field: cudaDeviceProp::warpSize"]
        [::std::mem::offset_of!(cudaDeviceProp, warpSize) - 308usize];
    ["Offset of field: cudaDeviceProp::memPitch"]
        [::std::mem::offset_of!(cudaDeviceProp, memPitch) - 312usize];
    ["Offset of field: cudaDeviceProp::maxThreadsPerBlock"]
        [::std::mem::offset_of!(cudaDeviceProp, maxThreadsPerBlock) - 320usize];
    ["Offset of field: cudaDeviceProp::maxThreadsDim"]
        [::std::mem::offset_of!(cudaDeviceProp, maxThreadsDim) - 324usize];
    ["Offset of field: cudaDeviceProp::maxGridSize"]
        [::std::mem::offset_of!(cudaDeviceProp, maxGridSize) - 336usize];
    ["Offset of field: cudaDeviceProp::clockRate"]
        [::std::mem::offset_of!(cudaDeviceProp, clockRate) - 348usize];
    ["Offset of field: cudaDeviceProp::totalConstMem"]
        [::std::mem::offset_of!(cudaDeviceProp, totalConstMem) - 352usize];
    ["Offset of field: cudaDeviceProp::major"]
        [::std::mem::offset_of!(cudaDeviceProp, major) - 360usize];
    ["Offset of field: cudaDeviceProp::minor"]
        [::std::mem::offset_of!(cudaDeviceProp, minor) - 364usize];
    ["Offset of field: cudaDeviceProp::textureAlignment"]
        [::std::mem::offset_of!(cudaDeviceProp, textureAlignment) - 368usize];
    ["Offset of field: cudaDeviceProp::texturePitchAlignment"]
        [::std::mem::offset_of!(cudaDeviceProp, texturePitchAlignment) - 376usize];
    ["Offset of field: cudaDeviceProp::deviceOverlap"]
        [::std::mem::offset_of!(cudaDeviceProp, deviceOverlap) - 384usize];
    ["Offset of field: cudaDeviceProp::multiProcessorCount"]
        [::std::mem::offset_of!(cudaDeviceProp, multiProcessorCount) - 388usize];
    ["Offset of field: cudaDeviceProp::kernelExecTimeoutEnabled"]
        [::std::mem::offset_of!(cudaDeviceProp, kernelExecTimeoutEnabled) - 392usize];
    ["Offset of field: cudaDeviceProp::integrated"]
        [::std::mem::offset_of!(cudaDeviceProp, integrated) - 396usize];
    ["Offset of field: cudaDeviceProp::canMapHostMemory"]
        [::std::mem::offset_of!(cudaDeviceProp, canMapHostMemory) - 400usize];
    ["Offset of field: cudaDeviceProp::computeMode"]
        [::std::mem::offset_of!(cudaDeviceProp, computeMode) - 404usize];
    ["Offset of field: cudaDeviceProp::maxTexture1D"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture1D) - 408usize];
    ["Offset of field: cudaDeviceProp::maxTexture1DMipmap"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture1DMipmap) - 412usize];
    ["Offset of field: cudaDeviceProp::maxTexture1DLinear"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture1DLinear) - 416usize];
    ["Offset of field: cudaDeviceProp::maxTexture2D"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture2D) - 420usize];
    ["Offset of field: cudaDeviceProp::maxTexture2DMipmap"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture2DMipmap) - 428usize];
    ["Offset of field: cudaDeviceProp::maxTexture2DLinear"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture2DLinear) - 436usize];
    ["Offset of field: cudaDeviceProp::maxTexture2DGather"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture2DGather) - 448usize];
    ["Offset of field: cudaDeviceProp::maxTexture3D"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture3D) - 456usize];
    ["Offset of field: cudaDeviceProp::maxTexture3DAlt"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture3DAlt) - 468usize];
    ["Offset of field: cudaDeviceProp::maxTextureCubemap"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTextureCubemap) - 480usize];
    ["Offset of field: cudaDeviceProp::maxTexture1DLayered"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture1DLayered) - 484usize];
    ["Offset of field: cudaDeviceProp::maxTexture2DLayered"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTexture2DLayered) - 492usize];
    ["Offset of field: cudaDeviceProp::maxTextureCubemapLayered"]
        [::std::mem::offset_of!(cudaDeviceProp, maxTextureCubemapLayered) - 504usize];
    ["Offset of field: cudaDeviceProp::maxSurface1D"]
        [::std::mem::offset_of!(cudaDeviceProp, maxSurface1D) - 512usize];
    ["Offset of field: cudaDeviceProp::maxSurface2D"]
        [::std::mem::offset_of!(cudaDeviceProp, maxSurface2D) - 516usize];
    ["Offset of field: cudaDeviceProp::maxSurface3D"]
        [::std::mem::offset_of!(cudaDeviceProp, maxSurface3D) - 524usize];
    ["Offset of field: cudaDeviceProp::maxSurface1DLayered"]
        [::std::mem::offset_of!(cudaDeviceProp, maxSurface1DLayered) - 536usize];
    ["Offset of field: cudaDeviceProp::maxSurface2DLayered"]
        [::std::mem::offset_of!(cudaDeviceProp, maxSurface2DLayered) - 544usize];
    ["Offset of field: cudaDeviceProp::maxSurfaceCubemap"]
        [::std::mem::offset_of!(cudaDeviceProp, maxSurfaceCubemap) - 556usize];
    ["Offset of field: cudaDeviceProp::maxSurfaceCubemapLayered"]
        [::std::mem::offset_of!(cudaDeviceProp, maxSurfaceCubemapLayered) - 560usize];
    ["Offset of field: cudaDeviceProp::surfaceAlignment"]
        [::std::mem::offset_of!(cudaDeviceProp, surfaceAlignment) - 568usize];
    ["Offset of field: cudaDeviceProp::concurrentKernels"]
        [::std::mem::offset_of!(cudaDeviceProp, concurrentKernels) - 576usize];
    ["Offset of field: cudaDeviceProp::ECCEnabled"]
        [::std::mem::offset_of!(cudaDeviceProp, ECCEnabled) - 580usize];
    ["Offset of field: cudaDeviceProp::pciBusID"]
        [::std::mem::offset_of!(cudaDeviceProp, pciBusID) - 584usize];
    ["Offset of field: cudaDeviceProp::pciDeviceID"]
        [::std::mem::offset_of!(cudaDeviceProp, pciDeviceID) - 588usize];
    ["Offset of field: cudaDeviceProp::pciDomainID"]
        [::std::mem::offset_of!(cudaDeviceProp, pciDomainID) - 592usize];
    ["Offset of field: cudaDeviceProp::tccDriver"]
        [::std::mem::offset_of!(cudaDeviceProp, tccDriver) - 596usize];
    ["Offset of field: cudaDeviceProp::asyncEngineCount"]
        [::std::mem::offset_of!(cudaDeviceProp, asyncEngineCount) - 600usize];
    ["Offset of field: cudaDeviceProp::unifiedAddressing"]
        [::std::mem::offset_of!(cudaDeviceProp, unifiedAddressing) - 604usize];
    ["Offset of field: cudaDeviceProp::memoryClockRate"]
        [::std::mem::offset_of!(cudaDeviceProp, memoryClockRate) - 608usize];
    ["Offset of field: cudaDeviceProp::memoryBusWidth"]
        [::std::mem::offset_of!(cudaDeviceProp, memoryBusWidth) - 612usize];
    ["Offset of field: cudaDeviceProp::l2CacheSize"]
        [::std::mem::offset_of!(cudaDeviceProp, l2CacheSize) - 616usize];
    ["Offset of field: cudaDeviceProp::maxThreadsPerMultiProcessor"]
        [::std::mem::offset_of!(cudaDeviceProp, maxThreadsPerMultiProcessor) - 620usize];
    ["Offset of field: cudaDeviceProp::streamPrioritiesSupported"]
        [::std::mem::offset_of!(cudaDeviceProp, streamPrioritiesSupported) - 624usize];
    ["Offset of field: cudaDeviceProp::globalL1CacheSupported"]
        [::std::mem::offset_of!(cudaDeviceProp, globalL1CacheSupported) - 628usize];
    ["Offset of field: cudaDeviceProp::localL1CacheSupported"]
        [::std::mem::offset_of!(cudaDeviceProp, localL1CacheSupported) - 632usize];
    ["Offset of field: cudaDeviceProp::sharedMemPerMultiprocessor"]
        [::std::mem::offset_of!(cudaDeviceProp, sharedMemPerMultiprocessor) - 640usize];
    ["Offset of field: cudaDeviceProp::regsPerMultiprocessor"]
        [::std::mem::offset_of!(cudaDeviceProp, regsPerMultiprocessor) - 648usize];
    ["Offset of field: cudaDeviceProp::managedMemory"]
        [::std::mem::offset_of!(cudaDeviceProp, managedMemory) - 652usize];
    ["Offset of field: cudaDeviceProp::isMultiGpuBoard"]
        [::std::mem::offset_of!(cudaDeviceProp, isMultiGpuBoard) - 656usize];
    ["Offset of field: cudaDeviceProp::multiGpuBoardGroupID"]
        [::std::mem::offset_of!(cudaDeviceProp, multiGpuBoardGroupID) - 660usize];
    ["Offset of field: cudaDeviceProp::hostNativeAtomicSupported"]
        [::std::mem::offset_of!(cudaDeviceProp, hostNativeAtomicSupported) - 664usize];
    ["Offset of field: cudaDeviceProp::singleToDoublePrecisionPerfRatio"]
        [::std::mem::offset_of!(cudaDeviceProp, singleToDoublePrecisionPerfRatio) - 668usize];
    ["Offset of field: cudaDeviceProp::pageableMemoryAccess"]
        [::std::mem::offset_of!(cudaDeviceProp, pageableMemoryAccess) - 672usize];
    ["Offset of field: cudaDeviceProp::concurrentManagedAccess"]
        [::std::mem::offset_of!(cudaDeviceProp, concurrentManagedAccess) - 676usize];
    ["Offset of field: cudaDeviceProp::computePreemptionSupported"]
        [::std::mem::offset_of!(cudaDeviceProp, computePreemptionSupported) - 680usize];
    ["Offset of field: cudaDeviceProp::canUseHostPointerForRegisteredMem"]
        [::std::mem::offset_of!(cudaDeviceProp, canUseHostPointerForRegisteredMem) - 684usize];
    ["Offset of field: cudaDeviceProp::cooperativeLaunch"]
        [::std::mem::offset_of!(cudaDeviceProp, cooperativeLaunch) - 688usize];
    ["Offset of field: cudaDeviceProp::cooperativeMultiDeviceLaunch"]
        [::std::mem::offset_of!(cudaDeviceProp, cooperativeMultiDeviceLaunch) - 692usize];
    ["Offset of field: cudaDeviceProp::sharedMemPerBlockOptin"]
        [::std::mem::offset_of!(cudaDeviceProp, sharedMemPerBlockOptin) - 696usize];
    ["Offset of field: cudaDeviceProp::pageableMemoryAccessUsesHostPageTables"]
        [::std::mem::offset_of!(cudaDeviceProp, pageableMemoryAccessUsesHostPageTables) - 704usize];
    ["Offset of field: cudaDeviceProp::directManagedMemAccessFromHost"]
        [::std::mem::offset_of!(cudaDeviceProp, directManagedMemAccessFromHost) - 708usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaIpcEventHandle_st {
    pub reserved: [::std::os::raw::c_char; 64usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaIpcEventHandle_st"][::std::mem::size_of::<cudaIpcEventHandle_st>() - 64usize];
    ["Alignment of cudaIpcEventHandle_st"]
        [::std::mem::align_of::<cudaIpcEventHandle_st>() - 1usize];
    ["Offset of field: cudaIpcEventHandle_st::reserved"]
        [::std::mem::offset_of!(cudaIpcEventHandle_st, reserved) - 0usize];
};
pub type cudaIpcEventHandle_t = cudaIpcEventHandle_st;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaIpcMemHandle_st {
    pub reserved: [::std::os::raw::c_char; 64usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaIpcMemHandle_st"][::std::mem::size_of::<cudaIpcMemHandle_st>() - 64usize];
    ["Alignment of cudaIpcMemHandle_st"][::std::mem::align_of::<cudaIpcMemHandle_st>() - 1usize];
    ["Offset of field: cudaIpcMemHandle_st::reserved"]
        [::std::mem::offset_of!(cudaIpcMemHandle_st, reserved) - 0usize];
};
pub type cudaIpcMemHandle_t = cudaIpcMemHandle_st;
pub const cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeOpaqueFd:
    cudaExternalMemoryHandleType = 1;
pub const cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeOpaqueWin32:
    cudaExternalMemoryHandleType = 2;
pub const cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeOpaqueWin32Kmt:
    cudaExternalMemoryHandleType = 3;
pub const cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeD3D12Heap:
    cudaExternalMemoryHandleType = 4;
pub const cudaExternalMemoryHandleType_cudaExternalMemoryHandleTypeD3D12Resource:
    cudaExternalMemoryHandleType = 5;
pub type cudaExternalMemoryHandleType = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cudaExternalMemoryHandleDesc {
    pub type_: cudaExternalMemoryHandleType,
    pub handle: cudaExternalMemoryHandleDesc__bindgen_ty_1,
    pub size: ::std::os::raw::c_ulonglong,
    pub flags: ::std::os::raw::c_uint,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cudaExternalMemoryHandleDesc__bindgen_ty_1 {
    pub fd: ::std::os::raw::c_int,
    pub win32: cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1 {
    pub handle: *mut ::std::os::raw::c_void,
    pub name: *const ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"][::std::mem::size_of::<
        cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1,
    >() - 16usize];
    ["Alignment of cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"][::std::mem::align_of::<
        cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1,
    >() - 8usize];
    ["Offset of field: cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1::handle"][::std::mem::offset_of!(
        cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1,
        handle
    )
        - 0usize];
    ["Offset of field: cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1::name"][::std::mem::offset_of!(
        cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1,
        name
    ) - 8usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalMemoryHandleDesc__bindgen_ty_1"]
        [::std::mem::size_of::<cudaExternalMemoryHandleDesc__bindgen_ty_1>() - 16usize];
    ["Alignment of cudaExternalMemoryHandleDesc__bindgen_ty_1"]
        [::std::mem::align_of::<cudaExternalMemoryHandleDesc__bindgen_ty_1>() - 8usize];
    ["Offset of field: cudaExternalMemoryHandleDesc__bindgen_ty_1::fd"]
        [::std::mem::offset_of!(cudaExternalMemoryHandleDesc__bindgen_ty_1, fd) - 0usize];
    ["Offset of field: cudaExternalMemoryHandleDesc__bindgen_ty_1::win32"]
        [::std::mem::offset_of!(cudaExternalMemoryHandleDesc__bindgen_ty_1, win32) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalMemoryHandleDesc"]
        [::std::mem::size_of::<cudaExternalMemoryHandleDesc>() - 40usize];
    ["Alignment of cudaExternalMemoryHandleDesc"]
        [::std::mem::align_of::<cudaExternalMemoryHandleDesc>() - 8usize];
    ["Offset of field: cudaExternalMemoryHandleDesc::type_"]
        [::std::mem::offset_of!(cudaExternalMemoryHandleDesc, type_) - 0usize];
    ["Offset of field: cudaExternalMemoryHandleDesc::handle"]
        [::std::mem::offset_of!(cudaExternalMemoryHandleDesc, handle) - 8usize];
    ["Offset of field: cudaExternalMemoryHandleDesc::size"]
        [::std::mem::offset_of!(cudaExternalMemoryHandleDesc, size) - 24usize];
    ["Offset of field: cudaExternalMemoryHandleDesc::flags"]
        [::std::mem::offset_of!(cudaExternalMemoryHandleDesc, flags) - 32usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaExternalMemoryBufferDesc {
    pub offset: ::std::os::raw::c_ulonglong,
    pub size: ::std::os::raw::c_ulonglong,
    pub flags: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalMemoryBufferDesc"]
        [::std::mem::size_of::<cudaExternalMemoryBufferDesc>() - 24usize];
    ["Alignment of cudaExternalMemoryBufferDesc"]
        [::std::mem::align_of::<cudaExternalMemoryBufferDesc>() - 8usize];
    ["Offset of field: cudaExternalMemoryBufferDesc::offset"]
        [::std::mem::offset_of!(cudaExternalMemoryBufferDesc, offset) - 0usize];
    ["Offset of field: cudaExternalMemoryBufferDesc::size"]
        [::std::mem::offset_of!(cudaExternalMemoryBufferDesc, size) - 8usize];
    ["Offset of field: cudaExternalMemoryBufferDesc::flags"]
        [::std::mem::offset_of!(cudaExternalMemoryBufferDesc, flags) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaExternalMemoryMipmappedArrayDesc {
    pub offset: ::std::os::raw::c_ulonglong,
    pub formatDesc: cudaChannelFormatDesc,
    pub extent: cudaExtent,
    pub flags: ::std::os::raw::c_uint,
    pub numLevels: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalMemoryMipmappedArrayDesc"]
        [::std::mem::size_of::<cudaExternalMemoryMipmappedArrayDesc>() - 64usize];
    ["Alignment of cudaExternalMemoryMipmappedArrayDesc"]
        [::std::mem::align_of::<cudaExternalMemoryMipmappedArrayDesc>() - 8usize];
    ["Offset of field: cudaExternalMemoryMipmappedArrayDesc::offset"]
        [::std::mem::offset_of!(cudaExternalMemoryMipmappedArrayDesc, offset) - 0usize];
    ["Offset of field: cudaExternalMemoryMipmappedArrayDesc::formatDesc"]
        [::std::mem::offset_of!(cudaExternalMemoryMipmappedArrayDesc, formatDesc) - 8usize];
    ["Offset of field: cudaExternalMemoryMipmappedArrayDesc::extent"]
        [::std::mem::offset_of!(cudaExternalMemoryMipmappedArrayDesc, extent) - 32usize];
    ["Offset of field: cudaExternalMemoryMipmappedArrayDesc::flags"]
        [::std::mem::offset_of!(cudaExternalMemoryMipmappedArrayDesc, flags) - 56usize];
    ["Offset of field: cudaExternalMemoryMipmappedArrayDesc::numLevels"]
        [::std::mem::offset_of!(cudaExternalMemoryMipmappedArrayDesc, numLevels) - 60usize];
};
pub const cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeOpaqueFd:
    cudaExternalSemaphoreHandleType = 1;
pub const cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeOpaqueWin32:
    cudaExternalSemaphoreHandleType = 2;
pub const cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt:
    cudaExternalSemaphoreHandleType = 3;
pub const cudaExternalSemaphoreHandleType_cudaExternalSemaphoreHandleTypeD3D12Fence:
    cudaExternalSemaphoreHandleType = 4;
pub type cudaExternalSemaphoreHandleType = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cudaExternalSemaphoreHandleDesc {
    pub type_: cudaExternalSemaphoreHandleType,
    pub handle: cudaExternalSemaphoreHandleDesc__bindgen_ty_1,
    pub flags: ::std::os::raw::c_uint,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cudaExternalSemaphoreHandleDesc__bindgen_ty_1 {
    pub fd: ::std::os::raw::c_int,
    pub win32: cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1 {
    pub handle: *mut ::std::os::raw::c_void,
    pub name: *const ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"][::std::mem::size_of::<
        cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1,
    >() - 16usize];
    ["Alignment of cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::align_of::<cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1>()
            - 8usize];
    ["Offset of field: cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1::handle"][::std::mem::offset_of!(
        cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1,
        handle
    )
        - 0usize];
    ["Offset of field: cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1::name"][::std::mem::offset_of!(
        cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1,
        name
    )
        - 8usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalSemaphoreHandleDesc__bindgen_ty_1"]
        [::std::mem::size_of::<cudaExternalSemaphoreHandleDesc__bindgen_ty_1>() - 16usize];
    ["Alignment of cudaExternalSemaphoreHandleDesc__bindgen_ty_1"]
        [::std::mem::align_of::<cudaExternalSemaphoreHandleDesc__bindgen_ty_1>() - 8usize];
    ["Offset of field: cudaExternalSemaphoreHandleDesc__bindgen_ty_1::fd"]
        [::std::mem::offset_of!(cudaExternalSemaphoreHandleDesc__bindgen_ty_1, fd) - 0usize];
    ["Offset of field: cudaExternalSemaphoreHandleDesc__bindgen_ty_1::win32"]
        [::std::mem::offset_of!(cudaExternalSemaphoreHandleDesc__bindgen_ty_1, win32) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalSemaphoreHandleDesc"]
        [::std::mem::size_of::<cudaExternalSemaphoreHandleDesc>() - 32usize];
    ["Alignment of cudaExternalSemaphoreHandleDesc"]
        [::std::mem::align_of::<cudaExternalSemaphoreHandleDesc>() - 8usize];
    ["Offset of field: cudaExternalSemaphoreHandleDesc::type_"]
        [::std::mem::offset_of!(cudaExternalSemaphoreHandleDesc, type_) - 0usize];
    ["Offset of field: cudaExternalSemaphoreHandleDesc::handle"]
        [::std::mem::offset_of!(cudaExternalSemaphoreHandleDesc, handle) - 8usize];
    ["Offset of field: cudaExternalSemaphoreHandleDesc::flags"]
        [::std::mem::offset_of!(cudaExternalSemaphoreHandleDesc, flags) - 24usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cudaExternalSemaphoreSignalParams {
    pub params: cudaExternalSemaphoreSignalParams__bindgen_ty_1,
    pub flags: ::std::os::raw::c_uint,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cudaExternalSemaphoreSignalParams__bindgen_ty_1 {
    pub fence: cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1 {
    pub value: ::std::os::raw::c_ulonglong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"][::std::mem::size_of::<
        cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1,
    >() - 8usize];
    ["Alignment of cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::align_of::<cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1>()
            - 8usize];
    ["Offset of field: cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1::value"][::std::mem::offset_of!(
        cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1,
        value
    )
        - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalSemaphoreSignalParams__bindgen_ty_1"]
        [::std::mem::size_of::<cudaExternalSemaphoreSignalParams__bindgen_ty_1>() - 8usize];
    ["Alignment of cudaExternalSemaphoreSignalParams__bindgen_ty_1"]
        [::std::mem::align_of::<cudaExternalSemaphoreSignalParams__bindgen_ty_1>() - 8usize];
    ["Offset of field: cudaExternalSemaphoreSignalParams__bindgen_ty_1::fence"]
        [::std::mem::offset_of!(cudaExternalSemaphoreSignalParams__bindgen_ty_1, fence) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalSemaphoreSignalParams"]
        [::std::mem::size_of::<cudaExternalSemaphoreSignalParams>() - 16usize];
    ["Alignment of cudaExternalSemaphoreSignalParams"]
        [::std::mem::align_of::<cudaExternalSemaphoreSignalParams>() - 8usize];
    ["Offset of field: cudaExternalSemaphoreSignalParams::params"]
        [::std::mem::offset_of!(cudaExternalSemaphoreSignalParams, params) - 0usize];
    ["Offset of field: cudaExternalSemaphoreSignalParams::flags"]
        [::std::mem::offset_of!(cudaExternalSemaphoreSignalParams, flags) - 8usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cudaExternalSemaphoreWaitParams {
    pub params: cudaExternalSemaphoreWaitParams__bindgen_ty_1,
    pub flags: ::std::os::raw::c_uint,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cudaExternalSemaphoreWaitParams__bindgen_ty_1 {
    pub fence: cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1 {
    pub value: ::std::os::raw::c_ulonglong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"][::std::mem::size_of::<
        cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1,
    >() - 8usize];
    ["Alignment of cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::align_of::<cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1>()
            - 8usize];
    ["Offset of field: cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1::value"][::std::mem::offset_of!(
        cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1,
        value
    )
        - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalSemaphoreWaitParams__bindgen_ty_1"]
        [::std::mem::size_of::<cudaExternalSemaphoreWaitParams__bindgen_ty_1>() - 8usize];
    ["Alignment of cudaExternalSemaphoreWaitParams__bindgen_ty_1"]
        [::std::mem::align_of::<cudaExternalSemaphoreWaitParams__bindgen_ty_1>() - 8usize];
    ["Offset of field: cudaExternalSemaphoreWaitParams__bindgen_ty_1::fence"]
        [::std::mem::offset_of!(cudaExternalSemaphoreWaitParams__bindgen_ty_1, fence) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaExternalSemaphoreWaitParams"]
        [::std::mem::size_of::<cudaExternalSemaphoreWaitParams>() - 16usize];
    ["Alignment of cudaExternalSemaphoreWaitParams"]
        [::std::mem::align_of::<cudaExternalSemaphoreWaitParams>() - 8usize];
    ["Offset of field: cudaExternalSemaphoreWaitParams::params"]
        [::std::mem::offset_of!(cudaExternalSemaphoreWaitParams, params) - 0usize];
    ["Offset of field: cudaExternalSemaphoreWaitParams::flags"]
        [::std::mem::offset_of!(cudaExternalSemaphoreWaitParams, flags) - 8usize];
};
pub use self::cudaError as cudaError_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CUstream_st {
    _unused: [u8; 0],
}
pub type cudaStream_t = *mut CUstream_st;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CUevent_st {
    _unused: [u8; 0],
}
pub type cudaEvent_t = *mut CUevent_st;
pub type cudaGraphicsResource_t = *mut cudaGraphicsResource;
pub use self::cudaOutputMode as cudaOutputMode_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CUexternalMemory_st {
    _unused: [u8; 0],
}
pub type cudaExternalMemory_t = *mut CUexternalMemory_st;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CUexternalSemaphore_st {
    _unused: [u8; 0],
}
pub type cudaExternalSemaphore_t = *mut CUexternalSemaphore_st;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CUgraph_st {
    _unused: [u8; 0],
}
pub type cudaGraph_t = *mut CUgraph_st;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CUgraphNode_st {
    _unused: [u8; 0],
}
pub type cudaGraphNode_t = *mut CUgraphNode_st;
pub const cudaCGScope_cudaCGScopeInvalid: cudaCGScope = 0;
pub const cudaCGScope_cudaCGScopeGrid: cudaCGScope = 1;
pub const cudaCGScope_cudaCGScopeMultiGrid: cudaCGScope = 2;
pub type cudaCGScope = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaLaunchParams {
    pub func: *mut ::std::os::raw::c_void,
    pub gridDim: dim3,
    pub blockDim: dim3,
    pub args: *mut *mut ::std::os::raw::c_void,
    pub sharedMem: usize,
    pub stream: cudaStream_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaLaunchParams"][::std::mem::size_of::<cudaLaunchParams>() - 56usize];
    ["Alignment of cudaLaunchParams"][::std::mem::align_of::<cudaLaunchParams>() - 8usize];
    ["Offset of field: cudaLaunchParams::func"]
        [::std::mem::offset_of!(cudaLaunchParams, func) - 0usize];
    ["Offset of field: cudaLaunchParams::gridDim"]
        [::std::mem::offset_of!(cudaLaunchParams, gridDim) - 8usize];
    ["Offset of field: cudaLaunchParams::blockDim"]
        [::std::mem::offset_of!(cudaLaunchParams, blockDim) - 20usize];
    ["Offset of field: cudaLaunchParams::args"]
        [::std::mem::offset_of!(cudaLaunchParams, args) - 32usize];
    ["Offset of field: cudaLaunchParams::sharedMem"]
        [::std::mem::offset_of!(cudaLaunchParams, sharedMem) - 40usize];
    ["Offset of field: cudaLaunchParams::stream"]
        [::std::mem::offset_of!(cudaLaunchParams, stream) - 48usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaKernelNodeParams {
    pub func: *mut ::std::os::raw::c_void,
    pub gridDim: dim3,
    pub blockDim: dim3,
    pub sharedMemBytes: ::std::os::raw::c_uint,
    pub kernelParams: *mut *mut ::std::os::raw::c_void,
    pub extra: *mut *mut ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaKernelNodeParams"][::std::mem::size_of::<cudaKernelNodeParams>() - 56usize];
    ["Alignment of cudaKernelNodeParams"][::std::mem::align_of::<cudaKernelNodeParams>() - 8usize];
    ["Offset of field: cudaKernelNodeParams::func"]
        [::std::mem::offset_of!(cudaKernelNodeParams, func) - 0usize];
    ["Offset of field: cudaKernelNodeParams::gridDim"]
        [::std::mem::offset_of!(cudaKernelNodeParams, gridDim) - 8usize];
    ["Offset of field: cudaKernelNodeParams::blockDim"]
        [::std::mem::offset_of!(cudaKernelNodeParams, blockDim) - 20usize];
    ["Offset of field: cudaKernelNodeParams::sharedMemBytes"]
        [::std::mem::offset_of!(cudaKernelNodeParams, sharedMemBytes) - 32usize];
    ["Offset of field: cudaKernelNodeParams::kernelParams"]
        [::std::mem::offset_of!(cudaKernelNodeParams, kernelParams) - 40usize];
    ["Offset of field: cudaKernelNodeParams::extra"]
        [::std::mem::offset_of!(cudaKernelNodeParams, extra) - 48usize];
};
pub const cudaGraphNodeType_cudaGraphNodeTypeKernel: cudaGraphNodeType = 0;
pub const cudaGraphNodeType_cudaGraphNodeTypeMemcpy: cudaGraphNodeType = 1;
pub const cudaGraphNodeType_cudaGraphNodeTypeMemset: cudaGraphNodeType = 2;
pub const cudaGraphNodeType_cudaGraphNodeTypeHost: cudaGraphNodeType = 3;
pub const cudaGraphNodeType_cudaGraphNodeTypeGraph: cudaGraphNodeType = 4;
pub const cudaGraphNodeType_cudaGraphNodeTypeEmpty: cudaGraphNodeType = 5;
pub const cudaGraphNodeType_cudaGraphNodeTypeCount: cudaGraphNodeType = 6;
pub type cudaGraphNodeType = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CUgraphExec_st {
    _unused: [u8; 0],
}
pub type cudaGraphExec_t = *mut CUgraphExec_st;
pub const cudaSurfaceBoundaryMode_cudaBoundaryModeZero: cudaSurfaceBoundaryMode = 0;
pub const cudaSurfaceBoundaryMode_cudaBoundaryModeClamp: cudaSurfaceBoundaryMode = 1;
pub const cudaSurfaceBoundaryMode_cudaBoundaryModeTrap: cudaSurfaceBoundaryMode = 2;
pub type cudaSurfaceBoundaryMode = ::std::os::raw::c_uint;
pub const cudaSurfaceFormatMode_cudaFormatModeForced: cudaSurfaceFormatMode = 0;
pub const cudaSurfaceFormatMode_cudaFormatModeAuto: cudaSurfaceFormatMode = 1;
pub type cudaSurfaceFormatMode = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct surfaceReference {
    pub channelDesc: cudaChannelFormatDesc,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of surfaceReference"][::std::mem::size_of::<surfaceReference>() - 20usize];
    ["Alignment of surfaceReference"][::std::mem::align_of::<surfaceReference>() - 4usize];
    ["Offset of field: surfaceReference::channelDesc"]
        [::std::mem::offset_of!(surfaceReference, channelDesc) - 0usize];
};
pub type cudaSurfaceObject_t = ::std::os::raw::c_ulonglong;
pub const cudaTextureAddressMode_cudaAddressModeWrap: cudaTextureAddressMode = 0;
pub const cudaTextureAddressMode_cudaAddressModeClamp: cudaTextureAddressMode = 1;
pub const cudaTextureAddressMode_cudaAddressModeMirror: cudaTextureAddressMode = 2;
pub const cudaTextureAddressMode_cudaAddressModeBorder: cudaTextureAddressMode = 3;
pub type cudaTextureAddressMode = ::std::os::raw::c_uint;
pub const cudaTextureFilterMode_cudaFilterModePoint: cudaTextureFilterMode = 0;
pub const cudaTextureFilterMode_cudaFilterModeLinear: cudaTextureFilterMode = 1;
pub type cudaTextureFilterMode = ::std::os::raw::c_uint;
pub const cudaTextureReadMode_cudaReadModeElementType: cudaTextureReadMode = 0;
pub const cudaTextureReadMode_cudaReadModeNormalizedFloat: cudaTextureReadMode = 1;
pub type cudaTextureReadMode = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct textureReference {
    pub normalized: ::std::os::raw::c_int,
    pub filterMode: cudaTextureFilterMode,
    pub addressMode: [cudaTextureAddressMode; 3usize],
    pub channelDesc: cudaChannelFormatDesc,
    pub sRGB: ::std::os::raw::c_int,
    pub maxAnisotropy: ::std::os::raw::c_uint,
    pub mipmapFilterMode: cudaTextureFilterMode,
    pub mipmapLevelBias: f32,
    pub minMipmapLevelClamp: f32,
    pub maxMipmapLevelClamp: f32,
    pub __cudaReserved: [::std::os::raw::c_int; 15usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of textureReference"][::std::mem::size_of::<textureReference>() - 124usize];
    ["Alignment of textureReference"][::std::mem::align_of::<textureReference>() - 4usize];
    ["Offset of field: textureReference::normalized"]
        [::std::mem::offset_of!(textureReference, normalized) - 0usize];
    ["Offset of field: textureReference::filterMode"]
        [::std::mem::offset_of!(textureReference, filterMode) - 4usize];
    ["Offset of field: textureReference::addressMode"]
        [::std::mem::offset_of!(textureReference, addressMode) - 8usize];
    ["Offset of field: textureReference::channelDesc"]
        [::std::mem::offset_of!(textureReference, channelDesc) - 20usize];
    ["Offset of field: textureReference::sRGB"]
        [::std::mem::offset_of!(textureReference, sRGB) - 40usize];
    ["Offset of field: textureReference::maxAnisotropy"]
        [::std::mem::offset_of!(textureReference, maxAnisotropy) - 44usize];
    ["Offset of field: textureReference::mipmapFilterMode"]
        [::std::mem::offset_of!(textureReference, mipmapFilterMode) - 48usize];
    ["Offset of field: textureReference::mipmapLevelBias"]
        [::std::mem::offset_of!(textureReference, mipmapLevelBias) - 52usize];
    ["Offset of field: textureReference::minMipmapLevelClamp"]
        [::std::mem::offset_of!(textureReference, minMipmapLevelClamp) - 56usize];
    ["Offset of field: textureReference::maxMipmapLevelClamp"]
        [::std::mem::offset_of!(textureReference, maxMipmapLevelClamp) - 60usize];
    ["Offset of field: textureReference::__cudaReserved"]
        [::std::mem::offset_of!(textureReference, __cudaReserved) - 64usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cudaTextureDesc {
    pub addressMode: [cudaTextureAddressMode; 3usize],
    pub filterMode: cudaTextureFilterMode,
    pub readMode: cudaTextureReadMode,
    pub sRGB: ::std::os::raw::c_int,
    pub borderColor: [f32; 4usize],
    pub normalizedCoords: ::std::os::raw::c_int,
    pub maxAnisotropy: ::std::os::raw::c_uint,
    pub mipmapFilterMode: cudaTextureFilterMode,
    pub mipmapLevelBias: f32,
    pub minMipmapLevelClamp: f32,
    pub maxMipmapLevelClamp: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cudaTextureDesc"][::std::mem::size_of::<cudaTextureDesc>() - 64usize];
    ["Alignment of cudaTextureDesc"][::std::mem::align_of::<cudaTextureDesc>() - 4usize];
    ["Offset of field: cudaTextureDesc::addressMode"]
        [::std::mem::offset_of!(cudaTextureDesc, addressMode) - 0usize];
    ["Offset of field: cudaTextureDesc::filterMode"]
        [::std::mem::offset_of!(cudaTextureDesc, filterMode) - 12usize];
    ["Offset of field: cudaTextureDesc::readMode"]
        [::std::mem::offset_of!(cudaTextureDesc, readMode) - 16usize];
    ["Offset of field: cudaTextureDesc::sRGB"]
        [::std::mem::offset_of!(cudaTextureDesc, sRGB) - 20usize];
    ["Offset of field: cudaTextureDesc::borderColor"]
        [::std::mem::offset_of!(cudaTextureDesc, borderColor) - 24usize];
    ["Offset of field: cudaTextureDesc::normalizedCoords"]
        [::std::mem::offset_of!(cudaTextureDesc, normalizedCoords) - 40usize];
    ["Offset of field: cudaTextureDesc::maxAnisotropy"]
        [::std::mem::offset_of!(cudaTextureDesc, maxAnisotropy) - 44usize];
    ["Offset of field: cudaTextureDesc::mipmapFilterMode"]
        [::std::mem::offset_of!(cudaTextureDesc, mipmapFilterMode) - 48usize];
    ["Offset of field: cudaTextureDesc::mipmapLevelBias"]
        [::std::mem::offset_of!(cudaTextureDesc, mipmapLevelBias) - 52usize];
    ["Offset of field: cudaTextureDesc::minMipmapLevelClamp"]
        [::std::mem::offset_of!(cudaTextureDesc, minMipmapLevelClamp) - 56usize];
    ["Offset of field: cudaTextureDesc::maxMipmapLevelClamp"]
        [::std::mem::offset_of!(cudaTextureDesc, maxMipmapLevelClamp) - 60usize];
};
pub type cudaTextureObject_t = ::std::os::raw::c_ulonglong;
unsafe extern "C" {
    pub fn cudaDeviceReset() -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceSynchronize() -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceSetLimit(limit: cudaLimit, value: usize) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceGetLimit(pValue: *mut usize, limit: cudaLimit) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceGetCacheConfig(pCacheConfig: *mut cudaFuncCache) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceGetStreamPriorityRange(
        leastPriority: *mut ::std::os::raw::c_int,
        greatestPriority: *mut ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceSetCacheConfig(cacheConfig: cudaFuncCache) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceGetSharedMemConfig(pConfig: *mut cudaSharedMemConfig) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceSetSharedMemConfig(config: cudaSharedMemConfig) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceGetByPCIBusId(
        device: *mut ::std::os::raw::c_int,
        pciBusId: *const ::std::os::raw::c_char,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceGetPCIBusId(
        pciBusId: *mut ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
        device: ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaIpcGetEventHandle(
        handle: *mut cudaIpcEventHandle_t,
        event: cudaEvent_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaIpcOpenEventHandle(
        event: *mut cudaEvent_t,
        handle: cudaIpcEventHandle_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaIpcGetMemHandle(
        handle: *mut cudaIpcMemHandle_t,
        devPtr: *mut ::std::os::raw::c_void,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaIpcOpenMemHandle(
        devPtr: *mut *mut ::std::os::raw::c_void,
        handle: cudaIpcMemHandle_t,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaIpcCloseMemHandle(devPtr: *mut ::std::os::raw::c_void) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaThreadExit() -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaThreadSynchronize() -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaThreadSetLimit(limit: cudaLimit, value: usize) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaThreadGetLimit(pValue: *mut usize, limit: cudaLimit) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaThreadGetCacheConfig(pCacheConfig: *mut cudaFuncCache) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaThreadSetCacheConfig(cacheConfig: cudaFuncCache) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetLastError() -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaPeekAtLastError() -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetErrorName(error: cudaError_t) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn cudaGetErrorString(error: cudaError_t) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn cudaGetDeviceCount(count: *mut ::std::os::raw::c_int) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetDeviceProperties(
        prop: *mut cudaDeviceProp,
        device: ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceGetAttribute(
        value: *mut ::std::os::raw::c_int,
        attr: cudaDeviceAttr,
        device: ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceGetP2PAttribute(
        value: *mut ::std::os::raw::c_int,
        attr: cudaDeviceP2PAttr,
        srcDevice: ::std::os::raw::c_int,
        dstDevice: ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaChooseDevice(
        device: *mut ::std::os::raw::c_int,
        prop: *const cudaDeviceProp,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaSetDevice(device: ::std::os::raw::c_int) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetDevice(device: *mut ::std::os::raw::c_int) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaSetValidDevices(
        device_arr: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaSetDeviceFlags(flags: ::std::os::raw::c_uint) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetDeviceFlags(flags: *mut ::std::os::raw::c_uint) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamCreate(pStream: *mut cudaStream_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamCreateWithFlags(
        pStream: *mut cudaStream_t,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamCreateWithPriority(
        pStream: *mut cudaStream_t,
        flags: ::std::os::raw::c_uint,
        priority: ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamGetPriority(
        hStream: cudaStream_t,
        priority: *mut ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamGetFlags(
        hStream: cudaStream_t,
        flags: *mut ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamDestroy(stream: cudaStream_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamWaitEvent(
        stream: cudaStream_t,
        event: cudaEvent_t,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
pub type cudaStreamCallback_t = ::std::option::Option<
    unsafe extern "C" fn(
        stream: cudaStream_t,
        status: cudaError_t,
        userData: *mut ::std::os::raw::c_void,
    ),
>;
unsafe extern "C" {
    pub fn cudaStreamAddCallback(
        stream: cudaStream_t,
        callback: cudaStreamCallback_t,
        userData: *mut ::std::os::raw::c_void,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamSynchronize(stream: cudaStream_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamQuery(stream: cudaStream_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamAttachMemAsync(
        stream: cudaStream_t,
        devPtr: *mut ::std::os::raw::c_void,
        length: usize,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamBeginCapture(stream: cudaStream_t, mode: cudaStreamCaptureMode)
        -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaThreadExchangeStreamCaptureMode(mode: *mut cudaStreamCaptureMode) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamEndCapture(stream: cudaStream_t, pGraph: *mut cudaGraph_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamIsCapturing(
        stream: cudaStream_t,
        pCaptureStatus: *mut cudaStreamCaptureStatus,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaStreamGetCaptureInfo(
        stream: cudaStream_t,
        pCaptureStatus: *mut cudaStreamCaptureStatus,
        pId: *mut ::std::os::raw::c_ulonglong,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaEventCreate(event: *mut cudaEvent_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaEventCreateWithFlags(
        event: *mut cudaEvent_t,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaEventRecord(event: cudaEvent_t, stream: cudaStream_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaEventQuery(event: cudaEvent_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaEventSynchronize(event: cudaEvent_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaEventDestroy(event: cudaEvent_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaEventElapsedTime(ms: *mut f32, start: cudaEvent_t, end: cudaEvent_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaImportExternalMemory(
        extMem_out: *mut cudaExternalMemory_t,
        memHandleDesc: *const cudaExternalMemoryHandleDesc,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaExternalMemoryGetMappedBuffer(
        devPtr: *mut *mut ::std::os::raw::c_void,
        extMem: cudaExternalMemory_t,
        bufferDesc: *const cudaExternalMemoryBufferDesc,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaExternalMemoryGetMappedMipmappedArray(
        mipmap: *mut cudaMipmappedArray_t,
        extMem: cudaExternalMemory_t,
        mipmapDesc: *const cudaExternalMemoryMipmappedArrayDesc,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDestroyExternalMemory(extMem: cudaExternalMemory_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaImportExternalSemaphore(
        extSem_out: *mut cudaExternalSemaphore_t,
        semHandleDesc: *const cudaExternalSemaphoreHandleDesc,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaSignalExternalSemaphoresAsync(
        extSemArray: *const cudaExternalSemaphore_t,
        paramsArray: *const cudaExternalSemaphoreSignalParams,
        numExtSems: ::std::os::raw::c_uint,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaWaitExternalSemaphoresAsync(
        extSemArray: *const cudaExternalSemaphore_t,
        paramsArray: *const cudaExternalSemaphoreWaitParams,
        numExtSems: ::std::os::raw::c_uint,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDestroyExternalSemaphore(extSem: cudaExternalSemaphore_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaLaunchKernel(
        func: *const ::std::os::raw::c_void,
        gridDim: dim3,
        blockDim: dim3,
        args: *mut *mut ::std::os::raw::c_void,
        sharedMem: usize,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaLaunchCooperativeKernel(
        func: *const ::std::os::raw::c_void,
        gridDim: dim3,
        blockDim: dim3,
        args: *mut *mut ::std::os::raw::c_void,
        sharedMem: usize,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaLaunchCooperativeKernelMultiDevice(
        launchParamsList: *mut cudaLaunchParams,
        numDevices: ::std::os::raw::c_uint,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaFuncSetCacheConfig(
        func: *const ::std::os::raw::c_void,
        cacheConfig: cudaFuncCache,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaFuncSetSharedMemConfig(
        func: *const ::std::os::raw::c_void,
        config: cudaSharedMemConfig,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaFuncGetAttributes(
        attr: *mut cudaFuncAttributes,
        func: *const ::std::os::raw::c_void,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaFuncSetAttribute(
        func: *const ::std::os::raw::c_void,
        attr: cudaFuncAttribute,
        value: ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaSetDoubleForDevice(d: *mut f64) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaSetDoubleForHost(d: *mut f64) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaLaunchHostFunc(
        stream: cudaStream_t,
        fn_: cudaHostFn_t,
        userData: *mut ::std::os::raw::c_void,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaOccupancyMaxActiveBlocksPerMultiprocessor(
        numBlocks: *mut ::std::os::raw::c_int,
        func: *const ::std::os::raw::c_void,
        blockSize: ::std::os::raw::c_int,
        dynamicSMemSize: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
        numBlocks: *mut ::std::os::raw::c_int,
        func: *const ::std::os::raw::c_void,
        blockSize: ::std::os::raw::c_int,
        dynamicSMemSize: usize,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMallocManaged(
        devPtr: *mut *mut ::std::os::raw::c_void,
        size: usize,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMalloc(devPtr: *mut *mut ::std::os::raw::c_void, size: usize) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMallocHost(ptr: *mut *mut ::std::os::raw::c_void, size: usize) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMallocPitch(
        devPtr: *mut *mut ::std::os::raw::c_void,
        pitch: *mut usize,
        width: usize,
        height: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMallocArray(
        array: *mut cudaArray_t,
        desc: *const cudaChannelFormatDesc,
        width: usize,
        height: usize,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaFree(devPtr: *mut ::std::os::raw::c_void) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaFreeHost(ptr: *mut ::std::os::raw::c_void) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaFreeArray(array: cudaArray_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaFreeMipmappedArray(mipmappedArray: cudaMipmappedArray_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaHostAlloc(
        pHost: *mut *mut ::std::os::raw::c_void,
        size: usize,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaHostRegister(
        ptr: *mut ::std::os::raw::c_void,
        size: usize,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaHostUnregister(ptr: *mut ::std::os::raw::c_void) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaHostGetDevicePointer(
        pDevice: *mut *mut ::std::os::raw::c_void,
        pHost: *mut ::std::os::raw::c_void,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaHostGetFlags(
        pFlags: *mut ::std::os::raw::c_uint,
        pHost: *mut ::std::os::raw::c_void,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMalloc3D(pitchedDevPtr: *mut cudaPitchedPtr, extent: cudaExtent) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMalloc3DArray(
        array: *mut cudaArray_t,
        desc: *const cudaChannelFormatDesc,
        extent: cudaExtent,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMallocMipmappedArray(
        mipmappedArray: *mut cudaMipmappedArray_t,
        desc: *const cudaChannelFormatDesc,
        extent: cudaExtent,
        numLevels: ::std::os::raw::c_uint,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetMipmappedArrayLevel(
        levelArray: *mut cudaArray_t,
        mipmappedArray: cudaMipmappedArray_const_t,
        level: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy3D(p: *const cudaMemcpy3DParms) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy3DPeer(p: *const cudaMemcpy3DPeerParms) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy3DAsync(p: *const cudaMemcpy3DParms, stream: cudaStream_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy3DPeerAsync(
        p: *const cudaMemcpy3DPeerParms,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemGetInfo(free: *mut usize, total: *mut usize) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaArrayGetInfo(
        desc: *mut cudaChannelFormatDesc,
        extent: *mut cudaExtent,
        flags: *mut ::std::os::raw::c_uint,
        array: cudaArray_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy(
        dst: *mut ::std::os::raw::c_void,
        src: *const ::std::os::raw::c_void,
        count: usize,
        kind: cudaMemcpyKind,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyPeer(
        dst: *mut ::std::os::raw::c_void,
        dstDevice: ::std::os::raw::c_int,
        src: *const ::std::os::raw::c_void,
        srcDevice: ::std::os::raw::c_int,
        count: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy2D(
        dst: *mut ::std::os::raw::c_void,
        dpitch: usize,
        src: *const ::std::os::raw::c_void,
        spitch: usize,
        width: usize,
        height: usize,
        kind: cudaMemcpyKind,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy2DToArray(
        dst: cudaArray_t,
        wOffset: usize,
        hOffset: usize,
        src: *const ::std::os::raw::c_void,
        spitch: usize,
        width: usize,
        height: usize,
        kind: cudaMemcpyKind,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy2DFromArray(
        dst: *mut ::std::os::raw::c_void,
        dpitch: usize,
        src: cudaArray_const_t,
        wOffset: usize,
        hOffset: usize,
        width: usize,
        height: usize,
        kind: cudaMemcpyKind,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy2DArrayToArray(
        dst: cudaArray_t,
        wOffsetDst: usize,
        hOffsetDst: usize,
        src: cudaArray_const_t,
        wOffsetSrc: usize,
        hOffsetSrc: usize,
        width: usize,
        height: usize,
        kind: cudaMemcpyKind,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyToSymbol(
        symbol: *const ::std::os::raw::c_void,
        src: *const ::std::os::raw::c_void,
        count: usize,
        offset: usize,
        kind: cudaMemcpyKind,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyFromSymbol(
        dst: *mut ::std::os::raw::c_void,
        symbol: *const ::std::os::raw::c_void,
        count: usize,
        offset: usize,
        kind: cudaMemcpyKind,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyAsync(
        dst: *mut ::std::os::raw::c_void,
        src: *const ::std::os::raw::c_void,
        count: usize,
        kind: cudaMemcpyKind,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyPeerAsync(
        dst: *mut ::std::os::raw::c_void,
        dstDevice: ::std::os::raw::c_int,
        src: *const ::std::os::raw::c_void,
        srcDevice: ::std::os::raw::c_int,
        count: usize,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy2DAsync(
        dst: *mut ::std::os::raw::c_void,
        dpitch: usize,
        src: *const ::std::os::raw::c_void,
        spitch: usize,
        width: usize,
        height: usize,
        kind: cudaMemcpyKind,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy2DToArrayAsync(
        dst: cudaArray_t,
        wOffset: usize,
        hOffset: usize,
        src: *const ::std::os::raw::c_void,
        spitch: usize,
        width: usize,
        height: usize,
        kind: cudaMemcpyKind,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpy2DFromArrayAsync(
        dst: *mut ::std::os::raw::c_void,
        dpitch: usize,
        src: cudaArray_const_t,
        wOffset: usize,
        hOffset: usize,
        width: usize,
        height: usize,
        kind: cudaMemcpyKind,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyToSymbolAsync(
        symbol: *const ::std::os::raw::c_void,
        src: *const ::std::os::raw::c_void,
        count: usize,
        offset: usize,
        kind: cudaMemcpyKind,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyFromSymbolAsync(
        dst: *mut ::std::os::raw::c_void,
        symbol: *const ::std::os::raw::c_void,
        count: usize,
        offset: usize,
        kind: cudaMemcpyKind,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemset(
        devPtr: *mut ::std::os::raw::c_void,
        value: ::std::os::raw::c_int,
        count: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemset2D(
        devPtr: *mut ::std::os::raw::c_void,
        pitch: usize,
        value: ::std::os::raw::c_int,
        width: usize,
        height: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemset3D(
        pitchedDevPtr: cudaPitchedPtr,
        value: ::std::os::raw::c_int,
        extent: cudaExtent,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemsetAsync(
        devPtr: *mut ::std::os::raw::c_void,
        value: ::std::os::raw::c_int,
        count: usize,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemset2DAsync(
        devPtr: *mut ::std::os::raw::c_void,
        pitch: usize,
        value: ::std::os::raw::c_int,
        width: usize,
        height: usize,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemset3DAsync(
        pitchedDevPtr: cudaPitchedPtr,
        value: ::std::os::raw::c_int,
        extent: cudaExtent,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetSymbolAddress(
        devPtr: *mut *mut ::std::os::raw::c_void,
        symbol: *const ::std::os::raw::c_void,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetSymbolSize(
        size: *mut usize,
        symbol: *const ::std::os::raw::c_void,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemPrefetchAsync(
        devPtr: *const ::std::os::raw::c_void,
        count: usize,
        dstDevice: ::std::os::raw::c_int,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemAdvise(
        devPtr: *const ::std::os::raw::c_void,
        count: usize,
        advice: cudaMemoryAdvise,
        device: ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemRangeGetAttribute(
        data: *mut ::std::os::raw::c_void,
        dataSize: usize,
        attribute: cudaMemRangeAttribute,
        devPtr: *const ::std::os::raw::c_void,
        count: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemRangeGetAttributes(
        data: *mut *mut ::std::os::raw::c_void,
        dataSizes: *mut usize,
        attributes: *mut cudaMemRangeAttribute,
        numAttributes: usize,
        devPtr: *const ::std::os::raw::c_void,
        count: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyToArray(
        dst: cudaArray_t,
        wOffset: usize,
        hOffset: usize,
        src: *const ::std::os::raw::c_void,
        count: usize,
        kind: cudaMemcpyKind,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyFromArray(
        dst: *mut ::std::os::raw::c_void,
        src: cudaArray_const_t,
        wOffset: usize,
        hOffset: usize,
        count: usize,
        kind: cudaMemcpyKind,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyArrayToArray(
        dst: cudaArray_t,
        wOffsetDst: usize,
        hOffsetDst: usize,
        src: cudaArray_const_t,
        wOffsetSrc: usize,
        hOffsetSrc: usize,
        count: usize,
        kind: cudaMemcpyKind,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyToArrayAsync(
        dst: cudaArray_t,
        wOffset: usize,
        hOffset: usize,
        src: *const ::std::os::raw::c_void,
        count: usize,
        kind: cudaMemcpyKind,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaMemcpyFromArrayAsync(
        dst: *mut ::std::os::raw::c_void,
        src: cudaArray_const_t,
        wOffset: usize,
        hOffset: usize,
        count: usize,
        kind: cudaMemcpyKind,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaPointerGetAttributes(
        attributes: *mut cudaPointerAttributes,
        ptr: *const ::std::os::raw::c_void,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceCanAccessPeer(
        canAccessPeer: *mut ::std::os::raw::c_int,
        device: ::std::os::raw::c_int,
        peerDevice: ::std::os::raw::c_int,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceEnablePeerAccess(
        peerDevice: ::std::os::raw::c_int,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDeviceDisablePeerAccess(peerDevice: ::std::os::raw::c_int) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphicsUnregisterResource(resource: cudaGraphicsResource_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphicsResourceSetMapFlags(
        resource: cudaGraphicsResource_t,
        flags: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphicsMapResources(
        count: ::std::os::raw::c_int,
        resources: *mut cudaGraphicsResource_t,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphicsUnmapResources(
        count: ::std::os::raw::c_int,
        resources: *mut cudaGraphicsResource_t,
        stream: cudaStream_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphicsResourceGetMappedPointer(
        devPtr: *mut *mut ::std::os::raw::c_void,
        size: *mut usize,
        resource: cudaGraphicsResource_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphicsSubResourceGetMappedArray(
        array: *mut cudaArray_t,
        resource: cudaGraphicsResource_t,
        arrayIndex: ::std::os::raw::c_uint,
        mipLevel: ::std::os::raw::c_uint,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphicsResourceGetMappedMipmappedArray(
        mipmappedArray: *mut cudaMipmappedArray_t,
        resource: cudaGraphicsResource_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaBindTexture(
        offset: *mut usize,
        texref: *const textureReference,
        devPtr: *const ::std::os::raw::c_void,
        desc: *const cudaChannelFormatDesc,
        size: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaBindTexture2D(
        offset: *mut usize,
        texref: *const textureReference,
        devPtr: *const ::std::os::raw::c_void,
        desc: *const cudaChannelFormatDesc,
        width: usize,
        height: usize,
        pitch: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaBindTextureToArray(
        texref: *const textureReference,
        array: cudaArray_const_t,
        desc: *const cudaChannelFormatDesc,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaBindTextureToMipmappedArray(
        texref: *const textureReference,
        mipmappedArray: cudaMipmappedArray_const_t,
        desc: *const cudaChannelFormatDesc,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaUnbindTexture(texref: *const textureReference) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetTextureAlignmentOffset(
        offset: *mut usize,
        texref: *const textureReference,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetTextureReference(
        texref: *mut *const textureReference,
        symbol: *const ::std::os::raw::c_void,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaBindSurfaceToArray(
        surfref: *const surfaceReference,
        array: cudaArray_const_t,
        desc: *const cudaChannelFormatDesc,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetSurfaceReference(
        surfref: *mut *const surfaceReference,
        symbol: *const ::std::os::raw::c_void,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetChannelDesc(
        desc: *mut cudaChannelFormatDesc,
        array: cudaArray_const_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaCreateChannelDesc(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        z: ::std::os::raw::c_int,
        w: ::std::os::raw::c_int,
        f: cudaChannelFormatKind,
    ) -> cudaChannelFormatDesc;
}
unsafe extern "C" {
    pub fn cudaCreateTextureObject(
        pTexObject: *mut cudaTextureObject_t,
        pResDesc: *const cudaResourceDesc,
        pTexDesc: *const cudaTextureDesc,
        pResViewDesc: *const cudaResourceViewDesc,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDestroyTextureObject(texObject: cudaTextureObject_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetTextureObjectResourceDesc(
        pResDesc: *mut cudaResourceDesc,
        texObject: cudaTextureObject_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetTextureObjectTextureDesc(
        pTexDesc: *mut cudaTextureDesc,
        texObject: cudaTextureObject_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetTextureObjectResourceViewDesc(
        pResViewDesc: *mut cudaResourceViewDesc,
        texObject: cudaTextureObject_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaCreateSurfaceObject(
        pSurfObject: *mut cudaSurfaceObject_t,
        pResDesc: *const cudaResourceDesc,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDestroySurfaceObject(surfObject: cudaSurfaceObject_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetSurfaceObjectResourceDesc(
        pResDesc: *mut cudaResourceDesc,
        surfObject: cudaSurfaceObject_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaDriverGetVersion(driverVersion: *mut ::std::os::raw::c_int) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaRuntimeGetVersion(runtimeVersion: *mut ::std::os::raw::c_int) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphCreate(pGraph: *mut cudaGraph_t, flags: ::std::os::raw::c_uint) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphAddKernelNode(
        pGraphNode: *mut cudaGraphNode_t,
        graph: cudaGraph_t,
        pDependencies: *const cudaGraphNode_t,
        numDependencies: usize,
        pNodeParams: *const cudaKernelNodeParams,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphKernelNodeGetParams(
        node: cudaGraphNode_t,
        pNodeParams: *mut cudaKernelNodeParams,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphKernelNodeSetParams(
        node: cudaGraphNode_t,
        pNodeParams: *const cudaKernelNodeParams,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphAddMemcpyNode(
        pGraphNode: *mut cudaGraphNode_t,
        graph: cudaGraph_t,
        pDependencies: *const cudaGraphNode_t,
        numDependencies: usize,
        pCopyParams: *const cudaMemcpy3DParms,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphMemcpyNodeGetParams(
        node: cudaGraphNode_t,
        pNodeParams: *mut cudaMemcpy3DParms,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphMemcpyNodeSetParams(
        node: cudaGraphNode_t,
        pNodeParams: *const cudaMemcpy3DParms,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphAddMemsetNode(
        pGraphNode: *mut cudaGraphNode_t,
        graph: cudaGraph_t,
        pDependencies: *const cudaGraphNode_t,
        numDependencies: usize,
        pMemsetParams: *const cudaMemsetParams,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphMemsetNodeGetParams(
        node: cudaGraphNode_t,
        pNodeParams: *mut cudaMemsetParams,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphMemsetNodeSetParams(
        node: cudaGraphNode_t,
        pNodeParams: *const cudaMemsetParams,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphAddHostNode(
        pGraphNode: *mut cudaGraphNode_t,
        graph: cudaGraph_t,
        pDependencies: *const cudaGraphNode_t,
        numDependencies: usize,
        pNodeParams: *const cudaHostNodeParams,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphHostNodeGetParams(
        node: cudaGraphNode_t,
        pNodeParams: *mut cudaHostNodeParams,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphHostNodeSetParams(
        node: cudaGraphNode_t,
        pNodeParams: *const cudaHostNodeParams,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphAddChildGraphNode(
        pGraphNode: *mut cudaGraphNode_t,
        graph: cudaGraph_t,
        pDependencies: *const cudaGraphNode_t,
        numDependencies: usize,
        childGraph: cudaGraph_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphChildGraphNodeGetGraph(
        node: cudaGraphNode_t,
        pGraph: *mut cudaGraph_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphAddEmptyNode(
        pGraphNode: *mut cudaGraphNode_t,
        graph: cudaGraph_t,
        pDependencies: *const cudaGraphNode_t,
        numDependencies: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphClone(pGraphClone: *mut cudaGraph_t, originalGraph: cudaGraph_t)
        -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphNodeFindInClone(
        pNode: *mut cudaGraphNode_t,
        originalNode: cudaGraphNode_t,
        clonedGraph: cudaGraph_t,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphNodeGetType(
        node: cudaGraphNode_t,
        pType: *mut cudaGraphNodeType,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphGetNodes(
        graph: cudaGraph_t,
        nodes: *mut cudaGraphNode_t,
        numNodes: *mut usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphGetRootNodes(
        graph: cudaGraph_t,
        pRootNodes: *mut cudaGraphNode_t,
        pNumRootNodes: *mut usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphGetEdges(
        graph: cudaGraph_t,
        from: *mut cudaGraphNode_t,
        to: *mut cudaGraphNode_t,
        numEdges: *mut usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphNodeGetDependencies(
        node: cudaGraphNode_t,
        pDependencies: *mut cudaGraphNode_t,
        pNumDependencies: *mut usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphNodeGetDependentNodes(
        node: cudaGraphNode_t,
        pDependentNodes: *mut cudaGraphNode_t,
        pNumDependentNodes: *mut usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphAddDependencies(
        graph: cudaGraph_t,
        from: *const cudaGraphNode_t,
        to: *const cudaGraphNode_t,
        numDependencies: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphRemoveDependencies(
        graph: cudaGraph_t,
        from: *const cudaGraphNode_t,
        to: *const cudaGraphNode_t,
        numDependencies: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphDestroyNode(node: cudaGraphNode_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphInstantiate(
        pGraphExec: *mut cudaGraphExec_t,
        graph: cudaGraph_t,
        pErrorNode: *mut cudaGraphNode_t,
        pLogBuffer: *mut ::std::os::raw::c_char,
        bufferSize: usize,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphExecKernelNodeSetParams(
        hGraphExec: cudaGraphExec_t,
        node: cudaGraphNode_t,
        pNodeParams: *const cudaKernelNodeParams,
    ) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphLaunch(graphExec: cudaGraphExec_t, stream: cudaStream_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphExecDestroy(graphExec: cudaGraphExec_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGraphDestroy(graph: cudaGraph_t) -> cudaError_t;
}
unsafe extern "C" {
    pub fn cudaGetExportTable(
        ppExportTable: *mut *const ::std::os::raw::c_void,
        pExportTableId: *const cudaUUID_t,
    ) -> cudaError_t;
}
pub const cudaDataType_t_CUDA_R_16F: cudaDataType_t = 2;
pub const cudaDataType_t_CUDA_C_16F: cudaDataType_t = 6;
pub const cudaDataType_t_CUDA_R_32F: cudaDataType_t = 0;
pub const cudaDataType_t_CUDA_C_32F: cudaDataType_t = 4;
pub const cudaDataType_t_CUDA_R_64F: cudaDataType_t = 1;
pub const cudaDataType_t_CUDA_C_64F: cudaDataType_t = 5;
pub const cudaDataType_t_CUDA_R_8I: cudaDataType_t = 3;
pub const cudaDataType_t_CUDA_C_8I: cudaDataType_t = 7;
pub const cudaDataType_t_CUDA_R_8U: cudaDataType_t = 8;
pub const cudaDataType_t_CUDA_C_8U: cudaDataType_t = 9;
pub const cudaDataType_t_CUDA_R_32I: cudaDataType_t = 10;
pub const cudaDataType_t_CUDA_C_32I: cudaDataType_t = 11;
pub const cudaDataType_t_CUDA_R_32U: cudaDataType_t = 12;
pub const cudaDataType_t_CUDA_C_32U: cudaDataType_t = 13;
pub type cudaDataType_t = ::std::os::raw::c_uint;
pub use self::cudaDataType_t as cudaDataType;
pub const libraryPropertyType_t_MAJOR_VERSION: libraryPropertyType_t = 0;
pub const libraryPropertyType_t_MINOR_VERSION: libraryPropertyType_t = 1;
pub const libraryPropertyType_t_PATCH_LEVEL: libraryPropertyType_t = 2;
pub type libraryPropertyType_t = ::std::os::raw::c_uint;
pub use self::libraryPropertyType_t as libraryPropertyType;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
pub type va_list = __builtin_va_list;
pub type __gnuc_va_list = __builtin_va_list;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct __mbstate_t {
    pub __count: ::std::os::raw::c_int,
    pub __value: __mbstate_t__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union __mbstate_t__bindgen_ty_1 {
    pub __wch: ::std::os::raw::c_uint,
    pub __wchb: [::std::os::raw::c_char; 4usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __mbstate_t__bindgen_ty_1"]
        [::std::mem::size_of::<__mbstate_t__bindgen_ty_1>() - 4usize];
    ["Alignment of __mbstate_t__bindgen_ty_1"]
        [::std::mem::align_of::<__mbstate_t__bindgen_ty_1>() - 4usize];
    ["Offset of field: __mbstate_t__bindgen_ty_1::__wch"]
        [::std::mem::offset_of!(__mbstate_t__bindgen_ty_1, __wch) - 0usize];
    ["Offset of field: __mbstate_t__bindgen_ty_1::__wchb"]
        [::std::mem::offset_of!(__mbstate_t__bindgen_ty_1, __wchb) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __mbstate_t"][::std::mem::size_of::<__mbstate_t>() - 8usize];
    ["Alignment of __mbstate_t"][::std::mem::align_of::<__mbstate_t>() - 4usize];
    ["Offset of field: __mbstate_t::__count"]
        [::std::mem::offset_of!(__mbstate_t, __count) - 0usize];
    ["Offset of field: __mbstate_t::__value"]
        [::std::mem::offset_of!(__mbstate_t, __value) - 4usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct _G_fpos_t {
    pub __pos: __off_t,
    pub __state: __mbstate_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _G_fpos_t"][::std::mem::size_of::<_G_fpos_t>() - 16usize];
    ["Alignment of _G_fpos_t"][::std::mem::align_of::<_G_fpos_t>() - 8usize];
    ["Offset of field: _G_fpos_t::__pos"][::std::mem::offset_of!(_G_fpos_t, __pos) - 0usize];
    ["Offset of field: _G_fpos_t::__state"][::std::mem::offset_of!(_G_fpos_t, __state) - 8usize];
};
pub type __fpos_t = _G_fpos_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct _G_fpos64_t {
    pub __pos: __off64_t,
    pub __state: __mbstate_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _G_fpos64_t"][::std::mem::size_of::<_G_fpos64_t>() - 16usize];
    ["Alignment of _G_fpos64_t"][::std::mem::align_of::<_G_fpos64_t>() - 8usize];
    ["Offset of field: _G_fpos64_t::__pos"][::std::mem::offset_of!(_G_fpos64_t, __pos) - 0usize];
    ["Offset of field: _G_fpos64_t::__state"]
        [::std::mem::offset_of!(_G_fpos64_t, __state) - 8usize];
};
pub type __fpos64_t = _G_fpos64_t;
pub type __FILE = _IO_FILE;
pub type FILE = _IO_FILE;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_marker {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_codecvt {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_wide_data {
    _unused: [u8; 0],
}
pub type _IO_lock_t = ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_FILE {
    pub _flags: ::std::os::raw::c_int,
    pub _IO_read_ptr: *mut ::std::os::raw::c_char,
    pub _IO_read_end: *mut ::std::os::raw::c_char,
    pub _IO_read_base: *mut ::std::os::raw::c_char,
    pub _IO_write_base: *mut ::std::os::raw::c_char,
    pub _IO_write_ptr: *mut ::std::os::raw::c_char,
    pub _IO_write_end: *mut ::std::os::raw::c_char,
    pub _IO_buf_base: *mut ::std::os::raw::c_char,
    pub _IO_buf_end: *mut ::std::os::raw::c_char,
    pub _IO_save_base: *mut ::std::os::raw::c_char,
    pub _IO_backup_base: *mut ::std::os::raw::c_char,
    pub _IO_save_end: *mut ::std::os::raw::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: ::std::os::raw::c_int,
    pub _flags2: ::std::os::raw::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: ::std::os::raw::c_ushort,
    pub _vtable_offset: ::std::os::raw::c_schar,
    pub _shortbuf: [::std::os::raw::c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub _codecvt: *mut _IO_codecvt,
    pub _wide_data: *mut _IO_wide_data,
    pub _freeres_list: *mut _IO_FILE,
    pub _freeres_buf: *mut ::std::os::raw::c_void,
    pub __pad5: usize,
    pub _mode: ::std::os::raw::c_int,
    pub _unused2: [::std::os::raw::c_char; 20usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _IO_FILE"][::std::mem::size_of::<_IO_FILE>() - 216usize];
    ["Alignment of _IO_FILE"][::std::mem::align_of::<_IO_FILE>() - 8usize];
    ["Offset of field: _IO_FILE::_flags"][::std::mem::offset_of!(_IO_FILE, _flags) - 0usize];
    ["Offset of field: _IO_FILE::_IO_read_ptr"]
        [::std::mem::offset_of!(_IO_FILE, _IO_read_ptr) - 8usize];
    ["Offset of field: _IO_FILE::_IO_read_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_read_end) - 16usize];
    ["Offset of field: _IO_FILE::_IO_read_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_read_base) - 24usize];
    ["Offset of field: _IO_FILE::_IO_write_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_write_base) - 32usize];
    ["Offset of field: _IO_FILE::_IO_write_ptr"]
        [::std::mem::offset_of!(_IO_FILE, _IO_write_ptr) - 40usize];
    ["Offset of field: _IO_FILE::_IO_write_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_write_end) - 48usize];
    ["Offset of field: _IO_FILE::_IO_buf_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_buf_base) - 56usize];
    ["Offset of field: _IO_FILE::_IO_buf_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_buf_end) - 64usize];
    ["Offset of field: _IO_FILE::_IO_save_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_save_base) - 72usize];
    ["Offset of field: _IO_FILE::_IO_backup_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_backup_base) - 80usize];
    ["Offset of field: _IO_FILE::_IO_save_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_save_end) - 88usize];
    ["Offset of field: _IO_FILE::_markers"][::std::mem::offset_of!(_IO_FILE, _markers) - 96usize];
    ["Offset of field: _IO_FILE::_chain"][::std::mem::offset_of!(_IO_FILE, _chain) - 104usize];
    ["Offset of field: _IO_FILE::_fileno"][::std::mem::offset_of!(_IO_FILE, _fileno) - 112usize];
    ["Offset of field: _IO_FILE::_flags2"][::std::mem::offset_of!(_IO_FILE, _flags2) - 116usize];
    ["Offset of field: _IO_FILE::_old_offset"]
        [::std::mem::offset_of!(_IO_FILE, _old_offset) - 120usize];
    ["Offset of field: _IO_FILE::_cur_column"]
        [::std::mem::offset_of!(_IO_FILE, _cur_column) - 128usize];
    ["Offset of field: _IO_FILE::_vtable_offset"]
        [::std::mem::offset_of!(_IO_FILE, _vtable_offset) - 130usize];
    ["Offset of field: _IO_FILE::_shortbuf"]
        [::std::mem::offset_of!(_IO_FILE, _shortbuf) - 131usize];
    ["Offset of field: _IO_FILE::_lock"][::std::mem::offset_of!(_IO_FILE, _lock) - 136usize];
    ["Offset of field: _IO_FILE::_offset"][::std::mem::offset_of!(_IO_FILE, _offset) - 144usize];
    ["Offset of field: _IO_FILE::_codecvt"][::std::mem::offset_of!(_IO_FILE, _codecvt) - 152usize];
    ["Offset of field: _IO_FILE::_wide_data"]
        [::std::mem::offset_of!(_IO_FILE, _wide_data) - 160usize];
    ["Offset of field: _IO_FILE::_freeres_list"]
        [::std::mem::offset_of!(_IO_FILE, _freeres_list) - 168usize];
    ["Offset of field: _IO_FILE::_freeres_buf"]
        [::std::mem::offset_of!(_IO_FILE, _freeres_buf) - 176usize];
    ["Offset of field: _IO_FILE::__pad5"][::std::mem::offset_of!(_IO_FILE, __pad5) - 184usize];
    ["Offset of field: _IO_FILE::_mode"][::std::mem::offset_of!(_IO_FILE, _mode) - 192usize];
    ["Offset of field: _IO_FILE::_unused2"][::std::mem::offset_of!(_IO_FILE, _unused2) - 196usize];
};
pub type off_t = __off_t;
pub type fpos_t = __fpos_t;
unsafe extern "C" {
    pub static mut stdin: *mut FILE;
}
unsafe extern "C" {
    pub static mut stdout: *mut FILE;
}
unsafe extern "C" {
    pub static mut stderr: *mut FILE;
}
unsafe extern "C" {
    pub fn remove(__filename: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn rename(
        __old: *const ::std::os::raw::c_char,
        __new: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn renameat(
        __oldfd: ::std::os::raw::c_int,
        __old: *const ::std::os::raw::c_char,
        __newfd: ::std::os::raw::c_int,
        __new: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn tmpfile() -> *mut FILE;
}
unsafe extern "C" {
    pub fn tmpnam(__s: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn tmpnam_r(__s: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn tempnam(
        __dir: *const ::std::os::raw::c_char,
        __pfx: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn fclose(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fflush(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fflush_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fopen(
        __filename: *const ::std::os::raw::c_char,
        __modes: *const ::std::os::raw::c_char,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn freopen(
        __filename: *const ::std::os::raw::c_char,
        __modes: *const ::std::os::raw::c_char,
        __stream: *mut FILE,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn fdopen(__fd: ::std::os::raw::c_int, __modes: *const ::std::os::raw::c_char)
        -> *mut FILE;
}
unsafe extern "C" {
    pub fn fmemopen(
        __s: *mut ::std::os::raw::c_void,
        __len: usize,
        __modes: *const ::std::os::raw::c_char,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn open_memstream(
        __bufloc: *mut *mut ::std::os::raw::c_char,
        __sizeloc: *mut usize,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn setbuf(__stream: *mut FILE, __buf: *mut ::std::os::raw::c_char);
}
unsafe extern "C" {
    pub fn setvbuf(
        __stream: *mut FILE,
        __buf: *mut ::std::os::raw::c_char,
        __modes: ::std::os::raw::c_int,
        __n: usize,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn setbuffer(__stream: *mut FILE, __buf: *mut ::std::os::raw::c_char, __size: usize);
}
unsafe extern "C" {
    pub fn setlinebuf(__stream: *mut FILE);
}
unsafe extern "C" {
    pub fn fprintf(
        __stream: *mut FILE,
        __format: *const ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn printf(__format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn sprintf(
        __s: *mut ::std::os::raw::c_char,
        __format: *const ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn vfprintf(
        __s: *mut FILE,
        __format: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn vprintf(
        __format: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn vsprintf(
        __s: *mut ::std::os::raw::c_char,
        __format: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn snprintf(
        __s: *mut ::std::os::raw::c_char,
        __maxlen: ::std::os::raw::c_ulong,
        __format: *const ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn vsnprintf(
        __s: *mut ::std::os::raw::c_char,
        __maxlen: ::std::os::raw::c_ulong,
        __format: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn vdprintf(
        __fd: ::std::os::raw::c_int,
        __fmt: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn dprintf(
        __fd: ::std::os::raw::c_int,
        __fmt: *const ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fscanf(
        __stream: *mut FILE,
        __format: *const ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn scanf(__format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn sscanf(
        __s: *const ::std::os::raw::c_char,
        __format: *const ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    #[link_name = "\u{1}__isoc99_fscanf"]
    pub fn fscanf1(
        __stream: *mut FILE,
        __format: *const ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    #[link_name = "\u{1}__isoc99_scanf"]
    pub fn scanf1(__format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    #[link_name = "\u{1}__isoc99_sscanf"]
    pub fn sscanf1(
        __s: *const ::std::os::raw::c_char,
        __format: *const ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn vfscanf(
        __s: *mut FILE,
        __format: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn vscanf(
        __format: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn vsscanf(
        __s: *const ::std::os::raw::c_char,
        __format: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    #[link_name = "\u{1}__isoc99_vfscanf"]
    pub fn vfscanf1(
        __s: *mut FILE,
        __format: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    #[link_name = "\u{1}__isoc99_vscanf"]
    pub fn vscanf1(
        __format: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    #[link_name = "\u{1}__isoc99_vsscanf"]
    pub fn vsscanf1(
        __s: *const ::std::os::raw::c_char,
        __format: *const ::std::os::raw::c_char,
        __arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fgetc(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getc(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getchar() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getc_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getchar_unlocked() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fgetc_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fputc(__c: ::std::os::raw::c_int, __stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn putc(__c: ::std::os::raw::c_int, __stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn putchar(__c: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fputc_unlocked(__c: ::std::os::raw::c_int, __stream: *mut FILE)
        -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn putc_unlocked(__c: ::std::os::raw::c_int, __stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn putchar_unlocked(__c: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getw(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn putw(__w: ::std::os::raw::c_int, __stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fgets(
        __s: *mut ::std::os::raw::c_char,
        __n: ::std::os::raw::c_int,
        __stream: *mut FILE,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn __getdelim(
        __lineptr: *mut *mut ::std::os::raw::c_char,
        __n: *mut usize,
        __delimiter: ::std::os::raw::c_int,
        __stream: *mut FILE,
    ) -> __ssize_t;
}
unsafe extern "C" {
    pub fn getdelim(
        __lineptr: *mut *mut ::std::os::raw::c_char,
        __n: *mut usize,
        __delimiter: ::std::os::raw::c_int,
        __stream: *mut FILE,
    ) -> __ssize_t;
}
unsafe extern "C" {
    pub fn getline(
        __lineptr: *mut *mut ::std::os::raw::c_char,
        __n: *mut usize,
        __stream: *mut FILE,
    ) -> __ssize_t;
}
unsafe extern "C" {
    pub fn fputs(__s: *const ::std::os::raw::c_char, __stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn puts(__s: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn ungetc(__c: ::std::os::raw::c_int, __stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fread(
        __ptr: *mut ::std::os::raw::c_void,
        __size: ::std::os::raw::c_ulong,
        __n: ::std::os::raw::c_ulong,
        __stream: *mut FILE,
    ) -> ::std::os::raw::c_ulong;
}
unsafe extern "C" {
    pub fn fwrite(
        __ptr: *const ::std::os::raw::c_void,
        __size: ::std::os::raw::c_ulong,
        __n: ::std::os::raw::c_ulong,
        __s: *mut FILE,
    ) -> ::std::os::raw::c_ulong;
}
unsafe extern "C" {
    pub fn fread_unlocked(
        __ptr: *mut ::std::os::raw::c_void,
        __size: usize,
        __n: usize,
        __stream: *mut FILE,
    ) -> usize;
}
unsafe extern "C" {
    pub fn fwrite_unlocked(
        __ptr: *const ::std::os::raw::c_void,
        __size: usize,
        __n: usize,
        __stream: *mut FILE,
    ) -> usize;
}
unsafe extern "C" {
    pub fn fseek(
        __stream: *mut FILE,
        __off: ::std::os::raw::c_long,
        __whence: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn ftell(__stream: *mut FILE) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn rewind(__stream: *mut FILE);
}
unsafe extern "C" {
    pub fn fseeko(
        __stream: *mut FILE,
        __off: __off_t,
        __whence: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn ftello(__stream: *mut FILE) -> __off_t;
}
unsafe extern "C" {
    pub fn fgetpos(__stream: *mut FILE, __pos: *mut fpos_t) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fsetpos(__stream: *mut FILE, __pos: *const fpos_t) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn clearerr(__stream: *mut FILE);
}
unsafe extern "C" {
    pub fn feof(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn ferror(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn clearerr_unlocked(__stream: *mut FILE);
}
unsafe extern "C" {
    pub fn feof_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn ferror_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn perror(__s: *const ::std::os::raw::c_char);
}
unsafe extern "C" {
    pub static mut sys_nerr: ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub static sys_errlist: [*const ::std::os::raw::c_char; 0usize];
}
unsafe extern "C" {
    pub fn fileno(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fileno_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn popen(
        __command: *const ::std::os::raw::c_char,
        __modes: *const ::std::os::raw::c_char,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn pclose(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn ctermid(__s: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn flockfile(__stream: *mut FILE);
}
unsafe extern "C" {
    pub fn ftrylockfile(__stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn funlockfile(__stream: *mut FILE);
}
unsafe extern "C" {
    pub fn __uflow(arg1: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __overflow(arg1: *mut FILE, arg2: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseContext {
    _unused: [u8; 0],
}
pub type cusparseHandle_t = *mut cusparseContext;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseMatDescr {
    _unused: [u8; 0],
}
pub type cusparseMatDescr_t = *mut cusparseMatDescr;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bsrsv2Info {
    _unused: [u8; 0],
}
pub type bsrsv2Info_t = *mut bsrsv2Info;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bsrsm2Info {
    _unused: [u8; 0],
}
pub type bsrsm2Info_t = *mut bsrsm2Info;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct csric02Info {
    _unused: [u8; 0],
}
pub type csric02Info_t = *mut csric02Info;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bsric02Info {
    _unused: [u8; 0],
}
pub type bsric02Info_t = *mut bsric02Info;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct csrilu02Info {
    _unused: [u8; 0],
}
pub type csrilu02Info_t = *mut csrilu02Info;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bsrilu02Info {
    _unused: [u8; 0],
}
pub type bsrilu02Info_t = *mut bsrilu02Info;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct csru2csrInfo {
    _unused: [u8; 0],
}
pub type csru2csrInfo_t = *mut csru2csrInfo;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseColorInfo {
    _unused: [u8; 0],
}
pub type cusparseColorInfo_t = *mut cusparseColorInfo;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pruneInfo {
    _unused: [u8; 0],
}
pub type pruneInfo_t = *mut pruneInfo;
pub const cusparseStatus_t_CUSPARSE_STATUS_SUCCESS: cusparseStatus_t = 0;
pub const cusparseStatus_t_CUSPARSE_STATUS_NOT_INITIALIZED: cusparseStatus_t = 1;
pub const cusparseStatus_t_CUSPARSE_STATUS_ALLOC_FAILED: cusparseStatus_t = 2;
pub const cusparseStatus_t_CUSPARSE_STATUS_INVALID_VALUE: cusparseStatus_t = 3;
pub const cusparseStatus_t_CUSPARSE_STATUS_ARCH_MISMATCH: cusparseStatus_t = 4;
pub const cusparseStatus_t_CUSPARSE_STATUS_MAPPING_ERROR: cusparseStatus_t = 5;
pub const cusparseStatus_t_CUSPARSE_STATUS_EXECUTION_FAILED: cusparseStatus_t = 6;
pub const cusparseStatus_t_CUSPARSE_STATUS_INTERNAL_ERROR: cusparseStatus_t = 7;
pub const cusparseStatus_t_CUSPARSE_STATUS_MATRIX_TYPE_NOT_SUPPORTED: cusparseStatus_t = 8;
pub const cusparseStatus_t_CUSPARSE_STATUS_ZERO_PIVOT: cusparseStatus_t = 9;
pub const cusparseStatus_t_CUSPARSE_STATUS_NOT_SUPPORTED: cusparseStatus_t = 10;
pub const cusparseStatus_t_CUSPARSE_STATUS_INSUFFICIENT_RESOURCES: cusparseStatus_t = 11;
pub type cusparseStatus_t = ::std::os::raw::c_uint;
pub const cusparsePointerMode_t_CUSPARSE_POINTER_MODE_HOST: cusparsePointerMode_t = 0;
pub const cusparsePointerMode_t_CUSPARSE_POINTER_MODE_DEVICE: cusparsePointerMode_t = 1;
pub type cusparsePointerMode_t = ::std::os::raw::c_uint;
pub const cusparseAction_t_CUSPARSE_ACTION_SYMBOLIC: cusparseAction_t = 0;
pub const cusparseAction_t_CUSPARSE_ACTION_NUMERIC: cusparseAction_t = 1;
pub type cusparseAction_t = ::std::os::raw::c_uint;
pub const cusparseMatrixType_t_CUSPARSE_MATRIX_TYPE_GENERAL: cusparseMatrixType_t = 0;
pub const cusparseMatrixType_t_CUSPARSE_MATRIX_TYPE_SYMMETRIC: cusparseMatrixType_t = 1;
pub const cusparseMatrixType_t_CUSPARSE_MATRIX_TYPE_HERMITIAN: cusparseMatrixType_t = 2;
pub const cusparseMatrixType_t_CUSPARSE_MATRIX_TYPE_TRIANGULAR: cusparseMatrixType_t = 3;
pub type cusparseMatrixType_t = ::std::os::raw::c_uint;
pub const cusparseFillMode_t_CUSPARSE_FILL_MODE_LOWER: cusparseFillMode_t = 0;
pub const cusparseFillMode_t_CUSPARSE_FILL_MODE_UPPER: cusparseFillMode_t = 1;
pub type cusparseFillMode_t = ::std::os::raw::c_uint;
pub const cusparseDiagType_t_CUSPARSE_DIAG_TYPE_NON_UNIT: cusparseDiagType_t = 0;
pub const cusparseDiagType_t_CUSPARSE_DIAG_TYPE_UNIT: cusparseDiagType_t = 1;
pub type cusparseDiagType_t = ::std::os::raw::c_uint;
pub const cusparseIndexBase_t_CUSPARSE_INDEX_BASE_ZERO: cusparseIndexBase_t = 0;
pub const cusparseIndexBase_t_CUSPARSE_INDEX_BASE_ONE: cusparseIndexBase_t = 1;
pub type cusparseIndexBase_t = ::std::os::raw::c_uint;
pub const cusparseOperation_t_CUSPARSE_OPERATION_NON_TRANSPOSE: cusparseOperation_t = 0;
pub const cusparseOperation_t_CUSPARSE_OPERATION_TRANSPOSE: cusparseOperation_t = 1;
pub const cusparseOperation_t_CUSPARSE_OPERATION_CONJUGATE_TRANSPOSE: cusparseOperation_t = 2;
pub type cusparseOperation_t = ::std::os::raw::c_uint;
pub const cusparseDirection_t_CUSPARSE_DIRECTION_ROW: cusparseDirection_t = 0;
pub const cusparseDirection_t_CUSPARSE_DIRECTION_COLUMN: cusparseDirection_t = 1;
pub type cusparseDirection_t = ::std::os::raw::c_uint;
pub const cusparseSolvePolicy_t_CUSPARSE_SOLVE_POLICY_NO_LEVEL: cusparseSolvePolicy_t = 0;
pub const cusparseSolvePolicy_t_CUSPARSE_SOLVE_POLICY_USE_LEVEL: cusparseSolvePolicy_t = 1;
pub type cusparseSolvePolicy_t = ::std::os::raw::c_uint;
pub const cusparseColorAlg_t_CUSPARSE_COLOR_ALG0: cusparseColorAlg_t = 0;
pub const cusparseColorAlg_t_CUSPARSE_COLOR_ALG1: cusparseColorAlg_t = 1;
pub type cusparseColorAlg_t = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn cusparseCreate(handle: *mut cusparseHandle_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroy(handle: cusparseHandle_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseGetVersion(
        handle: cusparseHandle_t,
        version: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseGetProperty(
        type_: libraryPropertyType,
        value: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseGetErrorName(status: cusparseStatus_t) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn cusparseGetErrorString(status: cusparseStatus_t) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn cusparseSetStream(handle: cusparseHandle_t, streamId: cudaStream_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseGetStream(
        handle: cusparseHandle_t,
        streamId: *mut cudaStream_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseGetPointerMode(
        handle: cusparseHandle_t,
        mode: *mut cusparsePointerMode_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSetPointerMode(
        handle: cusparseHandle_t,
        mode: cusparsePointerMode_t,
    ) -> cusparseStatus_t;
}
pub type cusparseLoggerCallback_t = ::std::option::Option<
    unsafe extern "C" fn(
        logLevel: ::std::os::raw::c_int,
        functionName: *const ::std::os::raw::c_char,
        message: *const ::std::os::raw::c_char,
    ),
>;
unsafe extern "C" {
    pub fn cusparseLoggerSetCallback(callback: cusparseLoggerCallback_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseLoggerSetFile(file: *mut FILE) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseLoggerOpenFile(logFile: *const ::std::os::raw::c_char) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseLoggerSetLevel(level: ::std::os::raw::c_int) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseLoggerSetMask(mask: ::std::os::raw::c_int) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseLoggerForceDisable() -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateMatDescr(descrA: *mut cusparseMatDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyMatDescr(descrA: cusparseMatDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSetMatType(
        descrA: cusparseMatDescr_t,
        type_: cusparseMatrixType_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseGetMatType(descrA: cusparseMatDescr_t) -> cusparseMatrixType_t;
}
unsafe extern "C" {
    pub fn cusparseSetMatFillMode(
        descrA: cusparseMatDescr_t,
        fillMode: cusparseFillMode_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseGetMatFillMode(descrA: cusparseMatDescr_t) -> cusparseFillMode_t;
}
unsafe extern "C" {
    pub fn cusparseSetMatDiagType(
        descrA: cusparseMatDescr_t,
        diagType: cusparseDiagType_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseGetMatDiagType(descrA: cusparseMatDescr_t) -> cusparseDiagType_t;
}
unsafe extern "C" {
    pub fn cusparseSetMatIndexBase(
        descrA: cusparseMatDescr_t,
        base: cusparseIndexBase_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseGetMatIndexBase(descrA: cusparseMatDescr_t) -> cusparseIndexBase_t;
}
unsafe extern "C" {
    pub fn cusparseCreateCsric02Info(info: *mut csric02Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyCsric02Info(info: csric02Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateBsric02Info(info: *mut bsric02Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyBsric02Info(info: bsric02Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateCsrilu02Info(info: *mut csrilu02Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyCsrilu02Info(info: csrilu02Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateBsrilu02Info(info: *mut bsrilu02Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyBsrilu02Info(info: bsrilu02Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateBsrsv2Info(info: *mut bsrsv2Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyBsrsv2Info(info: bsrsv2Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateBsrsm2Info(info: *mut bsrsm2Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyBsrsm2Info(info: bsrsm2Info_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateCsru2csrInfo(info: *mut csru2csrInfo_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyCsru2csrInfo(info: csru2csrInfo_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateColorInfo(info: *mut cusparseColorInfo_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyColorInfo(info: cusparseColorInfo_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreatePruneInfo(info: *mut pruneInfo_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyPruneInfo(info: pruneInfo_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgemvi(
        handle: cusparseHandle_t,
        transA: cusparseOperation_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const f32,
        A: *const f32,
        lda: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        xVal: *const f32,
        xInd: *const ::std::os::raw::c_int,
        beta: *const f32,
        y: *mut f32,
        idxBase: cusparseIndexBase_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgemvi_bufferSize(
        handle: cusparseHandle_t,
        transA: cusparseOperation_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgemvi(
        handle: cusparseHandle_t,
        transA: cusparseOperation_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const f64,
        A: *const f64,
        lda: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        xVal: *const f64,
        xInd: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        idxBase: cusparseIndexBase_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgemvi_bufferSize(
        handle: cusparseHandle_t,
        transA: cusparseOperation_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgemvi(
        handle: cusparseHandle_t,
        transA: cusparseOperation_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const cuComplex,
        A: *const cuComplex,
        lda: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        xVal: *const cuComplex,
        xInd: *const ::std::os::raw::c_int,
        beta: *const cuComplex,
        y: *mut cuComplex,
        idxBase: cusparseIndexBase_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgemvi_bufferSize(
        handle: cusparseHandle_t,
        transA: cusparseOperation_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgemvi(
        handle: cusparseHandle_t,
        transA: cusparseOperation_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const cuDoubleComplex,
        A: *const cuDoubleComplex,
        lda: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        xVal: *const cuDoubleComplex,
        xInd: *const ::std::os::raw::c_int,
        beta: *const cuDoubleComplex,
        y: *mut cuDoubleComplex,
        idxBase: cusparseIndexBase_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgemvi_bufferSize(
        handle: cusparseHandle_t,
        transA: cusparseOperation_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrmv(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const f32,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        x: *const f32,
        beta: *const f32,
        y: *mut f32,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrmv(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const f64,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        x: *const f64,
        beta: *const f64,
        y: *mut f64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrmv(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const cuComplex,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        x: *const cuComplex,
        beta: *const cuComplex,
        y: *mut cuComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrmv(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const cuDoubleComplex,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        x: *const cuDoubleComplex,
        beta: *const cuDoubleComplex,
        y: *mut cuDoubleComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrxmv(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        sizeOfMask: ::std::os::raw::c_int,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const f32,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f32,
        bsrSortedMaskPtrA: *const ::std::os::raw::c_int,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedEndPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        x: *const f32,
        beta: *const f32,
        y: *mut f32,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrxmv(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        sizeOfMask: ::std::os::raw::c_int,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const f64,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f64,
        bsrSortedMaskPtrA: *const ::std::os::raw::c_int,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedEndPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        x: *const f64,
        beta: *const f64,
        y: *mut f64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrxmv(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        sizeOfMask: ::std::os::raw::c_int,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const cuComplex,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuComplex,
        bsrSortedMaskPtrA: *const ::std::os::raw::c_int,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedEndPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        x: *const cuComplex,
        beta: *const cuComplex,
        y: *mut cuComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrxmv(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        sizeOfMask: ::std::os::raw::c_int,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const cuDoubleComplex,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuDoubleComplex,
        bsrSortedMaskPtrA: *const ::std::os::raw::c_int,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedEndPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        x: *const cuDoubleComplex,
        beta: *const cuDoubleComplex,
        y: *mut cuDoubleComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXbsrsv2_zeroPivot(
        handle: cusparseHandle_t,
        info: bsrsv2Info_t,
        position: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrsv2_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *mut f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrsv2_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *mut f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrsv2_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *mut cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrsv2_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *mut cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrsv2_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *mut f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrsv2_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *mut f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrsv2_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *mut cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrsv2_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *mut cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrsv2_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrsv2_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrsv2_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrsv2_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrsv2_solve(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const f32,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        f: *const f32,
        x: *mut f32,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrsv2_solve(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const f64,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        f: *const f64,
        x: *mut f64,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrsv2_solve(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const cuComplex,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        f: *const cuComplex,
        x: *mut cuComplex,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrsv2_solve(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const cuDoubleComplex,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrsv2Info_t,
        f: *const cuDoubleComplex,
        x: *mut cuDoubleComplex,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrmm(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transB: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        kb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const f32,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        B: *const f32,
        ldb: ::std::os::raw::c_int,
        beta: *const f32,
        C: *mut f32,
        ldc: ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrmm(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transB: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        kb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const f64,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        B: *const f64,
        ldb: ::std::os::raw::c_int,
        beta: *const f64,
        C: *mut f64,
        ldc: ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrmm(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transB: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        kb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const cuComplex,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        B: *const cuComplex,
        ldb: ::std::os::raw::c_int,
        beta: *const cuComplex,
        C: *mut cuComplex,
        ldc: ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrmm(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transB: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        kb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const cuDoubleComplex,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        B: *const cuDoubleComplex,
        ldb: ::std::os::raw::c_int,
        beta: *const cuDoubleComplex,
        C: *mut cuDoubleComplex,
        ldc: ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXbsrsm2_zeroPivot(
        handle: cusparseHandle_t,
        info: bsrsm2Info_t,
        position: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrsm2_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrsm2_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrsm2_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrsm2_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrsm2_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transB: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrsm2_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transB: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrsm2_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transB: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrsm2_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transB: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrsm2_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrsm2_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrsm2_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrsm2_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrsm2_solve(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const f32,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        B: *const f32,
        ldb: ::std::os::raw::c_int,
        X: *mut f32,
        ldx: ::std::os::raw::c_int,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrsm2_solve(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const f64,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        B: *const f64,
        ldb: ::std::os::raw::c_int,
        X: *mut f64,
        ldx: ::std::os::raw::c_int,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrsm2_solve(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const cuComplex,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        B: *const cuComplex,
        ldb: ::std::os::raw::c_int,
        X: *mut cuComplex,
        ldx: ::std::os::raw::c_int,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrsm2_solve(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        transA: cusparseOperation_t,
        transXY: cusparseOperation_t,
        mb: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        alpha: *const cuDoubleComplex,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrsm2Info_t,
        B: *const cuDoubleComplex,
        ldb: ::std::os::raw::c_int,
        X: *mut cuDoubleComplex,
        ldx: ::std::os::raw::c_int,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsrilu02_numericBoost(
        handle: cusparseHandle_t,
        info: csrilu02Info_t,
        enable_boost: ::std::os::raw::c_int,
        tol: *mut f64,
        boost_val: *mut f32,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsrilu02_numericBoost(
        handle: cusparseHandle_t,
        info: csrilu02Info_t,
        enable_boost: ::std::os::raw::c_int,
        tol: *mut f64,
        boost_val: *mut f64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsrilu02_numericBoost(
        handle: cusparseHandle_t,
        info: csrilu02Info_t,
        enable_boost: ::std::os::raw::c_int,
        tol: *mut f64,
        boost_val: *mut cuComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsrilu02_numericBoost(
        handle: cusparseHandle_t,
        info: csrilu02Info_t,
        enable_boost: ::std::os::raw::c_int,
        tol: *mut f64,
        boost_val: *mut cuDoubleComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcsrilu02_zeroPivot(
        handle: cusparseHandle_t,
        info: csrilu02Info_t,
        position: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsrilu02_bufferSize(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *mut f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsrilu02_bufferSize(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *mut f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsrilu02_bufferSize(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *mut cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsrilu02_bufferSize(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *mut cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsrilu02_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedVal: *mut f32,
        csrSortedRowPtr: *const ::std::os::raw::c_int,
        csrSortedColInd: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsrilu02_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedVal: *mut f64,
        csrSortedRowPtr: *const ::std::os::raw::c_int,
        csrSortedColInd: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsrilu02_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedVal: *mut cuComplex,
        csrSortedRowPtr: *const ::std::os::raw::c_int,
        csrSortedColInd: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsrilu02_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedVal: *mut cuDoubleComplex,
        csrSortedRowPtr: *const ::std::os::raw::c_int,
        csrSortedColInd: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsrilu02_analysis(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsrilu02_analysis(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsrilu02_analysis(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsrilu02_analysis(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsrilu02(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA_valM: *mut f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsrilu02(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA_valM: *mut f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsrilu02(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA_valM: *mut cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsrilu02(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA_valM: *mut cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrilu02_numericBoost(
        handle: cusparseHandle_t,
        info: bsrilu02Info_t,
        enable_boost: ::std::os::raw::c_int,
        tol: *mut f64,
        boost_val: *mut f32,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrilu02_numericBoost(
        handle: cusparseHandle_t,
        info: bsrilu02Info_t,
        enable_boost: ::std::os::raw::c_int,
        tol: *mut f64,
        boost_val: *mut f64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrilu02_numericBoost(
        handle: cusparseHandle_t,
        info: bsrilu02Info_t,
        enable_boost: ::std::os::raw::c_int,
        tol: *mut f64,
        boost_val: *mut cuComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrilu02_numericBoost(
        handle: cusparseHandle_t,
        info: bsrilu02Info_t,
        enable_boost: ::std::os::raw::c_int,
        tol: *mut f64,
        boost_val: *mut cuDoubleComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXbsrilu02_zeroPivot(
        handle: cusparseHandle_t,
        info: bsrilu02Info_t,
        position: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrilu02_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrilu02_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrilu02_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrilu02_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrilu02_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrilu02_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrilu02_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrilu02_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrilu02_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrilu02_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrilu02_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrilu02_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsrilu02(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsrilu02(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsrilu02(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsrilu02(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsrilu02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcsric02_zeroPivot(
        handle: cusparseHandle_t,
        info: csric02Info_t,
        position: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsric02_bufferSize(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *mut f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsric02_bufferSize(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *mut f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsric02_bufferSize(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *mut cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsric02_bufferSize(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *mut cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsric02_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedVal: *mut f32,
        csrSortedRowPtr: *const ::std::os::raw::c_int,
        csrSortedColInd: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsric02_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedVal: *mut f64,
        csrSortedRowPtr: *const ::std::os::raw::c_int,
        csrSortedColInd: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsric02_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedVal: *mut cuComplex,
        csrSortedRowPtr: *const ::std::os::raw::c_int,
        csrSortedColInd: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsric02_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedVal: *mut cuDoubleComplex,
        csrSortedRowPtr: *const ::std::os::raw::c_int,
        csrSortedColInd: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsric02_analysis(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsric02_analysis(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsric02_analysis(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsric02_analysis(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsric02(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA_valM: *mut f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsric02(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA_valM: *mut f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsric02(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA_valM: *mut cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsric02(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA_valM: *mut cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        info: csric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXbsric02_zeroPivot(
        handle: cusparseHandle_t,
        info: bsric02Info_t,
        position: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsric02_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsric02_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsric02_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsric02_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsric02_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsric02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsric02_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsric02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsric02_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsric02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsric02_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockSize: ::std::os::raw::c_int,
        info: bsric02Info_t,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsric02_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        policy: cusparseSolvePolicy_t,
        pInputBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsric02_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        policy: cusparseSolvePolicy_t,
        pInputBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsric02_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        policy: cusparseSolvePolicy_t,
        pInputBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsric02_analysis(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *const cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        policy: cusparseSolvePolicy_t,
        pInputBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsric02(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsric02(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsric02(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsric02(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedVal: *mut cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        info: bsric02Info_t,
        policy: cusparseSolvePolicy_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgtsv2_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const f32,
        d: *const f32,
        du: *const f32,
        B: *const f32,
        ldb: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgtsv2_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const f64,
        d: *const f64,
        du: *const f64,
        B: *const f64,
        ldb: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgtsv2_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const cuComplex,
        d: *const cuComplex,
        du: *const cuComplex,
        B: *const cuComplex,
        ldb: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgtsv2_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const cuDoubleComplex,
        d: *const cuDoubleComplex,
        du: *const cuDoubleComplex,
        B: *const cuDoubleComplex,
        ldb: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgtsv2(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const f32,
        d: *const f32,
        du: *const f32,
        B: *mut f32,
        ldb: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgtsv2(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const f64,
        d: *const f64,
        du: *const f64,
        B: *mut f64,
        ldb: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgtsv2(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const cuComplex,
        d: *const cuComplex,
        du: *const cuComplex,
        B: *mut cuComplex,
        ldb: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgtsv2(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const cuDoubleComplex,
        d: *const cuDoubleComplex,
        du: *const cuDoubleComplex,
        B: *mut cuDoubleComplex,
        ldb: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgtsv2_nopivot_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const f32,
        d: *const f32,
        du: *const f32,
        B: *const f32,
        ldb: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgtsv2_nopivot_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const f64,
        d: *const f64,
        du: *const f64,
        B: *const f64,
        ldb: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgtsv2_nopivot_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const cuComplex,
        d: *const cuComplex,
        du: *const cuComplex,
        B: *const cuComplex,
        ldb: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgtsv2_nopivot_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const cuDoubleComplex,
        d: *const cuDoubleComplex,
        du: *const cuDoubleComplex,
        B: *const cuDoubleComplex,
        ldb: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgtsv2_nopivot(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const f32,
        d: *const f32,
        du: *const f32,
        B: *mut f32,
        ldb: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgtsv2_nopivot(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const f64,
        d: *const f64,
        du: *const f64,
        B: *mut f64,
        ldb: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgtsv2_nopivot(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const cuComplex,
        d: *const cuComplex,
        du: *const cuComplex,
        B: *mut cuComplex,
        ldb: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgtsv2_nopivot(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        dl: *const cuDoubleComplex,
        d: *const cuDoubleComplex,
        du: *const cuDoubleComplex,
        B: *mut cuDoubleComplex,
        ldb: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgtsv2StridedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        dl: *const f32,
        d: *const f32,
        du: *const f32,
        x: *const f32,
        batchCount: ::std::os::raw::c_int,
        batchStride: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgtsv2StridedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        dl: *const f64,
        d: *const f64,
        du: *const f64,
        x: *const f64,
        batchCount: ::std::os::raw::c_int,
        batchStride: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgtsv2StridedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        dl: *const cuComplex,
        d: *const cuComplex,
        du: *const cuComplex,
        x: *const cuComplex,
        batchCount: ::std::os::raw::c_int,
        batchStride: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgtsv2StridedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        dl: *const cuDoubleComplex,
        d: *const cuDoubleComplex,
        du: *const cuDoubleComplex,
        x: *const cuDoubleComplex,
        batchCount: ::std::os::raw::c_int,
        batchStride: ::std::os::raw::c_int,
        bufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgtsv2StridedBatch(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        dl: *const f32,
        d: *const f32,
        du: *const f32,
        x: *mut f32,
        batchCount: ::std::os::raw::c_int,
        batchStride: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgtsv2StridedBatch(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        dl: *const f64,
        d: *const f64,
        du: *const f64,
        x: *mut f64,
        batchCount: ::std::os::raw::c_int,
        batchStride: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgtsv2StridedBatch(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        dl: *const cuComplex,
        d: *const cuComplex,
        du: *const cuComplex,
        x: *mut cuComplex,
        batchCount: ::std::os::raw::c_int,
        batchStride: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgtsv2StridedBatch(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        dl: *const cuDoubleComplex,
        d: *const cuDoubleComplex,
        du: *const cuDoubleComplex,
        x: *mut cuDoubleComplex,
        batchCount: ::std::os::raw::c_int,
        batchStride: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgtsvInterleavedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        dl: *const f32,
        d: *const f32,
        du: *const f32,
        x: *const f32,
        batchCount: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgtsvInterleavedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        dl: *const f64,
        d: *const f64,
        du: *const f64,
        x: *const f64,
        batchCount: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgtsvInterleavedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        dl: *const cuComplex,
        d: *const cuComplex,
        du: *const cuComplex,
        x: *const cuComplex,
        batchCount: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgtsvInterleavedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        dl: *const cuDoubleComplex,
        d: *const cuDoubleComplex,
        du: *const cuDoubleComplex,
        x: *const cuDoubleComplex,
        batchCount: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgtsvInterleavedBatch(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        dl: *mut f32,
        d: *mut f32,
        du: *mut f32,
        x: *mut f32,
        batchCount: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgtsvInterleavedBatch(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        dl: *mut f64,
        d: *mut f64,
        du: *mut f64,
        x: *mut f64,
        batchCount: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgtsvInterleavedBatch(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        dl: *mut cuComplex,
        d: *mut cuComplex,
        du: *mut cuComplex,
        x: *mut cuComplex,
        batchCount: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgtsvInterleavedBatch(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        dl: *mut cuDoubleComplex,
        d: *mut cuDoubleComplex,
        du: *mut cuDoubleComplex,
        x: *mut cuDoubleComplex,
        batchCount: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgpsvInterleavedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        ds: *const f32,
        dl: *const f32,
        d: *const f32,
        du: *const f32,
        dw: *const f32,
        x: *const f32,
        batchCount: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgpsvInterleavedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        ds: *const f64,
        dl: *const f64,
        d: *const f64,
        du: *const f64,
        dw: *const f64,
        x: *const f64,
        batchCount: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgpsvInterleavedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        ds: *const cuComplex,
        dl: *const cuComplex,
        d: *const cuComplex,
        du: *const cuComplex,
        dw: *const cuComplex,
        x: *const cuComplex,
        batchCount: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgpsvInterleavedBatch_bufferSizeExt(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        ds: *const cuDoubleComplex,
        dl: *const cuDoubleComplex,
        d: *const cuDoubleComplex,
        du: *const cuDoubleComplex,
        dw: *const cuDoubleComplex,
        x: *const cuDoubleComplex,
        batchCount: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgpsvInterleavedBatch(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        ds: *mut f32,
        dl: *mut f32,
        d: *mut f32,
        du: *mut f32,
        dw: *mut f32,
        x: *mut f32,
        batchCount: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgpsvInterleavedBatch(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        ds: *mut f64,
        dl: *mut f64,
        d: *mut f64,
        du: *mut f64,
        dw: *mut f64,
        x: *mut f64,
        batchCount: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgpsvInterleavedBatch(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        ds: *mut cuComplex,
        dl: *mut cuComplex,
        d: *mut cuComplex,
        du: *mut cuComplex,
        dw: *mut cuComplex,
        x: *mut cuComplex,
        batchCount: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgpsvInterleavedBatch(
        handle: cusparseHandle_t,
        algo: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        ds: *mut cuDoubleComplex,
        dl: *mut cuDoubleComplex,
        d: *mut cuDoubleComplex,
        du: *mut cuDoubleComplex,
        dw: *mut cuDoubleComplex,
        x: *mut cuDoubleComplex,
        batchCount: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsrgeam2_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const f32,
        descrA: cusparseMatDescr_t,
        nnzA: ::std::os::raw::c_int,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        beta: *const f32,
        descrB: cusparseMatDescr_t,
        nnzB: ::std::os::raw::c_int,
        csrSortedValB: *const f32,
        csrSortedRowPtrB: *const ::std::os::raw::c_int,
        csrSortedColIndB: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const f32,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsrgeam2_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const f64,
        descrA: cusparseMatDescr_t,
        nnzA: ::std::os::raw::c_int,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        beta: *const f64,
        descrB: cusparseMatDescr_t,
        nnzB: ::std::os::raw::c_int,
        csrSortedValB: *const f64,
        csrSortedRowPtrB: *const ::std::os::raw::c_int,
        csrSortedColIndB: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const f64,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsrgeam2_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const cuComplex,
        descrA: cusparseMatDescr_t,
        nnzA: ::std::os::raw::c_int,
        csrSortedValA: *const cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        beta: *const cuComplex,
        descrB: cusparseMatDescr_t,
        nnzB: ::std::os::raw::c_int,
        csrSortedValB: *const cuComplex,
        csrSortedRowPtrB: *const ::std::os::raw::c_int,
        csrSortedColIndB: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const cuComplex,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsrgeam2_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const cuDoubleComplex,
        descrA: cusparseMatDescr_t,
        nnzA: ::std::os::raw::c_int,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        beta: *const cuDoubleComplex,
        descrB: cusparseMatDescr_t,
        nnzB: ::std::os::raw::c_int,
        csrSortedValB: *const cuDoubleComplex,
        csrSortedRowPtrB: *const ::std::os::raw::c_int,
        csrSortedColIndB: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const cuDoubleComplex,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcsrgeam2Nnz(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        nnzA: ::std::os::raw::c_int,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        descrB: cusparseMatDescr_t,
        nnzB: ::std::os::raw::c_int,
        csrSortedRowPtrB: *const ::std::os::raw::c_int,
        csrSortedColIndB: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        workspace: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsrgeam2(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const f32,
        descrA: cusparseMatDescr_t,
        nnzA: ::std::os::raw::c_int,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        beta: *const f32,
        descrB: cusparseMatDescr_t,
        nnzB: ::std::os::raw::c_int,
        csrSortedValB: *const f32,
        csrSortedRowPtrB: *const ::std::os::raw::c_int,
        csrSortedColIndB: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f32,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsrgeam2(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const f64,
        descrA: cusparseMatDescr_t,
        nnzA: ::std::os::raw::c_int,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        beta: *const f64,
        descrB: cusparseMatDescr_t,
        nnzB: ::std::os::raw::c_int,
        csrSortedValB: *const f64,
        csrSortedRowPtrB: *const ::std::os::raw::c_int,
        csrSortedColIndB: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f64,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsrgeam2(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const cuComplex,
        descrA: cusparseMatDescr_t,
        nnzA: ::std::os::raw::c_int,
        csrSortedValA: *const cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        beta: *const cuComplex,
        descrB: cusparseMatDescr_t,
        nnzB: ::std::os::raw::c_int,
        csrSortedValB: *const cuComplex,
        csrSortedRowPtrB: *const ::std::os::raw::c_int,
        csrSortedColIndB: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut cuComplex,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsrgeam2(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        alpha: *const cuDoubleComplex,
        descrA: cusparseMatDescr_t,
        nnzA: ::std::os::raw::c_int,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        beta: *const cuDoubleComplex,
        descrB: cusparseMatDescr_t,
        nnzB: ::std::os::raw::c_int,
        csrSortedValB: *const cuDoubleComplex,
        csrSortedRowPtrB: *const ::std::os::raw::c_int,
        csrSortedColIndB: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut cuDoubleComplex,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsrcolor(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        fractionToColor: *const f32,
        ncolors: *mut ::std::os::raw::c_int,
        coloring: *mut ::std::os::raw::c_int,
        reordering: *mut ::std::os::raw::c_int,
        info: cusparseColorInfo_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsrcolor(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        fractionToColor: *const f64,
        ncolors: *mut ::std::os::raw::c_int,
        coloring: *mut ::std::os::raw::c_int,
        reordering: *mut ::std::os::raw::c_int,
        info: cusparseColorInfo_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsrcolor(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        fractionToColor: *const f32,
        ncolors: *mut ::std::os::raw::c_int,
        coloring: *mut ::std::os::raw::c_int,
        reordering: *mut ::std::os::raw::c_int,
        info: cusparseColorInfo_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsrcolor(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        fractionToColor: *const f64,
        ncolors: *mut ::std::os::raw::c_int,
        coloring: *mut ::std::os::raw::c_int,
        reordering: *mut ::std::os::raw::c_int,
        info: cusparseColorInfo_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSnnz(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        A: *const f32,
        lda: ::std::os::raw::c_int,
        nnzPerRowCol: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDnnz(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        A: *const f64,
        lda: ::std::os::raw::c_int,
        nnzPerRowCol: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCnnz(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        A: *const cuComplex,
        lda: ::std::os::raw::c_int,
        nnzPerRowCol: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZnnz(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        A: *const cuDoubleComplex,
        lda: ::std::os::raw::c_int,
        nnzPerRowCol: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSnnz_compress(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        descr: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        nnzPerRow: *mut ::std::os::raw::c_int,
        nnzC: *mut ::std::os::raw::c_int,
        tol: f32,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDnnz_compress(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        descr: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        nnzPerRow: *mut ::std::os::raw::c_int,
        nnzC: *mut ::std::os::raw::c_int,
        tol: f64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCnnz_compress(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        descr: cusparseMatDescr_t,
        csrSortedValA: *const cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        nnzPerRow: *mut ::std::os::raw::c_int,
        nnzC: *mut ::std::os::raw::c_int,
        tol: cuComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZnnz_compress(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        descr: cusparseMatDescr_t,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        nnzPerRow: *mut ::std::os::raw::c_int,
        nnzC: *mut ::std::os::raw::c_int,
        tol: cuDoubleComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsr2csr_compress(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        nnzPerRow: *const ::std::os::raw::c_int,
        csrSortedValC: *mut f32,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        tol: f32,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsr2csr_compress(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        nnzPerRow: *const ::std::os::raw::c_int,
        csrSortedValC: *mut f64,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        tol: f64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsr2csr_compress(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuComplex,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        nnzPerRow: *const ::std::os::raw::c_int,
        csrSortedValC: *mut cuComplex,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        tol: cuComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsr2csr_compress(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        nnzPerRow: *const ::std::os::raw::c_int,
        csrSortedValC: *mut cuDoubleComplex,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        tol: cuDoubleComplex,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcoo2csr(
        handle: cusparseHandle_t,
        cooRowInd: *const ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        csrSortedRowPtr: *mut ::std::os::raw::c_int,
        idxBase: cusparseIndexBase_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcsr2coo(
        handle: cusparseHandle_t,
        csrSortedRowPtr: *const ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        cooRowInd: *mut ::std::os::raw::c_int,
        idxBase: cusparseIndexBase_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcsr2bsrNnz(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsr2bsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut f32,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsr2bsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut f64,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsr2bsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut cuComplex,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsr2bsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut cuDoubleComplex,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSbsr2csr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f32,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDbsr2csr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f64,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCbsr2csr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut cuComplex,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZbsr2csr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        blockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut cuDoubleComplex,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgebsr2gebsc_bufferSize(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgebsr2gebsc_bufferSize(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgebsr2gebsc_bufferSize(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgebsr2gebsc_bufferSize(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgebsr2gebsc_bufferSizeExt(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgebsr2gebsc_bufferSizeExt(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgebsr2gebsc_bufferSizeExt(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgebsr2gebsc_bufferSizeExt(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgebsr2gebsc(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const f32,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        bscVal: *mut f32,
        bscRowInd: *mut ::std::os::raw::c_int,
        bscColPtr: *mut ::std::os::raw::c_int,
        copyValues: cusparseAction_t,
        idxBase: cusparseIndexBase_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgebsr2gebsc(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const f64,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        bscVal: *mut f64,
        bscRowInd: *mut ::std::os::raw::c_int,
        bscColPtr: *mut ::std::os::raw::c_int,
        copyValues: cusparseAction_t,
        idxBase: cusparseIndexBase_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgebsr2gebsc(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const cuComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        bscVal: *mut cuComplex,
        bscRowInd: *mut ::std::os::raw::c_int,
        bscColPtr: *mut ::std::os::raw::c_int,
        copyValues: cusparseAction_t,
        idxBase: cusparseIndexBase_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgebsr2gebsc(
        handle: cusparseHandle_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        bsrSortedVal: *const cuDoubleComplex,
        bsrSortedRowPtr: *const ::std::os::raw::c_int,
        bsrSortedColInd: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        bscVal: *mut cuDoubleComplex,
        bscRowInd: *mut ::std::os::raw::c_int,
        bscColPtr: *mut ::std::os::raw::c_int,
        copyValues: cusparseAction_t,
        idxBase: cusparseIndexBase_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXgebsr2csr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgebsr2csr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f32,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgebsr2csr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f64,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgebsr2csr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut cuComplex,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgebsr2csr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut cuDoubleComplex,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsr2gebsr_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsr2gebsr_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsr2gebsr_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsr2gebsr_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsr2gebsr_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsr2gebsr_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsr2gebsr_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsr2gebsr_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcsr2gebsrNnz(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsr2gebsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut f32,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsr2gebsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut f64,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsr2gebsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut cuComplex,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsr2gebsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const cuDoubleComplex,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut cuDoubleComplex,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
        rowBlockDim: ::std::os::raw::c_int,
        colBlockDim: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgebsr2gebsr_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgebsr2gebsr_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgebsr2gebsr_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgebsr2gebsr_bufferSize(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgebsr2gebsr_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgebsr2gebsr_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgebsr2gebsr_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgebsr2gebsr_bufferSizeExt(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXgebsr2gebsrNnz(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSgebsr2gebsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f32,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut f32,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDgebsr2gebsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const f64,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut f64,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCgebsr2gebsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut cuComplex,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZgebsr2gebsr(
        handle: cusparseHandle_t,
        dirA: cusparseDirection_t,
        mb: ::std::os::raw::c_int,
        nb: ::std::os::raw::c_int,
        nnzb: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        bsrSortedValA: *const cuDoubleComplex,
        bsrSortedRowPtrA: *const ::std::os::raw::c_int,
        bsrSortedColIndA: *const ::std::os::raw::c_int,
        rowBlockDimA: ::std::os::raw::c_int,
        colBlockDimA: ::std::os::raw::c_int,
        descrC: cusparseMatDescr_t,
        bsrSortedValC: *mut cuDoubleComplex,
        bsrSortedRowPtrC: *mut ::std::os::raw::c_int,
        bsrSortedColIndC: *mut ::std::os::raw::c_int,
        rowBlockDimC: ::std::os::raw::c_int,
        colBlockDimC: ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateIdentityPermutation(
        handle: cusparseHandle_t,
        n: ::std::os::raw::c_int,
        p: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcoosort_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        cooRowsA: *const ::std::os::raw::c_int,
        cooColsA: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcoosortByRow(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        cooRowsA: *mut ::std::os::raw::c_int,
        cooColsA: *mut ::std::os::raw::c_int,
        P: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcoosortByColumn(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        cooRowsA: *mut ::std::os::raw::c_int,
        cooColsA: *mut ::std::os::raw::c_int,
        P: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcsrsort_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        csrRowPtrA: *const ::std::os::raw::c_int,
        csrColIndA: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcsrsort(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrRowPtrA: *const ::std::os::raw::c_int,
        csrColIndA: *mut ::std::os::raw::c_int,
        P: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcscsort_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        cscColPtrA: *const ::std::os::raw::c_int,
        cscRowIndA: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseXcscsort(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        cscColPtrA: *const ::std::os::raw::c_int,
        cscRowIndA: *mut ::std::os::raw::c_int,
        P: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsru2csr_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        csrVal: *mut f32,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsru2csr_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        csrVal: *mut f64,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsru2csr_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        csrVal: *mut cuComplex,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsru2csr_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        csrVal: *mut cuDoubleComplex,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsru2csr(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrVal: *mut f32,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsru2csr(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrVal: *mut f64,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsru2csr(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrVal: *mut cuComplex,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsru2csr(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrVal: *mut cuDoubleComplex,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScsr2csru(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrVal: *mut f32,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDcsr2csru(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrVal: *mut f64,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCcsr2csru(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrVal: *mut cuComplex,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseZcsr2csru(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrVal: *mut cuDoubleComplex,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *mut ::std::os::raw::c_int,
        info: csru2csrInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneDense2csr_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f32,
        lda: ::std::os::raw::c_int,
        threshold: *const f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const f32,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneDense2csr_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f64,
        lda: ::std::os::raw::c_int,
        threshold: *const f64,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const f64,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneDense2csrNnz(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f32,
        lda: ::std::os::raw::c_int,
        threshold: *const f32,
        descrC: cusparseMatDescr_t,
        csrRowPtrC: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneDense2csrNnz(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f64,
        lda: ::std::os::raw::c_int,
        threshold: *const f64,
        descrC: cusparseMatDescr_t,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneDense2csr(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f32,
        lda: ::std::os::raw::c_int,
        threshold: *const f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f32,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneDense2csr(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f64,
        lda: ::std::os::raw::c_int,
        threshold: *const f64,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f64,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneCsr2csr_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        threshold: *const f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const f32,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneCsr2csr_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        threshold: *const f64,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const f64,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneCsr2csrNnz(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        threshold: *const f32,
        descrC: cusparseMatDescr_t,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneCsr2csrNnz(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        threshold: *const f64,
        descrC: cusparseMatDescr_t,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneCsr2csr(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        threshold: *const f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f32,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneCsr2csr(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        threshold: *const f64,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f64,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneDense2csrByPercentage_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f32,
        lda: ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const f32,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneDense2csrByPercentage_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f64,
        lda: ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const f64,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneDense2csrNnzByPercentage(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f32,
        lda: ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrRowPtrC: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneDense2csrNnzByPercentage(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f64,
        lda: ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrRowPtrC: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneDense2csrByPercentage(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f32,
        lda: ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f32,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneDense2csrByPercentage(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        A: *const f64,
        lda: ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f64,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneCsr2csrByPercentage_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const f32,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneCsr2csrByPercentage_bufferSizeExt(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *const f64,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *const ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBufferSizeInBytes: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneCsr2csrNnzByPercentage(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneCsr2csrNnzByPercentage(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrSortedRowPtrC: *mut ::std::os::raw::c_int,
        nnzTotalDevHostPtr: *mut ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpruneCsr2csrByPercentage(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f32,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f32,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDpruneCsr2csrByPercentage(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnzA: ::std::os::raw::c_int,
        descrA: cusparseMatDescr_t,
        csrSortedValA: *const f64,
        csrSortedRowPtrA: *const ::std::os::raw::c_int,
        csrSortedColIndA: *const ::std::os::raw::c_int,
        percentage: f32,
        descrC: cusparseMatDescr_t,
        csrSortedValC: *mut f64,
        csrSortedRowPtrC: *const ::std::os::raw::c_int,
        csrSortedColIndC: *mut ::std::os::raw::c_int,
        info: pruneInfo_t,
        pBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
pub const cusparseCsr2CscAlg_t_CUSPARSE_CSR2CSC_ALG_DEFAULT: cusparseCsr2CscAlg_t = 1;
pub const cusparseCsr2CscAlg_t_CUSPARSE_CSR2CSC_ALG1: cusparseCsr2CscAlg_t = 1;
pub type cusparseCsr2CscAlg_t = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn cusparseCsr2cscEx2(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        csrVal: *const ::std::os::raw::c_void,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *const ::std::os::raw::c_int,
        cscVal: *mut ::std::os::raw::c_void,
        cscColPtr: *mut ::std::os::raw::c_int,
        cscRowInd: *mut ::std::os::raw::c_int,
        valType: cudaDataType,
        copyValues: cusparseAction_t,
        idxBase: cusparseIndexBase_t,
        alg: cusparseCsr2CscAlg_t,
        buffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCsr2cscEx2_bufferSize(
        handle: cusparseHandle_t,
        m: ::std::os::raw::c_int,
        n: ::std::os::raw::c_int,
        nnz: ::std::os::raw::c_int,
        csrVal: *const ::std::os::raw::c_void,
        csrRowPtr: *const ::std::os::raw::c_int,
        csrColInd: *const ::std::os::raw::c_int,
        cscVal: *mut ::std::os::raw::c_void,
        cscColPtr: *mut ::std::os::raw::c_int,
        cscRowInd: *mut ::std::os::raw::c_int,
        valType: cudaDataType,
        copyValues: cusparseAction_t,
        idxBase: cusparseIndexBase_t,
        alg: cusparseCsr2CscAlg_t,
        bufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
#[doc = "< Compressed Sparse Row (CSR)"]
pub const cusparseFormat_t_CUSPARSE_FORMAT_CSR: cusparseFormat_t = 1;
#[doc = "< Compressed Sparse Column (CSC)"]
pub const cusparseFormat_t_CUSPARSE_FORMAT_CSC: cusparseFormat_t = 2;
#[doc = "< Coordinate (COO) - Structure of Arrays"]
pub const cusparseFormat_t_CUSPARSE_FORMAT_COO: cusparseFormat_t = 3;
#[doc = "< Blocked ELL"]
pub const cusparseFormat_t_CUSPARSE_FORMAT_BLOCKED_ELL: cusparseFormat_t = 5;
#[doc = "< Blocked Compressed Sparse Row (BSR)"]
pub const cusparseFormat_t_CUSPARSE_FORMAT_BSR: cusparseFormat_t = 6;
#[doc = "< Sliced ELL"]
pub const cusparseFormat_t_CUSPARSE_FORMAT_SLICED_ELLPACK: cusparseFormat_t = 7;
pub type cusparseFormat_t = ::std::os::raw::c_uint;
#[doc = "< Column-Major Order - Matrix memory layout"]
pub const cusparseOrder_t_CUSPARSE_ORDER_COL: cusparseOrder_t = 1;
#[doc = "< Row-Major Order - Matrix memory layout"]
pub const cusparseOrder_t_CUSPARSE_ORDER_ROW: cusparseOrder_t = 2;
pub type cusparseOrder_t = ::std::os::raw::c_uint;
#[doc = "< 16-bit unsigned integer for matrix/vector\n< indices"]
pub const cusparseIndexType_t_CUSPARSE_INDEX_16U: cusparseIndexType_t = 1;
#[doc = "< 32-bit signed integer for matrix/vector indices"]
pub const cusparseIndexType_t_CUSPARSE_INDEX_32I: cusparseIndexType_t = 2;
#[doc = "< 64-bit signed integer for matrix/vector indices"]
pub const cusparseIndexType_t_CUSPARSE_INDEX_64I: cusparseIndexType_t = 3;
pub type cusparseIndexType_t = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseSpVecDescr {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseDnVecDescr {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseSpMatDescr {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseDnMatDescr {
    _unused: [u8; 0],
}
pub type cusparseSpVecDescr_t = *mut cusparseSpVecDescr;
pub type cusparseDnVecDescr_t = *mut cusparseDnVecDescr;
pub type cusparseSpMatDescr_t = *mut cusparseSpMatDescr;
pub type cusparseDnMatDescr_t = *mut cusparseDnMatDescr;
pub type cusparseConstSpVecDescr_t = *const cusparseSpVecDescr;
pub type cusparseConstDnVecDescr_t = *const cusparseDnVecDescr;
pub type cusparseConstSpMatDescr_t = *const cusparseSpMatDescr;
pub type cusparseConstDnMatDescr_t = *const cusparseDnMatDescr;
unsafe extern "C" {
    pub fn cusparseCreateSpVec(
        spVecDescr: *mut cusparseSpVecDescr_t,
        size: i64,
        nnz: i64,
        indices: *mut ::std::os::raw::c_void,
        values: *mut ::std::os::raw::c_void,
        idxType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateConstSpVec(
        spVecDescr: *mut cusparseConstSpVecDescr_t,
        size: i64,
        nnz: i64,
        indices: *const ::std::os::raw::c_void,
        values: *const ::std::os::raw::c_void,
        idxType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroySpVec(spVecDescr: cusparseConstSpVecDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpVecGet(
        spVecDescr: cusparseSpVecDescr_t,
        size: *mut i64,
        nnz: *mut i64,
        indices: *mut *mut ::std::os::raw::c_void,
        values: *mut *mut ::std::os::raw::c_void,
        idxType: *mut cusparseIndexType_t,
        idxBase: *mut cusparseIndexBase_t,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstSpVecGet(
        spVecDescr: cusparseConstSpVecDescr_t,
        size: *mut i64,
        nnz: *mut i64,
        indices: *mut *const ::std::os::raw::c_void,
        values: *mut *const ::std::os::raw::c_void,
        idxType: *mut cusparseIndexType_t,
        idxBase: *mut cusparseIndexBase_t,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpVecGetIndexBase(
        spVecDescr: cusparseConstSpVecDescr_t,
        idxBase: *mut cusparseIndexBase_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpVecGetValues(
        spVecDescr: cusparseSpVecDescr_t,
        values: *mut *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstSpVecGetValues(
        spVecDescr: cusparseConstSpVecDescr_t,
        values: *mut *const ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpVecSetValues(
        spVecDescr: cusparseSpVecDescr_t,
        values: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateDnVec(
        dnVecDescr: *mut cusparseDnVecDescr_t,
        size: i64,
        values: *mut ::std::os::raw::c_void,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateConstDnVec(
        dnVecDescr: *mut cusparseConstDnVecDescr_t,
        size: i64,
        values: *const ::std::os::raw::c_void,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyDnVec(dnVecDescr: cusparseConstDnVecDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDnVecGet(
        dnVecDescr: cusparseDnVecDescr_t,
        size: *mut i64,
        values: *mut *mut ::std::os::raw::c_void,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstDnVecGet(
        dnVecDescr: cusparseConstDnVecDescr_t,
        size: *mut i64,
        values: *mut *const ::std::os::raw::c_void,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDnVecGetValues(
        dnVecDescr: cusparseDnVecDescr_t,
        values: *mut *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstDnVecGetValues(
        dnVecDescr: cusparseConstDnVecDescr_t,
        values: *mut *const ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDnVecSetValues(
        dnVecDescr: cusparseDnVecDescr_t,
        values: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroySpMat(spMatDescr: cusparseConstSpMatDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMatGetFormat(
        spMatDescr: cusparseConstSpMatDescr_t,
        format: *mut cusparseFormat_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMatGetIndexBase(
        spMatDescr: cusparseConstSpMatDescr_t,
        idxBase: *mut cusparseIndexBase_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMatGetValues(
        spMatDescr: cusparseSpMatDescr_t,
        values: *mut *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstSpMatGetValues(
        spMatDescr: cusparseConstSpMatDescr_t,
        values: *mut *const ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMatSetValues(
        spMatDescr: cusparseSpMatDescr_t,
        values: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMatGetSize(
        spMatDescr: cusparseConstSpMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        nnz: *mut i64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMatGetStridedBatch(
        spMatDescr: cusparseConstSpMatDescr_t,
        batchCount: *mut ::std::os::raw::c_int,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCooSetStridedBatch(
        spMatDescr: cusparseSpMatDescr_t,
        batchCount: ::std::os::raw::c_int,
        batchStride: i64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCsrSetStridedBatch(
        spMatDescr: cusparseSpMatDescr_t,
        batchCount: ::std::os::raw::c_int,
        offsetsBatchStride: i64,
        columnsValuesBatchStride: i64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseBsrSetStridedBatch(
        spMatDescr: cusparseSpMatDescr_t,
        batchCount: ::std::os::raw::c_int,
        offsetsBatchStride: i64,
        columnsBatchStride: i64,
        ValuesBatchStride: i64,
    ) -> cusparseStatus_t;
}
pub const cusparseSpMatAttribute_t_CUSPARSE_SPMAT_FILL_MODE: cusparseSpMatAttribute_t = 0;
pub const cusparseSpMatAttribute_t_CUSPARSE_SPMAT_DIAG_TYPE: cusparseSpMatAttribute_t = 1;
pub type cusparseSpMatAttribute_t = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn cusparseSpMatGetAttribute(
        spMatDescr: cusparseConstSpMatDescr_t,
        attribute: cusparseSpMatAttribute_t,
        data: *mut ::std::os::raw::c_void,
        dataSize: usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMatSetAttribute(
        spMatDescr: cusparseSpMatDescr_t,
        attribute: cusparseSpMatAttribute_t,
        data: *mut ::std::os::raw::c_void,
        dataSize: usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateCsr(
        spMatDescr: *mut cusparseSpMatDescr_t,
        rows: i64,
        cols: i64,
        nnz: i64,
        csrRowOffsets: *mut ::std::os::raw::c_void,
        csrColInd: *mut ::std::os::raw::c_void,
        csrValues: *mut ::std::os::raw::c_void,
        csrRowOffsetsType: cusparseIndexType_t,
        csrColIndType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateConstCsr(
        spMatDescr: *mut cusparseConstSpMatDescr_t,
        rows: i64,
        cols: i64,
        nnz: i64,
        csrRowOffsets: *const ::std::os::raw::c_void,
        csrColInd: *const ::std::os::raw::c_void,
        csrValues: *const ::std::os::raw::c_void,
        csrRowOffsetsType: cusparseIndexType_t,
        csrColIndType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateCsc(
        spMatDescr: *mut cusparseSpMatDescr_t,
        rows: i64,
        cols: i64,
        nnz: i64,
        cscColOffsets: *mut ::std::os::raw::c_void,
        cscRowInd: *mut ::std::os::raw::c_void,
        cscValues: *mut ::std::os::raw::c_void,
        cscColOffsetsType: cusparseIndexType_t,
        cscRowIndType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateConstCsc(
        spMatDescr: *mut cusparseConstSpMatDescr_t,
        rows: i64,
        cols: i64,
        nnz: i64,
        cscColOffsets: *const ::std::os::raw::c_void,
        cscRowInd: *const ::std::os::raw::c_void,
        cscValues: *const ::std::os::raw::c_void,
        cscColOffsetsType: cusparseIndexType_t,
        cscRowIndType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCsrGet(
        spMatDescr: cusparseSpMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        nnz: *mut i64,
        csrRowOffsets: *mut *mut ::std::os::raw::c_void,
        csrColInd: *mut *mut ::std::os::raw::c_void,
        csrValues: *mut *mut ::std::os::raw::c_void,
        csrRowOffsetsType: *mut cusparseIndexType_t,
        csrColIndType: *mut cusparseIndexType_t,
        idxBase: *mut cusparseIndexBase_t,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstCsrGet(
        spMatDescr: cusparseConstSpMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        nnz: *mut i64,
        csrRowOffsets: *mut *const ::std::os::raw::c_void,
        csrColInd: *mut *const ::std::os::raw::c_void,
        csrValues: *mut *const ::std::os::raw::c_void,
        csrRowOffsetsType: *mut cusparseIndexType_t,
        csrColIndType: *mut cusparseIndexType_t,
        idxBase: *mut cusparseIndexBase_t,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCscGet(
        spMatDescr: cusparseSpMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        nnz: *mut i64,
        cscColOffsets: *mut *mut ::std::os::raw::c_void,
        cscRowInd: *mut *mut ::std::os::raw::c_void,
        cscValues: *mut *mut ::std::os::raw::c_void,
        cscColOffsetsType: *mut cusparseIndexType_t,
        cscRowIndType: *mut cusparseIndexType_t,
        idxBase: *mut cusparseIndexBase_t,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstCscGet(
        spMatDescr: cusparseConstSpMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        nnz: *mut i64,
        cscColOffsets: *mut *const ::std::os::raw::c_void,
        cscRowInd: *mut *const ::std::os::raw::c_void,
        cscValues: *mut *const ::std::os::raw::c_void,
        cscColOffsetsType: *mut cusparseIndexType_t,
        cscRowIndType: *mut cusparseIndexType_t,
        idxBase: *mut cusparseIndexBase_t,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCsrSetPointers(
        spMatDescr: cusparseSpMatDescr_t,
        csrRowOffsets: *mut ::std::os::raw::c_void,
        csrColInd: *mut ::std::os::raw::c_void,
        csrValues: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCscSetPointers(
        spMatDescr: cusparseSpMatDescr_t,
        cscColOffsets: *mut ::std::os::raw::c_void,
        cscRowInd: *mut ::std::os::raw::c_void,
        cscValues: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateBsr(
        spMatDescr: *mut cusparseSpMatDescr_t,
        brows: i64,
        bcols: i64,
        bnnz: i64,
        rowBlockSize: i64,
        colBlockSize: i64,
        bsrRowOffsets: *mut ::std::os::raw::c_void,
        bsrColInd: *mut ::std::os::raw::c_void,
        bsrValues: *mut ::std::os::raw::c_void,
        bsrRowOffsetsType: cusparseIndexType_t,
        bsrColIndType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
        order: cusparseOrder_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateConstBsr(
        spMatDescr: *mut cusparseConstSpMatDescr_t,
        brows: i64,
        bcols: i64,
        bnnz: i64,
        rowBlockDim: i64,
        colBlockDim: i64,
        bsrRowOffsets: *const ::std::os::raw::c_void,
        bsrColInd: *const ::std::os::raw::c_void,
        bsrValues: *const ::std::os::raw::c_void,
        bsrRowOffsetsType: cusparseIndexType_t,
        bsrColIndType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
        order: cusparseOrder_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateCoo(
        spMatDescr: *mut cusparseSpMatDescr_t,
        rows: i64,
        cols: i64,
        nnz: i64,
        cooRowInd: *mut ::std::os::raw::c_void,
        cooColInd: *mut ::std::os::raw::c_void,
        cooValues: *mut ::std::os::raw::c_void,
        cooIdxType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateConstCoo(
        spMatDescr: *mut cusparseConstSpMatDescr_t,
        rows: i64,
        cols: i64,
        nnz: i64,
        cooRowInd: *const ::std::os::raw::c_void,
        cooColInd: *const ::std::os::raw::c_void,
        cooValues: *const ::std::os::raw::c_void,
        cooIdxType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCooGet(
        spMatDescr: cusparseSpMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        nnz: *mut i64,
        cooRowInd: *mut *mut ::std::os::raw::c_void,
        cooColInd: *mut *mut ::std::os::raw::c_void,
        cooValues: *mut *mut ::std::os::raw::c_void,
        idxType: *mut cusparseIndexType_t,
        idxBase: *mut cusparseIndexBase_t,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstCooGet(
        spMatDescr: cusparseConstSpMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        nnz: *mut i64,
        cooRowInd: *mut *const ::std::os::raw::c_void,
        cooColInd: *mut *const ::std::os::raw::c_void,
        cooValues: *mut *const ::std::os::raw::c_void,
        idxType: *mut cusparseIndexType_t,
        idxBase: *mut cusparseIndexBase_t,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCooSetPointers(
        spMatDescr: cusparseSpMatDescr_t,
        cooRows: *mut ::std::os::raw::c_void,
        cooColumns: *mut ::std::os::raw::c_void,
        cooValues: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateBlockedEll(
        spMatDescr: *mut cusparseSpMatDescr_t,
        rows: i64,
        cols: i64,
        ellBlockSize: i64,
        ellCols: i64,
        ellColInd: *mut ::std::os::raw::c_void,
        ellValue: *mut ::std::os::raw::c_void,
        ellIdxType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateConstBlockedEll(
        spMatDescr: *mut cusparseConstSpMatDescr_t,
        rows: i64,
        cols: i64,
        ellBlockSize: i64,
        ellCols: i64,
        ellColInd: *const ::std::os::raw::c_void,
        ellValue: *const ::std::os::raw::c_void,
        ellIdxType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseBlockedEllGet(
        spMatDescr: cusparseSpMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        ellBlockSize: *mut i64,
        ellCols: *mut i64,
        ellColInd: *mut *mut ::std::os::raw::c_void,
        ellValue: *mut *mut ::std::os::raw::c_void,
        ellIdxType: *mut cusparseIndexType_t,
        idxBase: *mut cusparseIndexBase_t,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstBlockedEllGet(
        spMatDescr: cusparseConstSpMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        ellBlockSize: *mut i64,
        ellCols: *mut i64,
        ellColInd: *mut *const ::std::os::raw::c_void,
        ellValue: *mut *const ::std::os::raw::c_void,
        ellIdxType: *mut cusparseIndexType_t,
        idxBase: *mut cusparseIndexBase_t,
        valueType: *mut cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateSlicedEll(
        spMatDescr: *mut cusparseSpMatDescr_t,
        rows: i64,
        cols: i64,
        nnz: i64,
        sellValuesSize: i64,
        sliceSize: i64,
        sellSliceOffsets: *mut ::std::os::raw::c_void,
        sellColInd: *mut ::std::os::raw::c_void,
        sellValues: *mut ::std::os::raw::c_void,
        sellSliceOffsetsType: cusparseIndexType_t,
        sellColIndType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateConstSlicedEll(
        spMatDescr: *mut cusparseConstSpMatDescr_t,
        rows: i64,
        cols: i64,
        nnz: i64,
        sellValuesSize: i64,
        sliceSize: i64,
        sellSliceOffsets: *const ::std::os::raw::c_void,
        sellColInd: *const ::std::os::raw::c_void,
        sellValues: *const ::std::os::raw::c_void,
        sellSliceOffsetsType: cusparseIndexType_t,
        sellColIndType: cusparseIndexType_t,
        idxBase: cusparseIndexBase_t,
        valueType: cudaDataType,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateDnMat(
        dnMatDescr: *mut cusparseDnMatDescr_t,
        rows: i64,
        cols: i64,
        ld: i64,
        values: *mut ::std::os::raw::c_void,
        valueType: cudaDataType,
        order: cusparseOrder_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseCreateConstDnMat(
        dnMatDescr: *mut cusparseConstDnMatDescr_t,
        rows: i64,
        cols: i64,
        ld: i64,
        values: *const ::std::os::raw::c_void,
        valueType: cudaDataType,
        order: cusparseOrder_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDestroyDnMat(dnMatDescr: cusparseConstDnMatDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDnMatGet(
        dnMatDescr: cusparseDnMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        ld: *mut i64,
        values: *mut *mut ::std::os::raw::c_void,
        type_: *mut cudaDataType,
        order: *mut cusparseOrder_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstDnMatGet(
        dnMatDescr: cusparseConstDnMatDescr_t,
        rows: *mut i64,
        cols: *mut i64,
        ld: *mut i64,
        values: *mut *const ::std::os::raw::c_void,
        type_: *mut cudaDataType,
        order: *mut cusparseOrder_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDnMatGetValues(
        dnMatDescr: cusparseDnMatDescr_t,
        values: *mut *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseConstDnMatGetValues(
        dnMatDescr: cusparseConstDnMatDescr_t,
        values: *mut *const ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDnMatSetValues(
        dnMatDescr: cusparseDnMatDescr_t,
        values: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDnMatSetStridedBatch(
        dnMatDescr: cusparseDnMatDescr_t,
        batchCount: ::std::os::raw::c_int,
        batchStride: i64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDnMatGetStridedBatch(
        dnMatDescr: cusparseConstDnMatDescr_t,
        batchCount: *mut ::std::os::raw::c_int,
        batchStride: *mut i64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseAxpby(
        handle: cusparseHandle_t,
        alpha: *const ::std::os::raw::c_void,
        vecX: cusparseConstSpVecDescr_t,
        beta: *const ::std::os::raw::c_void,
        vecY: cusparseDnVecDescr_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseGather(
        handle: cusparseHandle_t,
        vecY: cusparseConstDnVecDescr_t,
        vecX: cusparseSpVecDescr_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseScatter(
        handle: cusparseHandle_t,
        vecX: cusparseConstSpVecDescr_t,
        vecY: cusparseDnVecDescr_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseRot(
        handle: cusparseHandle_t,
        c_coeff: *const ::std::os::raw::c_void,
        s_coeff: *const ::std::os::raw::c_void,
        vecX: cusparseSpVecDescr_t,
        vecY: cusparseDnVecDescr_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpVV_bufferSize(
        handle: cusparseHandle_t,
        opX: cusparseOperation_t,
        vecX: cusparseConstSpVecDescr_t,
        vecY: cusparseConstDnVecDescr_t,
        result: *const ::std::os::raw::c_void,
        computeType: cudaDataType,
        bufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpVV(
        handle: cusparseHandle_t,
        opX: cusparseOperation_t,
        vecX: cusparseConstSpVecDescr_t,
        vecY: cusparseConstDnVecDescr_t,
        result: *mut ::std::os::raw::c_void,
        computeType: cudaDataType,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
pub const cusparseSparseToDenseAlg_t_CUSPARSE_SPARSETODENSE_ALG_DEFAULT:
    cusparseSparseToDenseAlg_t = 0;
pub type cusparseSparseToDenseAlg_t = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn cusparseSparseToDense_bufferSize(
        handle: cusparseHandle_t,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseDnMatDescr_t,
        alg: cusparseSparseToDenseAlg_t,
        bufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSparseToDense(
        handle: cusparseHandle_t,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseDnMatDescr_t,
        alg: cusparseSparseToDenseAlg_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
pub const cusparseDenseToSparseAlg_t_CUSPARSE_DENSETOSPARSE_ALG_DEFAULT:
    cusparseDenseToSparseAlg_t = 0;
pub type cusparseDenseToSparseAlg_t = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn cusparseDenseToSparse_bufferSize(
        handle: cusparseHandle_t,
        matA: cusparseConstDnMatDescr_t,
        matB: cusparseSpMatDescr_t,
        alg: cusparseDenseToSparseAlg_t,
        bufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDenseToSparse_analysis(
        handle: cusparseHandle_t,
        matA: cusparseConstDnMatDescr_t,
        matB: cusparseSpMatDescr_t,
        alg: cusparseDenseToSparseAlg_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseDenseToSparse_convert(
        handle: cusparseHandle_t,
        matA: cusparseConstDnMatDescr_t,
        matB: cusparseSpMatDescr_t,
        alg: cusparseDenseToSparseAlg_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
pub const cusparseSpMVAlg_t_CUSPARSE_SPMV_ALG_DEFAULT: cusparseSpMVAlg_t = 0;
pub const cusparseSpMVAlg_t_CUSPARSE_SPMV_CSR_ALG1: cusparseSpMVAlg_t = 2;
pub const cusparseSpMVAlg_t_CUSPARSE_SPMV_CSR_ALG2: cusparseSpMVAlg_t = 3;
pub const cusparseSpMVAlg_t_CUSPARSE_SPMV_COO_ALG1: cusparseSpMVAlg_t = 1;
pub const cusparseSpMVAlg_t_CUSPARSE_SPMV_COO_ALG2: cusparseSpMVAlg_t = 4;
pub const cusparseSpMVAlg_t_CUSPARSE_SPMV_SELL_ALG1: cusparseSpMVAlg_t = 5;
pub type cusparseSpMVAlg_t = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn cusparseSpMV(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        vecX: cusparseConstDnVecDescr_t,
        beta: *const ::std::os::raw::c_void,
        vecY: cusparseDnVecDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpMVAlg_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMV_bufferSize(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        vecX: cusparseConstDnVecDescr_t,
        beta: *const ::std::os::raw::c_void,
        vecY: cusparseDnVecDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpMVAlg_t,
        bufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMV_preprocess(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        vecX: cusparseConstDnVecDescr_t,
        beta: *const ::std::os::raw::c_void,
        vecY: cusparseDnVecDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpMVAlg_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
pub const cusparseSpSVAlg_t_CUSPARSE_SPSV_ALG_DEFAULT: cusparseSpSVAlg_t = 0;
pub type cusparseSpSVAlg_t = ::std::os::raw::c_uint;
pub const cusparseSpSVUpdate_t_CUSPARSE_SPSV_UPDATE_GENERAL: cusparseSpSVUpdate_t = 0;
pub const cusparseSpSVUpdate_t_CUSPARSE_SPSV_UPDATE_DIAGONAL: cusparseSpSVUpdate_t = 1;
pub type cusparseSpSVUpdate_t = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseSpSVDescr {
    _unused: [u8; 0],
}
pub type cusparseSpSVDescr_t = *mut cusparseSpSVDescr;
unsafe extern "C" {
    pub fn cusparseSpSV_createDescr(descr: *mut cusparseSpSVDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpSV_destroyDescr(descr: cusparseSpSVDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpSV_bufferSize(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        vecX: cusparseConstDnVecDescr_t,
        vecY: cusparseDnVecDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpSVAlg_t,
        spsvDescr: cusparseSpSVDescr_t,
        bufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpSV_analysis(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        vecX: cusparseConstDnVecDescr_t,
        vecY: cusparseDnVecDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpSVAlg_t,
        spsvDescr: cusparseSpSVDescr_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpSV_solve(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        vecX: cusparseConstDnVecDescr_t,
        vecY: cusparseDnVecDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpSVAlg_t,
        spsvDescr: cusparseSpSVDescr_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpSV_updateMatrix(
        handle: cusparseHandle_t,
        spsvDescr: cusparseSpSVDescr_t,
        newValues: *mut ::std::os::raw::c_void,
        updatePart: cusparseSpSVUpdate_t,
    ) -> cusparseStatus_t;
}
pub const cusparseSpSMAlg_t_CUSPARSE_SPSM_ALG_DEFAULT: cusparseSpSMAlg_t = 0;
pub type cusparseSpSMAlg_t = ::std::os::raw::c_uint;
pub const cusparseSpSMUpdate_t_CUSPARSE_SPSM_UPDATE_GENERAL: cusparseSpSMUpdate_t = 0;
pub const cusparseSpSMUpdate_t_CUSPARSE_SPSM_UPDATE_DIAGONAL: cusparseSpSMUpdate_t = 1;
pub type cusparseSpSMUpdate_t = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseSpSMDescr {
    _unused: [u8; 0],
}
pub type cusparseSpSMDescr_t = *mut cusparseSpSMDescr;
unsafe extern "C" {
    pub fn cusparseSpSM_createDescr(descr: *mut cusparseSpSMDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpSM_destroyDescr(descr: cusparseSpSMDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpSM_bufferSize(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstDnMatDescr_t,
        matC: cusparseDnMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpSMAlg_t,
        spsmDescr: cusparseSpSMDescr_t,
        bufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpSM_analysis(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstDnMatDescr_t,
        matC: cusparseDnMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpSMAlg_t,
        spsmDescr: cusparseSpSMDescr_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpSM_solve(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstDnMatDescr_t,
        matC: cusparseDnMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpSMAlg_t,
        spsmDescr: cusparseSpSMDescr_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpSM_updateMatrix(
        handle: cusparseHandle_t,
        spsmDescr: cusparseSpSMDescr_t,
        newValues: *mut ::std::os::raw::c_void,
        updatePart: cusparseSpSMUpdate_t,
    ) -> cusparseStatus_t;
}
pub const cusparseSpMMAlg_t_CUSPARSE_SPMM_ALG_DEFAULT: cusparseSpMMAlg_t = 0;
pub const cusparseSpMMAlg_t_CUSPARSE_SPMM_COO_ALG1: cusparseSpMMAlg_t = 1;
pub const cusparseSpMMAlg_t_CUSPARSE_SPMM_COO_ALG2: cusparseSpMMAlg_t = 2;
pub const cusparseSpMMAlg_t_CUSPARSE_SPMM_COO_ALG3: cusparseSpMMAlg_t = 3;
pub const cusparseSpMMAlg_t_CUSPARSE_SPMM_COO_ALG4: cusparseSpMMAlg_t = 5;
pub const cusparseSpMMAlg_t_CUSPARSE_SPMM_CSR_ALG1: cusparseSpMMAlg_t = 4;
pub const cusparseSpMMAlg_t_CUSPARSE_SPMM_CSR_ALG2: cusparseSpMMAlg_t = 6;
pub const cusparseSpMMAlg_t_CUSPARSE_SPMM_CSR_ALG3: cusparseSpMMAlg_t = 12;
pub const cusparseSpMMAlg_t_CUSPARSE_SPMM_BLOCKED_ELL_ALG1: cusparseSpMMAlg_t = 13;
pub const cusparseSpMMAlg_t_CUSPARSE_SPMM_BSR_ALG1: cusparseSpMMAlg_t = 14;
pub type cusparseSpMMAlg_t = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn cusparseSpMM_bufferSize(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstDnMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseDnMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpMMAlg_t,
        bufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMM_preprocess(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstDnMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseDnMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpMMAlg_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMM(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstDnMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseDnMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpMMAlg_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
pub const cusparseSpGEMMAlg_t_CUSPARSE_SPGEMM_DEFAULT: cusparseSpGEMMAlg_t = 0;
pub const cusparseSpGEMMAlg_t_CUSPARSE_SPGEMM_CSR_ALG_DETERMINITIC: cusparseSpGEMMAlg_t = 1;
pub const cusparseSpGEMMAlg_t_CUSPARSE_SPGEMM_CSR_ALG_NONDETERMINITIC: cusparseSpGEMMAlg_t = 2;
pub const cusparseSpGEMMAlg_t_CUSPARSE_SPGEMM_ALG1: cusparseSpGEMMAlg_t = 3;
pub const cusparseSpGEMMAlg_t_CUSPARSE_SPGEMM_ALG2: cusparseSpGEMMAlg_t = 4;
pub const cusparseSpGEMMAlg_t_CUSPARSE_SPGEMM_ALG3: cusparseSpGEMMAlg_t = 5;
pub type cusparseSpGEMMAlg_t = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseSpGEMMDescr {
    _unused: [u8; 0],
}
pub type cusparseSpGEMMDescr_t = *mut cusparseSpGEMMDescr;
unsafe extern "C" {
    pub fn cusparseSpGEMM_createDescr(descr: *mut cusparseSpGEMMDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpGEMM_destroyDescr(descr: cusparseSpGEMMDescr_t) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpGEMM_workEstimation(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstSpMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseSpMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpGEMMAlg_t,
        spgemmDescr: cusparseSpGEMMDescr_t,
        bufferSize1: *mut usize,
        externalBuffer1: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpGEMM_getNumProducts(
        spgemmDescr: cusparseSpGEMMDescr_t,
        num_prods: *mut i64,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpGEMM_estimateMemory(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstSpMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseSpMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpGEMMAlg_t,
        spgemmDescr: cusparseSpGEMMDescr_t,
        chunk_fraction: f32,
        bufferSize3: *mut usize,
        externalBuffer3: *mut ::std::os::raw::c_void,
        bufferSize2: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpGEMM_compute(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstSpMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseSpMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpGEMMAlg_t,
        spgemmDescr: cusparseSpGEMMDescr_t,
        bufferSize2: *mut usize,
        externalBuffer2: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpGEMM_copy(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstSpMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseSpMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpGEMMAlg_t,
        spgemmDescr: cusparseSpGEMMDescr_t,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpGEMMreuse_workEstimation(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstSpMatDescr_t,
        matC: cusparseSpMatDescr_t,
        alg: cusparseSpGEMMAlg_t,
        spgemmDescr: cusparseSpGEMMDescr_t,
        bufferSize1: *mut usize,
        externalBuffer1: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpGEMMreuse_nnz(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstSpMatDescr_t,
        matC: cusparseSpMatDescr_t,
        alg: cusparseSpGEMMAlg_t,
        spgemmDescr: cusparseSpGEMMDescr_t,
        bufferSize2: *mut usize,
        externalBuffer2: *mut ::std::os::raw::c_void,
        bufferSize3: *mut usize,
        externalBuffer3: *mut ::std::os::raw::c_void,
        bufferSize4: *mut usize,
        externalBuffer4: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpGEMMreuse_copy(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstSpMatDescr_t,
        matC: cusparseSpMatDescr_t,
        alg: cusparseSpGEMMAlg_t,
        spgemmDescr: cusparseSpGEMMDescr_t,
        bufferSize5: *mut usize,
        externalBuffer5: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpGEMMreuse_compute(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstSpMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseSpMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpGEMMAlg_t,
        spgemmDescr: cusparseSpGEMMDescr_t,
    ) -> cusparseStatus_t;
}
pub const cusparseSDDMMAlg_t_CUSPARSE_SDDMM_ALG_DEFAULT: cusparseSDDMMAlg_t = 0;
pub type cusparseSDDMMAlg_t = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn cusparseSDDMM_bufferSize(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstDnMatDescr_t,
        matB: cusparseConstDnMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseSpMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSDDMMAlg_t,
        bufferSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSDDMM_preprocess(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstDnMatDescr_t,
        matB: cusparseConstDnMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseSpMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSDDMMAlg_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSDDMM(
        handle: cusparseHandle_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        alpha: *const ::std::os::raw::c_void,
        matA: cusparseConstDnMatDescr_t,
        matB: cusparseConstDnMatDescr_t,
        beta: *const ::std::os::raw::c_void,
        matC: cusparseSpMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSDDMMAlg_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cusparseSpMMOpPlan {
    _unused: [u8; 0],
}
pub type cusparseSpMMOpPlan_t = *mut cusparseSpMMOpPlan;
pub const cusparseSpMMOpAlg_t_CUSPARSE_SPMM_OP_ALG_DEFAULT: cusparseSpMMOpAlg_t = 0;
pub type cusparseSpMMOpAlg_t = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn cusparseSpMMOp_createPlan(
        handle: cusparseHandle_t,
        plan: *mut cusparseSpMMOpPlan_t,
        opA: cusparseOperation_t,
        opB: cusparseOperation_t,
        matA: cusparseConstSpMatDescr_t,
        matB: cusparseConstDnMatDescr_t,
        matC: cusparseDnMatDescr_t,
        computeType: cudaDataType,
        alg: cusparseSpMMOpAlg_t,
        addOperationNvvmBuffer: *const ::std::os::raw::c_void,
        addOperationBufferSize: usize,
        mulOperationNvvmBuffer: *const ::std::os::raw::c_void,
        mulOperationBufferSize: usize,
        epilogueNvvmBuffer: *const ::std::os::raw::c_void,
        epilogueBufferSize: usize,
        SpMMWorkspaceSize: *mut usize,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMMOp(
        plan: cusparseSpMMOpPlan_t,
        externalBuffer: *mut ::std::os::raw::c_void,
    ) -> cusparseStatus_t;
}
unsafe extern "C" {
    pub fn cusparseSpMMOp_destroyPlan(plan: cusparseSpMMOpPlan_t) -> cusparseStatus_t;
}
pub type __builtin_va_list = [__va_list_tag; 1usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __va_list_tag {
    pub gp_offset: ::std::os::raw::c_uint,
    pub fp_offset: ::std::os::raw::c_uint,
    pub overflow_arg_area: *mut ::std::os::raw::c_void,
    pub reg_save_area: *mut ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __va_list_tag"][::std::mem::size_of::<__va_list_tag>() - 24usize];
    ["Alignment of __va_list_tag"][::std::mem::align_of::<__va_list_tag>() - 8usize];
    ["Offset of field: __va_list_tag::gp_offset"]
        [::std::mem::offset_of!(__va_list_tag, gp_offset) - 0usize];
    ["Offset of field: __va_list_tag::fp_offset"]
        [::std::mem::offset_of!(__va_list_tag, fp_offset) - 4usize];
    ["Offset of field: __va_list_tag::overflow_arg_area"]
        [::std::mem::offset_of!(__va_list_tag, overflow_arg_area) - 8usize];
    ["Offset of field: __va_list_tag::reg_save_area"]
        [::std::mem::offset_of!(__va_list_tag, reg_save_area) - 16usize];
};
